[{"_id": "678d37425351fccd0b114dbb", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/gamestop_reviews.csv", "in": [], "out": ["678d37425351fccd0b114dbc"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "gamestop_reviews", "comment": "", "pipeline_id": "678d37425351fccd0b114db8", "sub_type": "HDFS", "stage_type": "source", "stage_attributes": {"url": "/FileStore/platform/uploadedSourceFiles/gamestop_reviews.csv", "filename": "gamestop_reviews.csv", "delimiter": ",", "file_type": "Delimeted", "dbfs_token": "", "dbfs_domain": "", "is_header": "Use Header Line", "domain": "http://172.31.59.158", "port": "40070", "dirPath": "/FileStore/platform", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}, "status": "new", "position": {"x": -80, "y": 160}, "shape_attributes": {"image": {"refHeight": "100%", "xlinkHref": "assets/svg/source/hdfs-source.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 14, "fill": "#333333", "type": "source", "text": "gamestop_reviews", "slug": "hdfs", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"inherited": true, "checked": true, "field": "index", "alias": "index", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "name", "alias": "name", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "brand", "alias": "brand", "type": "String", "position": 2}, {"inherited": true, "checked": true, "field": "sku", "alias": "sku", "type": "String", "position": 3}, {"inherited": true, "checked": true, "field": "reviewer_name", "alias": "reviewer_name", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "review_title", "alias": "review_title", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "review_description", "alias": "review_description", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "recommended_review", "alias": "recommended_review", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "verifed_purchaser", "alias": "verifed_purchaser", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "helpful_count", "alias": "helpful_count", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "not_helpful_count", "alias": "not_helpful_count", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "reviewed_at", "alias": "reviewed_at", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "rating", "alias": "rating", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "average_rating", "alias": "average_rating", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "reviews_count", "alias": "reviews_count", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "comment_id", "alias": "comment_id", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "uniq_id", "alias": "uniq_id", "type": "String", "position": 16}, {"inherited": true, "checked": true, "field": "scraped_at", "alias": "scraped_at", "type": "String", "position": 17}], "actual_schema": [{"inherited": true, "checked": true, "field": "index", "alias": "index", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "name", "alias": "name", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "brand", "alias": "brand", "type": "String", "position": 2}, {"inherited": true, "checked": true, "field": "sku", "alias": "sku", "type": "String", "position": 3}, {"inherited": true, "checked": true, "field": "reviewer_name", "alias": "reviewer_name", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "review_title", "alias": "review_title", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "review_description", "alias": "review_description", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "recommended_review", "alias": "recommended_review", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "verifed_purchaser", "alias": "verifed_purchaser", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "helpful_count", "alias": "helpful_count", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "not_helpful_count", "alias": "not_helpful_count", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "reviewed_at", "alias": "reviewed_at", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "rating", "alias": "rating", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "average_rating", "alias": "average_rating", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "reviews_count", "alias": "reviews_count", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "comment_id", "alias": "comment_id", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "uniq_id", "alias": "uniq_id", "type": "String", "position": 16}, {"inherited": true, "checked": true, "field": "scraped_at", "alias": "scraped_at", "type": "String", "position": 17}], "selected_schema": [], "created_at": "2025-01-19 17:32:50.386000", "joinSchema": [], "updated_at": "2025-01-19 17:44:03.773000", "__v": 0, "sampleData": [{"index": "5", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ninjaafro", "review_title": "Bugs", "review_description": "Picture quality is amazing, however within a week from purchasing the tv will not turn on unless I unplug and plug it back in.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229087196", "uniq_id": "4167ea1c-87b6-5dbd-a04b-56fc7d1948e9", "scraped_at": "16/01/2022 16:17:56"}, {"index": "7", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ohio Erik", "review_title": "Amazing 4k picture", "review_description": "I purchased this TV about 2 weeks ago and am blown away by the crisp, 4k picture.  I would definitely recommend this TV to someone considering an upgrade.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229044038", "uniq_id": "ea9ef1ba-d537-5b73-ab71-790616ef3258", "scraped_at": "16/01/2022 16:17:56"}, {"index": "9", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bob279", "review_title": "Great picture and a good price", "review_description": "Best price on an OLED tv. Has a great picture and is easy to navigate the menus and connect via apple or Android devices. I always bought LG OLED tvs because I liked their quality and features. But so far, Vizio is just as good and a better price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228960695", "uniq_id": "3e14ceea-0717-51ac-9edf-6b0d17b9f978", "scraped_at": "16/01/2022 16:17:56"}, {"index": "29", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Alejandro Rivera", "review_title": "Best Nintendo game I ever played!", "review_description": "Yoshi\u2018s crafted world is the best Nintendo game I ever played since Yoshi\u2018s woolly world! Lots of hard challenges to complete and it\u2019s so much fun! I love this game!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127405746", "uniq_id": "d92ea3bf-7fab-56df-802f-973a7be01387", "scraped_at": "16/01/2022 16:17:57"}, {"index": "45", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Animehipster", "review_title": "Great controller", "review_description": "Love the controller no probs with it the first one was lost but customer service made sure I got another one and in a timely manner", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192080051", "uniq_id": "1a337911-6166-5983-b5cf-944db19384c8", "scraped_at": "16/01/2022 16:17:57"}, {"index": "61", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bob81", "review_title": "Outstanding!", "review_description": "This OLED is Excellent, Very Easy to Operate. I imagine that Someone may Complain but I am certain that it will be a Tribal thing.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228712408", "uniq_id": "86570fa2-2141-573f-93ea-6368fedc9d0d", "scraped_at": "16/01/2022 16:17:57"}, {"index": "65", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Super Awesome!", "review_title": "Great features!", "review_description": "I love the tv and everything about it. I am a big fan of Vizio TVs, except for the sound, you will need a soundbar.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228632763", "uniq_id": "ee801ec0-c5cf-5655-8498-a9770f1a6921", "scraped_at": "16/01/2022 16:17:57"}, {"index": "68", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Canothegreat", "review_title": "Beautiful oled screen", "review_description": "Beautiful screen! Awesome price but full of bugs. On my set had to constantly unplug my tv from the  power supply to get it to come on. Worked well with my xbox series x just a few glitches here and there. No 4k 120 for the ps5 so I had to use the 4k 60 hdmi slot. I feel this tv is still in beta and needs alot of firmware updates to address system performance issues.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "2", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228545194", "uniq_id": "bb5c5e36-48cd-533e-8b32-ac1840944224", "scraped_at": "16/01/2022 16:17:57"}, {"index": "73", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Gaming reviews6", "review_title": "Amazing", "review_description": "Works good its perfect for people who game hard-core because it don't ware out as fast and last a long time cheaply priced perfect for your gaming set up!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "6", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191969147", "uniq_id": "aed215bd-32e5-5577-be72-8fe1a4273d12", "scraped_at": "16/01/2022 16:17:58"}, {"index": "81", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "MDB3", "review_title": "Family time", "review_description": "It fun for your family and if you have kids they will enjoy hours of fun", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127333838", "uniq_id": "b6dae06e-562f-5f67-b905-6a267a1b3147", "scraped_at": "16/01/2022 16:17:58"}, {"index": "82", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Bigbadbarry", "review_title": "Yoshi Fun!", "review_description": "I loved the Yoshi yarn game on the 3DS & I love the New Yoshi Yarn game on the switch.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "More color Yoshi\u2019s to choose from and a forward and backwards game in every course. It\u2019s a lovable game to play!\"", "name": "No: I don\u2019t recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "127332001", "not_helpful_count": "0a5b2e83-abcb-5537-a109-15a4b8c4f86d", "reviewed_at": "16/01/2022 16:17:58", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "85", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Diana finley", "review_title": "Yoshi's crafted world", "review_description": "One of the best games I've played in a while absolutely beautiful \u2764\ufe0f", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127319595", "uniq_id": "3025b560-5f5b-560b-9b15-d3c2ed1468b0", "scraped_at": "16/01/2022 16:17:58"}, {"index": "1. Cast is buggy. I can never get it to run first time. This is where I would focus most of the development time if I were Vizio.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "109", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "It's alright", "review_description": "The controller is great but I am experiencing stick drift just two days after receiving it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439957", "uniq_id": "3c5e7a8f-7138-5143-a3dd-81d9f2bf87e6", "scraped_at": "16/01/2022 16:17:58"}, {"index": "119", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "BoJackson87", "review_title": "Yoshi", "review_description": "I got this game so me and my gf can play together. Its fun and quirky but gets challenging", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127250112", "uniq_id": "41044c39-03df-5ca0-b0da-9219160fa67b", "scraped_at": "16/01/2022 16:17:58"}, {"index": "Make", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "140", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jb2827", "review_title": "Reasonable pricing, great OLED", "review_description": "I\u2019ve been very hesitant to upgrade to an OLED because I couldn\u2019t justify the cost. But when Vizio jumped into the OLED market, I was very excited. Other brands\u2019 \u201cbudget OLEDs\u201d cut corners, whereas Vizio\u2019s track record with reasonably priced premium TVs is outstanding.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "163", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "killer_kenne", "review_title": "Yoshi crushes another one outta the park!!", "review_description": "If you like yoshi, you can\u2019t go wrong here. Game is a masterpiece and provides decent challenges for even the seasoned gamer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127149546", "uniq_id": "eb70dff8-04e8-5a64-a14e-63186d060a0e", "scraped_at": "16/01/2022 16:17:59"}, {"index": "169", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Midwestmikey", "review_title": "Great game for kids and adults", "review_description": "An extremely fun game not only for my little sister but for me too! Easy enough for her to enjoy but it has some challenges that allows me to have fun as well.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127130838", "uniq_id": "342a7542-8347-5f47-a2a1-3210f50a807f", "scraped_at": "16/01/2022 16:17:59"}, {"index": "180", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Timbo88", "review_title": "Sticky R thumbstick Resistance.", "review_description": "This is my second series 2 elite controller. The first worked perfectly but this one looked so awesome that I had to have it! The only issue is that the R thumbstick is a little sticky when pushing to the L. No other direction, only the left. It is like there is a bit of resistance I have to push through before it releases and goes to the left. My first elite series 2 controller doesnt have this issue. It hampers FPS games a little, but not terribly. Otherwise a great controller and terrific looking product if your a Halo fan. I'm just a little bummed about the aiming thumbstick being slightly off.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191433462", "uniq_id": "a9ead4c5-5697-5920-8415-47091cdf9b62", "scraped_at": "16/01/2022 16:18:00"}, {"index": "205", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Bumzab", "review_title": "Do not touch this game with a 10-foot pole", "review_description": "\"Make no mistake - this IS Supreme Commander Lite. It almost feels like a very weak demo of SupCom 1, but worse. Even with the new research trees, you'll still end up with no where near the amount of units to choose from that you had with SupCom 1 and its tiers. Yeah, sometimes the tiers were annoying to work through and it took far too long in most instances to get anywhere close to maximizing your faction's potential in a single match in the first one - but this \"\"sequel\"\" has completely gutted it altogether. You'll likely end up mashing your mouse button or hotkey to churn out more of the exact same units.. over... and over... and over again because there's barely anything to choose from for unit diversity. The game requires the Steam client and an internet connection just to play. While it's true that most people these days have an internet connection", "recommended_review": " it's a rather unfortunate decision not only because you're excluding gamers but also because of potential happenstance scenarios. Steam goes down? Sorry", "verifed_purchaser": " you're out of luck. A few years down the road and something else happens(such as one of the companies going out of the business or whatnot) and you can't go back to play it for old times sake? Again", "helpful_count": " out of luck. Move to an area with limited connectivity? Same thing. I wish developers would stop going with this route", "not_helpful_count": " as it's very short-sighted. The graphics are significantly worse than the first one", "reviewed_at": " even on the highest settings. There are ONLY small maps", "rating": " and no larger maps to choose from. In the first version you had a large selection of maps", "average_rating": " in SupCom2 there are around 10-15", "reviews_count": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "comment_id": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "uniq_id": " don't make the same mistake I did. Do not buy this game.\"", "scraped_at": "No: I don\u2019t recommend this product"}, {"index": "207", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Kerican", "review_title": "SC 2 - mediocre game.", "review_description": "There were so high hopes for this game, as SC 1 and FA had left me hungry for more games like TA, yet unfortunately the wait would lead to disappointment. For those who enjoyed the similarities between TA and SC1 will be the biggest disappointment here. The economy of the previously mention games is utterly gone. No worrying about balancing energy usage and mass income with building and firing weapons, its all been removed. Its now a simple straight up, build up army, build base defenses, go conqueror enemy. Also gone are the tech levels, and weaker starting units, and teching up. Instead its replaced by research points that gradually come in much like all the other resources.  Without that element nothing really stood out in the game. Without the challenging economy, the campaign portion of the game becomes simple, build defenses, build army, repair defenses occasionally, attack enemy. Musically nothing really stood out, there may of been a couple times when I stopped to notice it, but again nothing inspiring. Storyline it also seems kinda lacking, it comes off like a Final Fantasy storyline mashed into brief conversations between 18 missions. There just simply is not enough there to make a great story, which once again left me greatly disappointed. Graphically the game was nice, and the small scale compared to SC1, meant I could actually stay somewhat zoomed in, to actually see the units, and not just commanding by click on the small icons. The movies were decent, just way to few of em to tell a good story. The game controls fairly well, being rather simple game now, its easy to pick up and get right into. Those with SC1 knowledge will have no trouble picking it up, as the mechanics are still basically identical to the first. Those used to Starcraft or C&C type games might take a bit longer but overall its not a hard game to get into or to start playing. The game probably has some strengths in multiplayer, as the unit balance does seem good, but I have not done any of that yet. Overall SC2 is not a bad game, everything seems to work, the game loaded smoothly, the game had no noticle lag, or slowdowns, but there is just nothing in it that simply makes it stand out. The game itself was fun to play through, and I did enjoy the limited story, and I may still by the sequel when it comes out (of course the ending had a cliff hanger for a sequel... what game doesn't do that no a days) yet this probably won't be a game I will touch all to often again now that I have beaten it. My suggestion is wait for the price to drop on this one if you simply want to see the continued storyline from the first, as the game offers very little of anything else to draw players away from other games.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "11 years ago", "rating": "3", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250436", "uniq_id": "fe7d8b34-e569-5186-8dce-57c70a13d88c", "scraped_at": "16/01/2022 16:18:00"}, {"index": "211", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Mkaz", "review_title": "Just short of 5", "review_description": "Waiting for the firmware update, then I can update to 5 stars", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227689648", "uniq_id": "ddd95f84-96b2-5c7d-bb7c-53c36e6df414", "scraped_at": "16/01/2022 16:18:00"}, {"index": "218", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Res136", "review_title": "Great picture", "review_description": "I\u2019ve always liked Visio. My first 50\u201d had one backlight diode burn out after 7yrs heavy use. Replaced with 50\u201d nano Visio. I was happy with the upgrade. Figured I could get a 55\u201d within the space constraint I had. Got this one as open box. And WOW! The picture POPS of vibrancy and consistent brightness.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227560725", "uniq_id": "b707b4b5-8acc-5c69-9279-f1029422274c", "scraped_at": "16/01/2022 16:18:00"}, {"index": "227", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Jrjbaj", "review_title": "Solid improvement over the Series 1", "review_description": "I had the series one which still works great, but decided to upgrade for the better paddles and internal battery. I am very pleased with this product not only because its Halo but it does feel like a substantial improvement over the previous generation. I'm still trash though...", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190807964", "uniq_id": "df9c8e11-c20e-5a8b-b090-975550d21a38", "scraped_at": "16/01/2022 16:18:00"}, {"index": "255", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Quando", "review_title": "No Slouch", "review_description": "Compared to the LG CX and Sony A8H the picture quality is way better than Sony's OLED.  THOSE Reviews online are biased and not accurate IMO.  Not a fan of smartcast yet over android TV. TV Has some firmware glitches.  Sound from TV speakers is OK not as nice as the Sony's; however this is a one Heck of An OLED with no black Crush....", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227489183", "uniq_id": "c3f3597b-51a8-5aec-a613-90242e40e8d8", "scraped_at": "16/01/2022 16:18:01"}, {"index": "273", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "TheArgyleWizard", "review_title": "Fun, Beautiful, and Appropriately Challenging", "review_description": "Yoshi\u2019s Crafted World is an amazing game! It is beautifully designed and appropriately challenging. The ability to play two players is also great as my wife and I like to game together. I would definitely recommend it to anyone who owns a switch, especially those who want to play some couch co-op.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126552237", "uniq_id": "0370dddc-2aae-508a-b44d-122e6d641c33", "scraped_at": "16/01/2022 16:18:02"}, {"index": "277", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "CWB!", "review_title": "Great features & Amazing color and clarity", "review_description": "Bought the TV right before Christmas - just amazing clarity and color", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227333306", "uniq_id": "049e260f-a2e3-5ee2-8422-c0b928f66317", "scraped_at": "16/01/2022 16:18:02"}, {"index": "Out of the box it had a firmware update. and then a week later another.  the 2nd was a bit rude", "name": " as it occurred in the middle of a show without warning.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "280", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TOGA Sarge", "review_title": "Mr", "review_description": "Very nice picture, nice sound, but, the OLED effect can cause severe headaches in certain people.  There should be some form of medical warning and available solutions.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "2", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227300137", "uniq_id": "deb423a5-9af3-5ba2-b788-afb7f1433960", "scraped_at": "16/01/2022 16:18:02"}, {"index": "297", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Shafi", "review_title": "Lot of issues with new OLED TV", "review_description": "i have been facing multiple issues from the time i got this TV.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3) same issue with chrome cast as well", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "314", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Heather0101", "review_title": "Kids will love it!!", "review_description": "Fun game for kids and adults. More relaxed then Mario and very kid friendly!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126495952", "uniq_id": "89c9e45b-2b49-5be2-9e62-52634bc7fad7", "scraped_at": "16/01/2022 16:18:03"}, {"index": "317", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ybreeze5", "review_title": "Great tv but needs patches as soon as possible", "review_description": "I love the tv but am on the fence on returning it or not. Fix everything people are complaining about. Also 1440p needs to be 120hz. Theres no reason why it shouldn't be. Get it together please", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227099195", "uniq_id": "f3a80eb1-718b-5c8d-b318-b18bc83fb20e", "scraped_at": "16/01/2022 16:18:03"}, {"index": "320", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jethro2312", "review_title": "EXCELLANT OLED UHD TV", "review_description": "Great picture quality and very easy to set up. Would highly recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226961718", "uniq_id": "93e6fc6f-7bf6-5a2e-b4a0-834fc2475980", "scraped_at": "16/01/2022 16:18:03"}, {"index": "322", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jojo2414", "review_title": "Awesome", "review_description": "Bought the oled Visio over the Samsung q series. Very happy except sometimes the input switches from one to another happen 2 times", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226923078", "uniq_id": "f864ba04-27e1-5673-875f-6fd69443fb3e", "scraped_at": "16/01/2022 16:18:03"}, {"index": "324", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "McFang", "review_title": "Troublesome TV with amazing potential", "review_description": "I really want to love this TV. The picture quality is amazing. The smart cast interface is solid, and it's all packeged under an beatable price. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "This is still a really good TV. But the growing pains right now would keep me from recommending it to others. (I'm coming from a 2018 Vizio P series)\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "3", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "226910861", "not_helpful_count": "02481162-152d-5b33-ba5a-5136b0686613", "reviewed_at": "16/01/2022 16:18:03", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "343", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "kschneider1231", "review_title": "Yoshi\u2019s Crafted World", "review_description": "If you like the gameplay of Yoshi\u2019s Island, the art style of Yoshi\u2019s Woolly World, then Yoshi\u2019s Crafted World is the gamefor you... and the family!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126315942", "uniq_id": "aac40f5b-5309-54ee-b48f-8cef2b574aa1", "scraped_at": "16/01/2022 16:18:04"}, {"index": "348", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "SDotRinney", "review_title": "Great picture great sound overall a great TV", "review_description": "About my TV last month I love it love everything about it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226863307", "uniq_id": "213d7265-2a67-5a82-8be4-aedcc9d26874", "scraped_at": "16/01/2022 16:18:04"}, {"index": "This has a design that feels good in the hands", "name": " it is not bulky or hard to work.  ", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "363", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "RachelA1020", "review_title": "Very good but not perfect.", "review_description": "[This review was collected as part of a promotion.] The pros: *feels almost identical to the official Nintendo pro controller.  ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "The cons:", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "369", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "Sarge97502", "review_title": "Wrc8", "review_description": "Good game, need to spend some more time playing it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "136798584", "uniq_id": "0cf0d647-5307-585d-8435-a37e7f419aa3", "scraped_at": "16/01/2022 16:18:04"}, {"index": "385", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Tom42", "review_title": "Great picture", "review_description": "Bought for picture quality and I am not disappointed. It is fabulous. I am actually surprised at how wonderful the display is in my home. Very satisfied and would buy again. If it goes on sale anytime soon I will buy another one for another room in my home.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226732331", "uniq_id": "23656563-b23a-5a13-b5c5-5ab4eaabf6e9", "scraped_at": "16/01/2022 16:18:05"}, {"index": "399", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "M3WILKERSON", "review_title": "So retro!", "review_description": "[This review was collected as part of a promotion.] This works perfectly and has alot of extra controls and features.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121884636", "uniq_id": "2d355f38-1266-5775-9058-b21faddb6072", "scraped_at": "16/01/2022 16:18:05"}, {"index": "408", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Simi90", "review_title": "Great game", "review_description": "Overall great game. Interesting and has different elements than other Yoshi games to date. My son absolutely loves it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126258784", "uniq_id": "e5c8c18d-9848-59fe-9d4a-12c604a675b0", "scraped_at": "16/01/2022 16:18:05"}, {"index": "416", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "adrianiii", "review_title": "Great picture! Great sound!", "review_description": "I've been looking at the new OLED model tvs for a while and I'm so glad I finally purchased my very own OLED 4K tv.  The picture is incredible even if what you're watching isn't in High Def.  High def channels and movies look so good but the 4K programming is insanely sharp. It looks as if you're actually there", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226663884", "uniq_id": "268a103b-4fb8-5479-8872-9cb3d3383705", "scraped_at": "16/01/2022 16:18:05"}, {"index": "Xbox Series x\"", "name": "yes: I recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "3", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "226623767", "not_helpful_count": "6e496bf1-e93c-58ac-8889-a3a9b9b69afa", "reviewed_at": "16/01/2022 16:18:05", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "423", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Pvtcarlswife", "review_title": "Great bonus features and love graphics", "review_description": "[This review was collected as part of a promotion.] I got this for my son and grandson who play the switch together. My son is an old school Nintendo fan so when I saw this with the old graphics I got it immediately. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "He absolutely loves it. It linked up easily and is user friendly. ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "444", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Johnwicked", "review_title": "Almost perfect", "review_description": "I bought this TV about a month ago. The picture is out of this world good. Since about th 2nd firmware update the TV does not always turn on. I had worked for Geek squad in the past so I know how these products work It is not user error. I contacted support through chat and they say it is not a known issue. If you go on about forums you can see it is a widespread problem. I'd this would be corrected I try would be a 5 star review. I am out of my return window so I certainly hope this issue is corrected.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226599103", "uniq_id": "a55472fc-0d7a-5056-b86f-64b5c181a6cb", "scraped_at": "16/01/2022 16:18:06"}, {"index": "446", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "GayleT", "review_title": "Vizio OLED65 Class 4K HDR Smart TV", "review_description": "Got less than a month ago, was simple to set up and the picture/sound are great!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226596552", "uniq_id": "70d90ef2-c011-5264-ba37-3b63dfe85cac", "scraped_at": "16/01/2022 16:18:06"}, {"index": "450", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Especialsov", "review_title": "Vizio Has finally joined the ranks of OLED", "review_description": "Excellent on picture quality. The only issue that kept me from giving it a five star rating was the software and intuitive control. Not too snappy or fast enough but is workable. Doesn\u2019t let other apps to be added like ESPN and so forth. Also there is an issue with hdmi port 4. I tried adding a fire stick to this port and it will not pick up the signal. The stick doesn\u2019t fit on the other three ports in the back. But as far as the picture quality is right up there with the other OLED television from other competitors. For the Black Friday price I paid in comparison to the competition it cannot be beat. No remorse whatsoever on that. Also the picture quality is excellent. Some calibration maybe required for those videophile fans like myself. But is an excellent choice if you can live with the small glitches I mentioned. Oh the remote should have been upgraded. The remote is not great for a television of this caliber. It should had came with a better clicker in my view.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226561343", "uniq_id": "51236317-a0cc-5597-af24-606c661321b0", "scraped_at": "16/01/2022 16:18:06"}, {"index": "464", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "HolgerHelmut", "review_title": "Great value", "review_description": "I got the OLED 55 and I love it but it depends on your needs. The TV itself is gorgeous. It has fantastic picture quality and supports lots of outputs and HD formats as well as smart integration. But it is Web-OS not Android. I don\u2019t care because I use Apple TV but.....if you rely on the build-in smart OS of your TV...Web-OS is ...well it sucks.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226544974", "uniq_id": "9f5825e8-5f5c-5377-b046-9d39eec764a8", "scraped_at": "16/01/2022 16:18:07"}, {"index": "468", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Fabioshy", "review_title": "Perfection in all ways", "review_description": "It is perfect from the start I however am still waiting for the vrr update as I wanna use vrr with 120hz but everything else works like a charm", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226530075", "uniq_id": "24c43f48-c774-5dd0-8461-06df8ce1e414", "scraped_at": "16/01/2022 16:18:07"}, {"index": "472", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "chrissyfire", "review_title": "Great picture", "review_description": "Very pleased with the quality of this Tv, wish there was a app for VRV and Funimation. Fair amount of HDMI for my many gaming consoles and VR/streaming computer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226511467", "uniq_id": "315efed1-14d3-5c84-a384-7787e64c9d65", "scraped_at": "16/01/2022 16:18:07"}, {"index": "475", "name": "Fortnite Solo Mode Core Ex Series 8 Action Figure", "brand": "Jazwares", "sku": "232574", "reviewer_name": "Nikxons Dad", "review_title": "Fort nite figures", "review_description": "The kids love it!!! Don\u2019t really have a review but they definitely have been playing with it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "5", "reviews_count": "4", "comment_id": "190783256", "uniq_id": "e311cd0b-1ae2-58c1-834a-a1c931d51442", "scraped_at": "16/01/2022 16:18:07"}, {"index": "486", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Robert.Rob", "review_title": "Great TV", "review_description": "We\u2019ve had the TV up and running for two days. So far, it\u2019s been an amazing addition to our HomeKit connected home.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226509543", "uniq_id": "cd39e728-95d5-59b9-b12b-7c91ab92de88", "scraped_at": "16/01/2022 16:18:07"}, {"index": "511", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TexasTV", "review_title": "Beautiful display", "review_description": "We purchased this TV a few weeks ago to replace an older Samsung. We are very happy with the quality of the TV. Vizio is definitely stepping up their game. However, a large issue we had is the power cable is not made correctly for the TV. We kind of have to wiggle it in, but it needs to be L-shaped. We were also extremely worried having to lay it down when installing the base. It is very thin and sleek, but it is deceptively heavy. Two of us were able to set it up and did not have any damage. They have stickers on where to not hold and to hold that do help. A small issue with the TV is that it goes dark after a very short period of time, we figure we can adjust this, however, it is annoying that the Chromecast cannot turn on the TV. The show may start playing, but you have to find the remote to turn the TV on if it was off. Overall, we are happy with our purchase and think the technology in the TV is better than what a lot of the content you watch is recorded in. We expect to have many years out of the TV and think the shows will catch up to its technology.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226475194", "uniq_id": "6bd21118-2e50-5447-940b-895932d21050", "scraped_at": "16/01/2022 16:18:08"}, {"index": "One being the bugs. Like VRR not working when 4K 120 is enabled on Game Consoles. ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "516", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "rerun", "review_title": "Eventually....It's gets AWESOME!", "review_description": "At first when setting up the tv and hooking up my PS5, things were not looking 4k at all. At first, the HDMI slots were giving a grainy picture that did nothing on screen so I had to unplug the TV and start again. Even at times switching between sources would put the TV in a hiccup and would not respond to any commands...unplug and start again.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "520", "name": "License 2 Play Toys Cats vs Pickles Mystery Collectible 3-in Figure", "brand": "License 2 Play", "sku": "321738", "reviewer_name": "Lizziebear500", "review_title": "Only at GameStop", "review_description": "They exclusively sell these at GameStop only, which makes them more valuable.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "17 days ago", "rating": "5", "average_rating": "5", "reviews_count": "5", "comment_id": "194293192", "uniq_id": "4d99cbd6-36a8-5456-8625-30f123cf9ebd", "scraped_at": "16/01/2022 16:18:08"}, {"index": "541", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "WillDaBeastBD", "review_title": "Celebrate 20 years of Xbox with comfort and joy.", "review_description": "Awesome Xbox controller!  Exceeded my expectations.  Love the green grips, and the transparent front shell.  Makes me proud to be an Xbox fan for 20 years now.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "20 hours ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "198679885", "uniq_id": "2330a036-9a1a-5826-a2d4-241950d59eff", "scraped_at": "16/01/2022 16:18:09"}, {"index": "546", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "Yoan", "review_title": "Xbox has the best controller.", "review_description": "I love the textures on the back is so much better than the regular ones. A great addition to my small collection.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "20 days ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "194076890", "uniq_id": "4cf24bf2-8511-5dfb-83b3-352e81e4ce9e", "scraped_at": "16/01/2022 16:18:09"}, {"index": "549", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "HintOfMayhem", "review_title": "Awesome", "review_description": "The new Xbox controllers are refined to near perfection. This translucent design is just what was waiting for", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "25 days ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "193412547", "uniq_id": "d4ce64a4-dc34-5978-a0ef-1b598862be84", "scraped_at": "16/01/2022 16:18:09"}, {"index": "555", "name": "STORY OF SEASONS: Friends of Mineral Town  - PlayStation 4", "brand": "XSEED Games", "sku": "300917", "reviewer_name": "Neon_Tulips", "review_title": "Addicting Little Game But Pretty Bare Bones", "review_description": "Take this with a grain of salt as I've never played the original version. But it's a perfectly serviceable SOS game; pretty fun, addicting even, but doesn't go out of it's way to be anything spectacular. The character portraits are great, but the 3D models are sub par. The gameplay is fun and gives you plenty to do and unlock, but the Fatigue animations have no right being that long and often, and seems it was only put in there to pad out the game and/or annoy you. There are also issues of you getting stuck in your horse after you dismount, and getting blocked by villagers (you have to wiggle to get unstuck) which could've been avoided if they made the hitboxes a little smaller. As much as I criticize; I still get a lot of enjoyment out of it. I love taking care of my animals and wooing the bachelors/bachelorettes (the dialogue is cute and funny too). If you like the SOS or the HM series I believe you will enjoy it; it's just a shame that it's pretty bare bones.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "3", "average_rating": "4.6667", "reviews_count": "6", "comment_id": "190290831", "uniq_id": "7a2312e4-8c78-514e-88af-d88a92183dec", "scraped_at": "16/01/2022 16:18:09"}, {"index": "568", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "subratam99", "review_title": "Excellent picture quality,", "review_description": "It is a good product with excellent picture quality.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226251069", "uniq_id": "6e77ce93-0237-5ed7-a8d1-af3bb8bb4e79", "scraped_at": "16/01/2022 16:18:09"}, {"index": "So far I only have 2 minor criticisms. ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "584", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "Daniel Saini", "review_title": "Art", "review_description": "Beautiful representation of Japanese folklore through ukiyo-e like cellshading. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "594", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "CyberWRAT", "review_title": "Look out for the blacklight", "review_description": "Big xbox fan, this is one of the coolest controllers o have held. Pretty awesome when you look at the box with a blacklight you see the original DUKE controller shadowed in.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "191759885", "uniq_id": "03d8bc6f-83af-5580-a4a5-db47f606a410", "scraped_at": "16/01/2022 16:18:09"}, {"index": "612", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "TaylersGirlfriend", "review_title": "Okami", "review_description": "I do not really appreciate all the talking because it sounds extremely weird, but besides that everything is good the plot is great and the art is wonderful.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.6512", "reviews_count": "129", "comment_id": "123314516", "uniq_id": "9d90baf1-7ec7-5ed4-97ee-cc7e60fa49f3", "scraped_at": "16/01/2022 16:18:09"}, {"index": "617", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "FoxfireLockhart", "review_title": "Beautiful Game and Fun to Play", "review_description": "I wanted to play Okami from the time it was released but it wasn't available for Playstation. Now that it is I am playing almost every day and enjoying the heck out of it. The only complaint I have is the camera is a bit tricky to work with, but I'm not an avid game player so maybe for someone who plays more often it's not as big a deal. Still deserves five stars!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6512", "reviews_count": "129", "comment_id": "122696522", "uniq_id": "4338f942-4488-5e00-a710-30f372855afb", "scraped_at": "16/01/2022 16:18:09"}, {"index": "625", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Willie OLED 55", "review_title": "Overall, Amazing Performance", "review_description": "It is a great experience to sit and watch a movie, cable network, sports, etc. with this TV.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "225783666", "uniq_id": "d93711b2-48ca-5c77-a454-8b701c5a15d3", "scraped_at": "16/01/2022 16:18:10"}, {"index": "629", "name": "LucidSound LS35X Black Direct Connect Wireless Gaming Headset for Xbox One", "brand": "LucidSound", "sku": "150229", "reviewer_name": "Jferron", "review_title": "Super Good!!!", "review_description": "My son loves them and says\u2026\u201d works super good\u201d lol, he\u2019s so happy! Great purchase", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "13 days ago", "rating": "5", "average_rating": "4.125", "reviews_count": "56", "comment_id": "194580031", "uniq_id": "d1332f13-b475-5b7f-ac9f-c709f6d37d32", "scraped_at": "16/01/2022 16:18:10"}, {"index": "630", "name": "LucidSound LS35X Black Direct Connect Wireless Gaming Headset for Xbox One", "brand": "LucidSound", "sku": "150229", "reviewer_name": "Tina mateo", "review_title": "Headset", "review_description": "Very comfortable. Love the base and quality sound.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "18 days ago", "rating": "4", "average_rating": "4.125", "reviews_count": "56", "comment_id": "194240466", "uniq_id": "816693f2-6813-595d-b3ab-3835b735cd66", "scraped_at": "16/01/2022 16:18:10"}, {"index": "634", "name": "LucidSound LS35X Black Direct Connect Wireless Gaming Headset for Xbox One", "brand": "LucidSound", "sku": "150229", "reviewer_name": "JdMtheirishking", "review_title": "X one LS35X", "review_description": "Great headset, clear hearding, great for first person shooters.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.125", "reviews_count": "56", "comment_id": "191422699", "uniq_id": "b9bd2768-e641-5e8f-b7f7-e83f257f7ddf", "scraped_at": "16/01/2022 16:18:10"}, {"index": "635", "name": "LucidSound LS35X Black Direct Connect Wireless Gaming Headset for Xbox One", "brand": "LucidSound", "sku": "150229", "reviewer_name": "Anthony Villafan", "review_title": "LS35X Headset", "review_description": "Sound quality is awesome. The mic monitoring doesn\u2019t pick up much background noise unless it\u2019s shouting or something particularly loud outside. The volume dials for the game volume as well as party chat are a plus. I love the mute buttons being built into the dial and the fact that there is one for game volume and one for chat volume.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.125", "reviews_count": "56", "comment_id": "191080623", "uniq_id": "1acae527-b6a8-53fe-8b03-352c500972f8", "scraped_at": "16/01/2022 16:18:10"}, {"index": "663", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ricardo20", "review_title": "Vizio OLED Review", "review_description": "I bought these tv a month ago, and I so very happy I did, beautiful picture, I can\u2019t wait to buy my Xbox Series X to see how great it plays games.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "225321740", "uniq_id": "8834963e-4106-54f9-a85c-8d49ce4e8615", "scraped_at": "16/01/2022 16:18:10"}, {"index": "Best move ever", "name": " no comparison.\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "5", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "225307243", "reviewed_at": "d3614834-4db3-58d8-bf84-875024fffa4a", "rating": "16/01/2022 16:18:10", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "681", "name": "LucidSound LS35X Black Direct Connect Wireless Gaming Headset for Xbox One", "brand": "LucidSound", "sku": "150229", "reviewer_name": "Lord Drol", "review_title": "Comfortable headphones", "review_description": "The headphones are a comfortable fit. Sound quality is very adequate. There does seem to be a small connection issue from time to time. Overall a purchase worth making", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.125", "reviews_count": "56", "comment_id": "172529273", "uniq_id": "2fa66c4f-117a-5039-9740-8dc16043f8d4", "scraped_at": "16/01/2022 16:18:11"}, {"index": "685", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "TheDudeofLife", "review_title": "Party like its 2001!", "review_description": "Looks really cool, a nice item to have to celebrate 20 years of Xbox!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "191031988", "uniq_id": "18f4352f-3e46-5f3f-8f3c-2199f34e358b", "scraped_at": "16/01/2022 16:18:11"}, {"index": "687", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "Teron B", "review_title": "Fantastic controller!", "review_description": "Great product to celebrate the 20th anniversary. Try using a blue light on the box;)", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "190969614", "uniq_id": "3d4bfba6-14f9-5eac-b246-075de8463963", "scraped_at": "16/01/2022 16:18:11"}, {"index": "690", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "JimFH", "review_title": "OLED for an affordable price", "review_description": "This VISIO compares very well with LG but also includes SmartCast. Easy and Lots of tweaking settings. I don't use the speakers, so I can't say how well they are. The TV is so new that they don't have a manual for it yet.  But the settings have pretty clear hints when you are ready to try them.  It has a beautiful picture with a wide field of view. There are 4 HDMI inputs with 3 on the back and one on the side. I'm very pleased with my purchase.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "224806727", "uniq_id": "0e9cd441-2342-52b5-815c-dc4ab5a54001", "scraped_at": "16/01/2022 16:18:11"}, {"index": "691", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Tomwbigredone", "review_title": "Great picture", "review_description": "Best vizio ever and I have 4 vizio TVs picture is great gaming experience is great", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "224795548", "uniq_id": "82be4a24-8e01-5fd7-a965-276bea8b3c8a", "scraped_at": "16/01/2022 16:18:11"}, {"index": "700", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Anonymously anonymous mus", "review_title": "Facts over opinion", "review_description": "Bought this for a buddy since he was twitch streaming w just a mic, he loves it as do I bc I get to see his pretty lil face now. Ohhh an btw this literally shipped in a day. He was goin in vaca for the weekend and it showed up a half hour before he left. Seriously excellent timing GameStop!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.969", "reviews_count": "129", "comment_id": "190894313", "uniq_id": "89b2f7d5-2766-5a33-a39f-c597c0f1591e", "scraped_at": "16/01/2022 16:18:13"}, {"index": "719", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Derek NN", "review_title": "Good service and product", "review_description": "The shipping and delivery was perfect, arrived earlier than expected and works well. Has helped make my stream feel more personal and professional. Wish that it was able to zoom more, but that is a minor gripe and not the fault of GameStop.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "4 months ago", "rating": "4", "average_rating": "3.969", "reviews_count": "129", "comment_id": "187203531", "uniq_id": "efbb9c17-bd31-544c-af4a-c69ea42fe59e", "scraped_at": "16/01/2022 16:18:14"}, {"index": "722", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Anonymous", "review_title": "Ps5 camera", "review_description": "Very good", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "4 months ago", "rating": "5", "average_rating": "3.969", "reviews_count": "129", "comment_id": "185928036", "uniq_id": "7d1f442f-7ec6-527b-ae93-45da43e1810e", "scraped_at": "16/01/2022 16:18:14"}, {"index": "724", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Connie 234", "review_title": "It doesn't work", "review_description": "It doesn't work trying too get invoice too take it back", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "5 months ago", "rating": "1", "average_rating": "3.969", "reviews_count": "129", "comment_id": "184487727", "uniq_id": "f29c5885-2e2b-54fc-9e15-f01f746ca57e", "scraped_at": "16/01/2022 16:18:14"}, {"index": "735", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Satisfied Customer AF", "review_title": "Happy Review", "review_description": "Delivered timely, like brand new, great 1 year warranty. Very satisfied!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "171167134", "uniq_id": "2ee4f7ec-4b3f-58fd-9231-6297a710af1c", "scraped_at": "16/01/2022 16:18:14"}, {"index": "738", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Anonymous", "review_title": "An ok camera", "review_description": "The mechanism that holds the camera up can be adjusted easily as a stand. Picture quality is just \u201cok\u201d but it gets the job done. Make sure you have enough lighting ro give the image quality the best chance.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "9 months ago", "rating": "4", "average_rating": "3.969", "reviews_count": "129", "comment_id": "175997956", "uniq_id": "1dbc48cb-7f7b-51c8-b01a-b4013ee612f4", "scraped_at": "16/01/2022 16:18:14"}, {"index": "740", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Jay 0mega", "review_title": "Beautiful Camera.", "review_description": "The camera is cool and looks great. Although it shows a slight difference from the PS3 & PS4 cameras. But it goes well looks wise with the PS5.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "10 months ago", "rating": "4", "average_rating": "3.969", "reviews_count": "129", "comment_id": "175259393", "uniq_id": "d17d9a75-7e24-5307-bc4f-1209233be70d", "scraped_at": "16/01/2022 16:18:14"}, {"index": "744", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "ReikimasterColin", "review_title": "Hd camera is excellent", "review_description": "Easy to use. Hook was super easy. Couldnt be happier with my HD camera", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "3.969", "reviews_count": "129", "comment_id": "172608606", "uniq_id": "80431fd0-c0eb-5f1f-925b-7421bf7208f6", "scraped_at": "16/01/2022 16:18:14"}, {"index": "769", "name": "Luigi's Mansion 3 Plus Multiplayer Pack Bundle", "brand": "Nintendo", "sku": "211090", "reviewer_name": "slwortham", "review_title": "Love it!", "review_description": "I absolutely love the Luigi's Mansion games, and the 3rd edition is no exception!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "5", "reviews_count": "5", "comment_id": "152896998", "uniq_id": "4e29ab55-ed73-59b4-b95d-a12c3ac6a260", "scraped_at": "16/01/2022 16:18:16"}, {"index": "793", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Switchdad80", "review_title": "Quality", "review_description": "Does not last long. This is my third joycom in a year.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "144525538", "uniq_id": "cda20b93-ff08-547f-80c7-5f9aedea99f5", "scraped_at": "16/01/2022 16:18:16"}, {"index": "795", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Foxstrunk", "review_title": "No drift, but has been opened", "review_description": "It works perfectly with no drift, but the controller has been opened by either the previous owner or gamestop and i can see the corner of the ribbon cable sticking out. Its not pinched in a way that effects functionality, but it has been opened and therefore the warenty with Nintendo is voided.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "143240141", "uniq_id": "3f86a25f-e32d-519b-b0cc-9558c9496143", "scraped_at": "16/01/2022 16:18:16"}, {"index": "803", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "flash123", "review_title": "Challenging but fun.", "review_description": "\"When I first got this game I thought it was going to be easy, I was wrong. This game really makes you think. The graphics are awesome the game itself is very fun as you progress through challenging levels. The sound is great but I cant stand the sound of garret when you attack, but you have the option to turn off garrets voice, \"\"I wonder why\"\". Its a very fun game but you need to get good at it. So overall its a great game and I recommend it to most gamers.\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "6 years ago", "rating": "4", "average_rating": "3.52", "reviews_count": "125", "comment_id": "45861596", "uniq_id": "f84d7a8c-ebc5-5f42-b1dc-9520d1615dd2", "scraped_at": "16/01/2022 16:18:16"}, {"index": "810", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "MILLERTIME8008", "review_title": "Gets old after the first 15 minutes.", "review_description": "I thought it would be a lot better but its not that fun. You cant roam around a city, you have limits. All you can do is play missions and steal stuff. its the same stuff over and over.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "2", "average_rating": "3.52", "reviews_count": "125", "comment_id": "37674401", "uniq_id": "4323e021-8355-5344-8c2e-1b4e53d7640e", "scraped_at": "16/01/2022 16:18:16"}, {"index": "812", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "Blast3400", "review_title": "Thief done poorly.", "review_description": "\"Thief... I was hyped but not the... CRAZY hyped. but my expectations were flawed. The combat is dreadful, I mean, you only get like a black jack right? The bow is fun use, the city is absolutely Trash! I could never evolve with it! The side missions are outstandingly poor. I mean maybe a few caught my eye for a few moments. Other wise, the story is a little bland, after you caught the eye of jewelry, The graphics are what got to me, I actuall could sit and look, and thievery was another fun participation in the game, otherwise.. I don't have much good to say about this game, I liked certain moments, and IF YOU\"\"RE a die core thief fan get this.\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "2", "average_rating": "3.52", "reviews_count": "125", "comment_id": "37632353", "uniq_id": "3768db6b-01b4-5e50-8869-c2138f5861fb", "scraped_at": "16/01/2022 16:18:17"}, {"index": "820", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "GoBeYoungKenobi", "review_title": "Wait 'til the price drops !!", "review_description": "This game is ok, I play it when I'm bored of other games, it is not that great, it should be $30 Max brand new. If you like stealth and searching for the same things over again you'll love it !! I'm gonna finish it as fast as I can so I can sell it on Ebay !! Dishonored Makes this game look and feel silly !!!!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "4", "average_rating": "3.52", "reviews_count": "125", "comment_id": "35368910", "uniq_id": "53ed09e4-eaaa-599d-bcef-866923705a60", "scraped_at": "16/01/2022 16:18:17"}, {"index": "STAY AWAY!!!!\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "7 years ago", "review_description": "1", "recommended_review": "3.52", "verifed_purchaser": "125", "helpful_count": "34757952", "not_helpful_count": "bb7847c4-0329-5fb4-9d52-e27025464285", "reviewed_at": "16/01/2022 16:18:18", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "867", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "Mckintay81", "review_title": "Not as good as I had hoped.", "review_description": "I was really excited for this game before it came out. But quickly realized it wasn't what I expected and I got bored fast. All the game is about is being sneaky and trying to avoid combat. Let me tell you this gets old quick. I'm on chapter 5 and I can't sit down and play this game for hours on in because it's the same thing almost always. Sneak and steal sneak and knock a guy out rinse and repeat. The dialogue isn't that great either. One good thing I can say about this game is the environment looks pretty cool and some of the music during some scenarios are fitting. The game isn't terrible but it's far from great. It's good for 1 play through but nothing more. I give it a 7/10.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "4", "average_rating": "3.52", "reviews_count": "125", "comment_id": "34724680", "uniq_id": "0435c50c-600b-5125-837b-6e87de0865f5", "scraped_at": "16/01/2022 16:18:18"}, {"index": "888", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "OldGasbag1965", "review_title": "Great headset", "review_description": "The sound is amazing I connected with optic very clear", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "174247519", "uniq_id": "2907c197-ed3c-5acc-a40d-b1660aca6630", "scraped_at": "16/01/2022 16:18:19"}, {"index": "896", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "koldkrowe", "review_title": "U Serious>?", "review_description": "Okay! I had to write a review. I do not do this often. From the first time I had watched the preview for this game I was enthralled. I just had to have it. I went out and reserved it. I thought about Garrett constantly. Ryse and Tomb Raider kept me satisfied. Thief was gonna be better Right>? I mean it was gonna be Epic>...........Wrong.....Controlling Garrett is like controlling a dog on a leash who doesn't want to go in the same direction. The combat is awkward. Garrett is very limited in space. There is a white flash that crosses your vision repeatedly (I do not know why). I was bored within the first mission. The controls are sloppy and NOT user friendly. This game has been the biggest epic fail in my gaming career. I am 34 years old and have been playing for a long time. I now have a game and guide that are useless. I could go on and on in a more inappropiate manner but, I will not. Also you continue to steal the same items over and over, Candle holders, Knifes, rings, mask, gears, magnifying glass.......There is no free roaming. I felt like I was in a box. Everything is tight and cramped. I just had to write a review,,,,,,My first review ever.....I am still so depressed.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "26", "not_helpful_count": "25", "reviewed_at": "7 years ago", "rating": "2", "average_rating": "3.52", "reviews_count": "125", "comment_id": "34677083", "uniq_id": "d9a59ad9-50a0-5a85-99cd-7bddab33eaa1", "scraped_at": "16/01/2022 16:18:19"}, {"index": "898", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "jhartman12345", "review_title": "HORRIBLE GAME! DON'T WASTE YOUR MONEY!", "review_description": "Very below average graphics for the xbox one, controls are terrible, characters have awful voice overs, this is one of the worst games I have played in a long time, Im so dissapointed, i feel like this game stole $30 from me just because gamestop gave me $29 for trade in.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "6", "not_helpful_count": "19", "reviewed_at": "7 years ago", "rating": "1", "average_rating": "3.52", "reviews_count": "125", "comment_id": "34659874", "uniq_id": "dc05a3f8-6e2d-5eb1-95a6-15bec178b101", "scraped_at": "16/01/2022 16:18:19"}, {"index": "907", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Dunk91882", "review_title": "Great game", "review_description": "Awsome game wish all the talking was in english tho", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "141043249", "uniq_id": "f83e57bf-e0dc-58fe-9319-ff18e816dff9", "scraped_at": "16/01/2022 16:18:19"}, {"index": "912", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Djjuliamarie", "review_title": "Joycon", "review_description": "Needed replacement, they had a preowned for a tiny bit less than new.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "131846676", "uniq_id": "9e3afce0-b305-5f5f-91d9-28bcdd216a0b", "scraped_at": "16/01/2022 16:18:19"}, {"index": "913", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Thiscantbe", "review_title": "Joy-cons are pathetic", "review_description": "I hate Joy-Cons! This is one half of the fifth set I have purchased. I'm over 1000 hours on the switch, that's about 200 hours per joy-con, yet my Xbox controller is over 1000 hours on its own.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "131744614", "uniq_id": "37826427-d8e7-534f-bcfb-b6cb58aa6647", "scraped_at": "16/01/2022 16:18:19"}, {"index": "Customizable partner is amazing.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "924", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "sweetie", "review_title": "Overkill tutorials", "review_description": "Spent almost 2 hours of tutorials and cut scenes just to find out i basically one shot everything.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "130415884", "uniq_id": "b55b68e4-d33b-58e6-bb8d-d4fda491c199", "scraped_at": "16/01/2022 16:18:20"}, {"index": "928", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Alex the gamerman", "review_title": "SAO goodness", "review_description": "So far its a RPG style game so expect a lot of grinding but in general is a fun game to play despite the heavy criticism the game is a fun spin of the actual anime series whit a new in deepth story and lovable characters all in all.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "127941238", "uniq_id": "807b8bd5-563d-5337-a3b4-a7229b21ccc4", "scraped_at": "16/01/2022 16:18:20"}, {"index": "938", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Emilylvawter", "review_title": "Joycon review", "review_description": "It doesn\u2019t stay locked in place properly. Other than that it\u2019s fine", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "129967752", "uniq_id": "4bd1df31-02a5-5dca-aafe-f77662735471", "scraped_at": "16/01/2022 16:18:20"}, {"index": "953", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Vril", "review_title": "Sao fb flop", "review_description": "Due to it being in Japanese I can't fully enjoy full game", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "11", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "125381480", "uniq_id": "ba18f67b-7560-5847-8acf-2abc0ee27b69", "scraped_at": "16/01/2022 16:18:20"}, {"index": "959", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Sunset Shimmer", "review_title": "A great game, but tougher then previous games.", "review_description": "Sword Art Online:Fatal Bullet is a great game from the SAO game series. But it differs from previous games as in this one it focuses on guns and not swords as such it can be a real challenge to new players to the SAO series (and also contains minor to major spoilers to previous games)", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "123630989", "uniq_id": "6f0dd5ef-55d4-5b76-a9b9-8f9a343ca74c", "scraped_at": "16/01/2022 16:18:20"}, {"index": "961", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "TaylorS", "review_title": "Broken", "review_description": "It was broken - no matter what I did, the stick veered upward", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "129240509", "uniq_id": "0bdb503f-829c-545a-8a06-cc3adf3a9382", "scraped_at": "16/01/2022 16:18:21"}, {"index": "968", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "mattrock3415", "review_title": "Worn But Still Works", "review_description": "Bought is used and the joystick had quite a few wear marks. Kinda disappointed but oh well. Ya it works well but I mean it\u2019s not like a game review so it\u2019s not up for debate. It just works and that\u2019s it. I do however appreciate that they were able to send me a single joy con because I lost my other left which was sad. Ok that\u2019s all. Thanks for reading. Bye.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "127521525", "uniq_id": "5486955e-94b0-52fd-aefe-3b4dcaec39c7", "scraped_at": "16/01/2022 16:18:21"}, {"index": "977", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Alex Velez", "review_title": "Just being Real", "review_description": "i have medium to long hair so it tends to slide out of place a bit with the extra strap it has for comfort. great for long gaming sessions. great sound quality but not the best sound for helping me pinpoint an enemy location in a live action FPS like my most played game Apex Legends. Comfort make up for that tho. i tend to play for hours with these on they what there supposed to do. they haven't shocked me yet. and unlike my previous head set there enough comfort in these headphone that they don't cause any discomfort. i think there good. These headphone are definitely better than Turtle Beaches", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "141896944", "uniq_id": "868e7df4-14bf-5225-ad4b-b2a55af8f1ef", "scraped_at": "16/01/2022 16:18:21"}, {"index": "999", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Kothanare", "review_title": "Joy-Con left dosnt work vary good", "review_description": "Every left joy-con i buy pulls to the left after about a week i think Nintendo needs to fix the problem.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "3", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "125539310", "uniq_id": "4069aeba-91b5-55c9-9f58-c56f7e38abf1", "scraped_at": "16/01/2022 16:18:21"}, {"index": "1000", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "jl117", "review_title": "Single Joycon", "review_description": "It work for awhile then would randomly unsync during gameplay. Rage inducing.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "125505103", "uniq_id": "43d9b7cc-f2fa-56e0-a0ec-48ff07a55171", "scraped_at": "16/01/2022 16:18:21"}, {"index": "1013", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Cameron T", "review_title": "Rig 800hs", "review_description": "Great headset for everyday use. Extremely comfortable with great sound quality! Deep rich bass and great conventional use!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "138164631", "uniq_id": "2bda802e-9550-5c3e-b0c6-01f9a125eee3", "scraped_at": "16/01/2022 16:18:21"}, {"index": "1020", "name": "Star Wars Episode IX: The Rise of Skywalker Supreme Leader Kylo Ren Force FX Elite Lightsaber", "brand": "Hasbro", "sku": "195533", "reviewer_name": "Luistics", "review_title": "Kylo Ren Lightsaber", "review_description": "great product!  Best Kylo Ren lightsaber available!   shipping packaging isnt very good though.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "4", "average_rating": "4.5952", "reviews_count": "42", "comment_id": "189960851", "uniq_id": "984adf81-38b6-5e3c-a44f-9bdce1cec31a", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1024", "name": "Star Wars Episode IX: The Rise of Skywalker Supreme Leader Kylo Ren Force FX Elite Lightsaber", "brand": "Hasbro", "sku": "195533", "reviewer_name": "Mallai", "review_title": "Very realistic sound and light effects . Awesome", "review_description": "[This review was collected as part of a promotion.] This Star Wars The Black Series Supreme Leader Kylo Ren Force FX Elite Lightsaber is very realistic . It is not any normal light saber . It is a great collectible for a crazy star wars fan like me. It has lot of premium features like original light saber from the movie. The heavy metal hilt with lot of detail on it. It comes with a stand and collector coin. It took some time for me to figure out , how to put it together first but then i looked upon the instructions and did exactly as it said. I displayed it in stand along with my other star wars collections. This is a really awesome, the sound effects are very realistic like from the movie, press and slide the button on the hilt to activate progressive ignition , molten glow effect and battle clash effect. Each one of the sound effect is really awesome. Well build , good quality . Advanced led technology is used and it has good sound quality too.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.5952", "reviews_count": "42", "comment_id": "138548695", "uniq_id": "e47ee262-c370-549a-a16e-62e59cbd3423", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1030", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Nick767", "review_title": "Fun game", "review_description": "Its a fun little erd peeson fps. The lvling aspect can be a little grind heavy, but the core gameplay helps offset that.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "117238724", "uniq_id": "9a816531-46ee-5b4d-bb7f-7406697c5c08", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1055", "name": "Funko POP! Games: Pokemon Pikachu (Sitting) 3.75-in Vinyl Figure", "brand": "Funko", "sku": "238622", "reviewer_name": "jesspal", "review_title": "Pikachu Funko pop", "review_description": "My son loves this pop, it brings him tremendous joy", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5882", "reviews_count": "51", "comment_id": "191421691", "uniq_id": "c4804f5f-dea7-5254-a727-fe7d5fb22a86", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1079", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Roxasstorm", "review_title": null, "review_description": "It\u2019s a fun  rpg with guns but it\u2019s a bit repetitive", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "116481559", "uniq_id": "a61ceffc-ae0d-5c02-b504-0ab4bd0e65e1", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1082", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Frank Nez", "review_title": "Don\u2019t buy pre-owned.", "review_description": "Pre-owned price was cheaper but not worth the gamble. Purchased to use on a trip only to find out the product was defective. Very dissatisfied.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "119306733", "uniq_id": "4049c309-0bb1-5905-8502-9a53736cf524", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1096", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Tangymonkey", "review_title": "50/50", "review_description": "Not 100% most comfortable over the head but ear muffs are comfy", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "131786285", "uniq_id": "3ffb4352-0859-55ee-93c6-16d8dfeeb781", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1107", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "edsonexpert101", "review_title": "Good but Broken", "review_description": "I bought this last week and when I came home I realized that the L button didn\u2019t work. I was really disappointed because the GameStop employees never warned me about the L button being broken. Big bummer", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "115613421", "uniq_id": "4d8c2163-0337-5387-9cd1-4a72cab841bd", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1113", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Sunflower8888", "review_title": "Still not working", "review_description": "Having the same problem with this blue joy con", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Thank you Game Stop!", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1126", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Leo08", "review_title": "Won\u2019t work as listed", "review_description": "I thought that you would be able to seperate how loud voice chat is compared to the game volume. So far the in game voice completely muted game volume which is annoying.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "130701182", "uniq_id": "f6af55a2-9c41-54f5-908f-86bca8c4da15", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1129", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Matt hett", "review_title": "Rig 800hs", "review_description": "Sounds good just wish they would get a little bit louder", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "130470527", "uniq_id": "d34145cf-5804-5518-b74c-13b55873b1f3", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1136", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Darknite900000", "review_title": "The game is amazing the   Game. Sound track perfec", "review_description": "The game difficulty in mission. With  krito and his friends", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "114164968", "uniq_id": "7efb733e-3f43-58ca-a376-699852d92032", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1147", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "nine10", "review_title": "Excellent, Beautiful, Wonderful!!!", "review_description": "Everything works fine on this.  We needed a replacement of the old controller that I busted.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "111741028", "uniq_id": "becc6b7f-f5e5-59ff-a6e3-d7f6727ad921", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1151", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Usmc87", "review_title": "No wrist strap", "review_description": "It's insane to sell these at the same price as new and not include wrist straps! Straps are 7 dollars apiece. I just got pre owned blue left and right and neither had a strap.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "37", "not_helpful_count": "27", "reviewed_at": "4 years ago", "rating": "3", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "95352445", "uniq_id": "45388ff8-bdd7-5098-b26d-a25e5866c2f2", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1157", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Bronzestar", "review_title": "They are awesome", "review_description": "I like that they self adjust to your head and it doesn\u2019t pull your hair or anything.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "129426856", "uniq_id": "0052ea7a-f100-5f69-80d7-665d19fbb312", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1161", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Reaper5224", "review_title": "Good sound not so good in general", "review_description": "Took me.a while to figure out how to make rhe connection work, also they make my ears hurt because the actual ear phones part is pretty small", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "128648140", "uniq_id": "846446d1-89e8-5110-a56f-6787c5879787", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1162", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Kayla150", "review_title": "A MUST-HAVE", "review_description": "I've envested 75 hours into this game and have loved every second of it. I love everything sword art online. To the novels, anime, and the games! Like it's past games, fatal bullet is amusingly well done. This game is a must play! Has a great story!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "25", "not_helpful_count": "3", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "111137419", "uniq_id": "5676380d-8a2d-5bf2-acf3-ddf0387dc53f", "scraped_at": "16/01/2022 16:18:24"}, {"index": "Initially", "name": " I felt they may be too quiet", "brand": " but after a few minutes of gameplay", "sku": " I was reaching for the volume to turn it down.", "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1174", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Nathan bickett", "review_title": "Not that great of a headset", "review_description": "Horrible audio issues and not very good quality mic", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "126596103", "uniq_id": "d23f6bb7-2a60-55eb-81b6-669ed57a7d33", "scraped_at": "16/01/2022 16:18:25"}, {"index": "1177", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Hub23", "review_title": "RIG 800HS", "review_description": "There excellent and  Block surrounding noise with a comfortable adjustable fit.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "126311801", "uniq_id": "0ca40b95-b1f5-5c1c-b307-a0da1a966e74", "scraped_at": "16/01/2022 16:18:25"}, {"index": "1180", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Gathman", "review_title": "YOU ARE NOT PREPARED!", "review_description": "Holy cow amazing! Secong only to Astro A50 in terms of sound! Honestly astounding battery life! And very durable with breathable ear padding! Best headset for its price point!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "125923879", "uniq_id": "ab294a9d-4ec4-52ba-94f1-c3342449c45f", "scraped_at": "16/01/2022 16:18:25"}, {"index": "1181", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Eddie504", "review_title": "No good", "review_description": "They suck had em not even a month and the mic went out", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "125859821", "uniq_id": "b01ebfcd-acd3-5bfb-ae03-d51536408ab4", "scraped_at": "16/01/2022 16:18:25"}, {"index": "1216", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Alexelway", "review_title": "They are great but", "review_description": "I bought these a few months ago but now keep saying connected / not connected and others in the party can hear it. I've been told every now again they are making a loud noise I can't hear as well in parties.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1227", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Kevbro22", "review_title": "Amazing Game!", "review_description": "Amazing game that really brungs back memories of the SNES days", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "135928691", "uniq_id": "5bd04e5e-b396-5c85-9d48-b7850f750736", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1240", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "alleybeating", "review_title": "Great headset", "review_description": "had these for about 4 months, no problems battery life is stellar.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "124488302", "uniq_id": "3c1e6d81-656e-5540-ab42-3ef306c12e12", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1241", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "ChubbyBatman69", "review_title": "Amazing headset", "review_description": "Great quality headset with unbeatable comfort and sound quality. This headset will last you for years to come. Ive been through astros, turtle beaches and razer headsets and this one in my opionion beats the competition. Very easy to set up the headset also has amazing range so you can go almost anywhere in your house and not lose signal. Battery last 24 hours and thats not an exaggeration. The headset also has multiple sound options and has a little voice reminder when the battery gets low you can not go wrong with headset even for the price you will not be dissatisfied.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "124487241", "uniq_id": "ab60abda-1dfa-58d4-8cdf-45e21b743f51", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1246", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Lorelei", "review_title": "Okay game", "review_description": "I had yet to play this, I loved A Link to the Past as a kid and with this being a spiritual successor to LTTP, so when I got the opportunity, I bought it right away. Its fun, but not exactly the best Zelda game ever.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "130580816", "uniq_id": "c708cd5e-0f85-5177-a4ca-eacd174efdf4", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1248", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "D Rott", "review_title": "Zelda: Link Between Worlds", "review_description": "Best Zelda game ever. Top down style is awesome. Simple to learn yet still awesome!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "130409358", "uniq_id": "ea45da69-27b8-57c6-ab19-504186ef7c85", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1254", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "RayG0118", "review_title": "Great game", "review_description": "Great game, takes place in same world as oink to the past", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "129273240", "uniq_id": "f89906e5-4794-5ffd-b32a-b75ef7370e3d", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1256", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "JCC74", "review_title": "Great sound and comfortable", "review_description": "Incredibly comfortable.  Good if you have a large head. Sound is amazing however dialing in your party can be difficult during gameplay.  I can turn the dial all the way to chat and game sound still overcomes the chat communication at times.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "124195854", "uniq_id": "322dcdae-d390-56e9-b0a9-08a026351c3d", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1266", "name": "Honey-Can-Do Floating Wall Shelf", "brand": "Honey-Can-Do", "sku": "323846", "reviewer_name": "Andie", "review_title": "Easy to assemble and hang", "review_description": "[This review was collected as part of a promotion.] The Honey-Can-Do horizontal floating wall shelf is a I-Can-Do. It is so easy to assemble and install that I didn\u2019t need help from anyone. The ledge is a decent depth and the shelf hangs securely in the wall. I would recommend this shelf for anyone who wants a little decorative shelf but is not the necessarily a DIYer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.5385", "reviews_count": "13", "comment_id": "223347512", "uniq_id": "b98db7f0-968d-5a7d-ad4f-cda9000a6da2", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1269", "name": "Honey-Can-Do Floating Wall Shelf", "brand": "Honey-Can-Do", "sku": "323846", "reviewer_name": "Purpie", "review_title": "Pretty but not very useful", "review_description": "[This review was collected as part of a promotion.] The shelf is well-made and attractive. I personally would prefer the wood shelf to be a little bit darker.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "As far as functionality", "name": " it doesn\u2019t have much. The frame is just there to add visual appeal", "brand": " but you really can only use it for the shelf space", "sku": " which is small. It\u2019s almost like it\u2019s more of a decorative element to have the frame around it and that requires a lot of hardware in the wall to keep it secure.", "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1271", "name": "Honey-Can-Do Floating Wall Shelf", "brand": "Honey-Can-Do", "sku": "323846", "reviewer_name": "Karlene", "review_title": "Looks really nice", "review_description": "[This review was collected as part of a promotion.] I received the Honey -can-do Horizontal Floating Shelf.   It was so easy to assemble, and it came with all the needed tools and screws to assemble and hang.  I love the color and the way it looks mounted on the wall.  I would definitely recommend this product.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.5385", "reviews_count": "13", "comment_id": "222602912", "uniq_id": "cfd5ce63-515a-535e-95c9-cb4a81bc8288", "scraped_at": "16/01/2022 16:18:27"}, {"index": "Easy to follow assembly instructions", "name": " come with all tools to complete", "brand": " except wall mounting.\"", "sku": "yes: I recommend this product", "reviewer_name": null, "review_title": "0", "review_description": "0", "recommended_review": "1 year ago", "verifed_purchaser": "4", "helpful_count": "4.5385", "not_helpful_count": "13", "reviewed_at": "222456723", "rating": "38620b74-1b7d-5ec3-b6b9-48ad85b756c8", "average_rating": "16/01/2022 16:18:27", "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1274", "name": "Honey-Can-Do Floating Wall Shelf", "brand": "Honey-Can-Do", "sku": "323846", "reviewer_name": "Deandra", "review_title": "Great Decor!", "review_description": "[This review was collected as part of a promotion.] I absolutely love my Floating Wall Shelf. It was extremely easy to assemble and hang on my wall. It adds a pop in my decor and great just to have a shelf to decorate. I love the sophisticated look and how it adds an extra bit of style to my wall. It is extremely durable and very sturdy. I never thought of using something like this to decorate my walls, but creates a nice simple but sophisticated look to my room.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.5385", "reviews_count": "13", "comment_id": "222336423", "uniq_id": "ef18adad-3b53-5924-83e8-557a846555d6", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1277", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Mandlmille", "review_title": "Great game for any time", "review_description": "One of my favorite Zelda games.  A pure joy to play", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "128653252", "uniq_id": "74c4f46a-54f7-52ae-9112-c31b17e17e45", "scraped_at": "16/01/2022 16:18:28"}, {"index": "1290", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "JokersEvilWay", "review_title": "Great product. With two minor issues.", "review_description": "So I bought the Rig 800 HS headset a couple months ago. They\u2019ve been really awesome no major complaints at all, they fit great comfortable to wear for extended hours of gaming on my PS4 (PUBG). The sounds are great and let you know where the enemy is firing from. The two super small issues I have with this headset, compared to my Rig 800 LX for my Xbox One S. The two minor issues is the the max volume on my 800 HS doesn\u2019t feel as loud as my 800 LX. Along with that after really playing for a couple of hours some sounded really different. So I put the product boxes next to each other. And the Rig 800 HS so not have 3D surround sound. And that was a minor issue, but having months playing the 800 HS it is an issue but not a big or huge issue. But I am thoroughly pleased. Would definitely recommend this product 100%.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "123355346", "uniq_id": "e4e297db-c590-5d60-a1f6-3139e3f6493c", "scraped_at": "16/01/2022 16:18:28"}, {"index": "Bottle of water.\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 months ago", "review_description": "5", "recommended_review": "4.3", "verifed_purchaser": "10", "helpful_count": "190372748", "not_helpful_count": "80250e30-0779-5bc0-899e-0baafe368aae", "reviewed_at": "16/01/2022 16:18:29", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1322", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "HonsOffMyWooki", "review_title": "RIG 800HS", "review_description": "Super comfortable and the sound is amazeballs. By far the best headset I\u2019ve ever had.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "122667134", "uniq_id": "e7deddf5-d752-5536-a332-bad314e72984", "scraped_at": "16/01/2022 16:18:29"}, {"index": "1333", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "BobbyJr68", "review_title": "Old School Throwback", "review_description": "This particular Zelda game recalls the original Legend of Zelda in both style and gameplay. This, in my opinion, makes it no less enjoyable for all ages.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "122884228", "uniq_id": "f063eef8-3dc2-5b73-90e4-df2fb201d24e", "scraped_at": "16/01/2022 16:18:29"}, {"index": "1345", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "SuperSaukee32", "review_title": "Perfect Competitive headset", "review_description": "Has everything you could need out of a headset. From great sound to comfort ability.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "121183080", "uniq_id": "47c05fc5-2d54-512a-a5d8-e401a9053c1b", "scraped_at": "16/01/2022 16:18:30"}, {"index": "1367", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Hcbomb22", "review_title": "Great headset", "review_description": "I bought this headset after my old one that was a different brand stopped working it is a really great headset. Excellent sound quality and amazing battery life well worth the money for sure", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "120079550", "uniq_id": "0e0ff8a7-cdf5-5127-acb5-8b99fe8e2be6", "scraped_at": "16/01/2022 16:18:30"}, {"index": "1390", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Hap007", "review_title": "Wireless + Dolby Atmos", "review_description": "The sound on these headsets is so Awesome on the XBOX with Dolby Atmos you can hear a pin drop. Also,with getting $40.00 dollars off these headsets it was a Great buy at just $99.00 dollars and they were easy to set up", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "119234200", "uniq_id": "7ee075d3-1c8c-5681-b209-6825468bb522", "scraped_at": "16/01/2022 16:18:31"}, {"index": "1406", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "DirtyFrosting", "review_title": "Awesome Headset!", "review_description": "I\u2019m very impressed with this headset. I paid a lot but it\u2019s worth the money. I couldn\u2019t be more happier. Thanks for GameStop I\u2019m Durant Oklahoma for pointing them out to me.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "118595163", "uniq_id": "93e6de5e-aae4-5fcd-9775-4ad622367d74", "scraped_at": "16/01/2022 16:18:31"}, {"index": "1424", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Skyril", "review_title": "Disappointingly Easy", "review_description": "What can I say? It isn't what I was expecting. I'm an extreme Legend of Zelda fan, and I'm used to them having puzzles and challenges. I'm used to spending ages in a dungeon, trying to figure it out. I'm used to fighting tricky bosses. So far, this game has none of that. The dungeons are frustratingly easy; I finish them in half an hour. I haven't gotten stumped once, and the bosses have no chance against me. Fairy? Why would I need a fairy? I can kill a boss and barely be damaged. Actually, I beat a boss yesterday WITHOUT losing hearts. I like the new power this game brings, and I like the music, but that's about all I can say about it... I don't like the idea of renting items either because then what satisfaction do you have in solving a dungeon? I'm used to beating a dungeon, and then being excited because now I can go do some side mission with my new item! Not anymore. One more thing, what's this about having unlimited arrows and bombs? All I have a hope of getting from any chest or person is gold or a heart piece. I miss finally beating that mini-game and getting a bigger quiver! How fun it was. ~sighs~ I feel as if this game is geared towards children, and I'm, like I said, disappointed. Please give me a Legend of Zelda game like Twilight Princess, Skyward Sword, Spirit Tracks, Ocarina of Time, etc. Don't make the games easier, I beg of you.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "15", "not_helpful_count": "15", "reviewed_at": "7 years ago", "rating": "2", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "41711603", "uniq_id": "50a415aa-7953-57bb-a177-931b2163e8cf", "scraped_at": "16/01/2022 16:18:32"}, {"index": "1433", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "HefTanner81", "review_title": "Great features the Mic! It's retractable", "review_description": "Holy buckets Batman! I love that I've upgraded. It looks cool it's sturdy and put together with precision.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "114929225", "uniq_id": "2d869f8a-533b-5230-ae7e-8cb3e90f761f", "scraped_at": "16/01/2022 16:18:32"}, {"index": "The only real place wherein A Link Between Worlds falters is in lasting appeal. Though the aforementioned item collection is fun", "name": " the game could have used a better post-story. And by better post-story", "brand": " I mean *a* post story. There is none. After beating the final boss", "sku": " you\u2019re reset to right before the showdown. This is very annoying to me", "reviewer_name": " generating a perpetual feeling of incompleteness", "review_title": " even after the player has collected every last item. I understand that the way in which the story ends somewhat prevents a playable post-story", "review_description": " but I\u2019m still disappointed. And though the StreetPass functionality is fun", "recommended_review": " and the challenge of scoring best times at the Treacherous Tower is an option", "verifed_purchaser": " it\u2019s hard to dedicate much time to perfecting myself in those mini-games. This is because", "helpful_count": " at its core", "not_helpful_count": " Zelda isn\u2019t really a game that\u2019s meant to be a competitive", "reviewed_at": " \u201cshare-with-your-friends\u201d-type experience. And the Second Quest isn\u2019t very enticing either", "rating": " with too little changed aspects to make it worth it. Still", "average_rating": " A Link Between Worlds is an awesome game", "reviews_count": " and I would definitely recommend it if you\u2019re a fan of the adventure genre.\"", "comment_id": "yes: I recommend this product", "uniq_id": null, "scraped_at": "1"}, {"index": "1470", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "iLoveNintendoFlo", "review_title": "Best handheld game I ever played!!!!!!!!!!!!!!!!!!", "review_description": "The Legend of Zelda A Link Between Worlds is one of my fav games ever made! The graphics are very good with rich lighting and beatiful colors. In the first few seconds of gameplay you will see a bird flying over the large game world form right outside your house in the game. The game might have a top down view but it is still looks great with live time lighting and amazing things to see. Very smooth animation with great uses of motion blur to make it feel so real. The 3D adds a amazing pop between layers and turning in to a painting lts u see the simamatic view of the charecter models in 3D moving about as well as all the other objects around u from a different angle. Zelda is also a beautiful lady in this game.... I wish she was real.... Such a nice lady to.... Any way.... The sound effects are also great u can hear the birds, you can hear your sword cutting throw the air. And you can hear your own foot steps perficly in line as you walk or run throw the game world. The game takes a different apporch no longer are all the key idea's found in the games brilantly designed dungons but they u can now buy them from a friendly if not greedy merchant or rent them. How ever if u rent them and die he will take them back so this adds a punishment for death and makes u more teance. The combat is smooth and almost all your idea's have effect in it. The smooth animation and clashing of meadal sound effects. As well as some well designed bosses and a adivtive streetpass shadow Link duals make the combat surpisily enjoyible if not a bit sempictic and repetive compared to passed resent Zelda games. Each chearacter in the game has a great personilty as a part of the story and the story is full of lour and gives amazing context for futher Zelda games in the timeline like OOT and Major'as Mask. The story is meaningful and emotional at times it is inspirerd by some real world history and thouse who dig hard enogh will fine a amazing meaing in the games design both story and gameplay really make you feel like your own a adventure. How ever the open world is great and broght to life in a all new way its the same basic lay out as A Link to The Pass. This may bring back great memorys of one of 16 bit games finest express and it hold up today very well. But the lake of changes to the hub world did seem a little strange as many of the parts of history they draw from comes from differet arrows of roamen history ect. Yet the over world is not roamen or really changed to fix the story. It does not feel overly nastogic but its open world design is some what limmed my its roots. That said the story blow my mind as did the amazing puzzles in the all new doungons. Some puzzles have different ways to sove them and are all amazingly design to give u the amazing feeling of soving a great Zelda dougon. And if u get stuck you can go see the fortion teller or buy hints with play coins for a ghosts. The story and level design were so emotionaly powerful for me this game gets my full recomenation and 2013 game of the year! Buy it now! And follow me on Miiverse my Nintendo Net Work Id is 3DSFlo. Also this game has Chickens so that's awesome!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "34376253", "uniq_id": "6577f0c7-4123-52b7-aed7-27bf23d87bae", "scraped_at": "16/01/2022 16:18:33"}, {"index": "1486", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Nadia Harry", "review_title": "If you've got time, it's worth the buy.", "review_description": "This game bundle was the reason I bought a ps4. The Quantic Dream Collection is worth the buy, but it will require hours of work and a lot of patience. The only game I did not thoroughly enjoy was Heavy Rain. The mechanics were odd and it was harder to play. Otherwise I would recommend it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "128011652", "uniq_id": "ae2f18a4-1859-58a6-a53d-2d7e980961b3", "scraped_at": "16/01/2022 16:18:33"}, {"index": "1488", "name": "McFarlane Toys Batman Beyond Shriek Unmasked DC Multiverse 7-in Action Figure", "brand": "McFarlane Toys", "sku": "249599", "reviewer_name": "Thundercat00", "review_title": "These figures are awesome.", "review_description": "I love Batman Beyond. This figure is well made and looks amazing besides Batman. My Gamestop has great people and a great selection.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.25", "reviews_count": "4", "comment_id": "190125904", "uniq_id": "876a6a15-c868-585d-8075-ca4adbb82a0f", "scraped_at": "16/01/2022 16:18:34"}, {"index": "1492", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Deathrade96", "review_title": "Awesome Game Get it", "review_description": "This is an awesome game I love how the music fits and very enjoyable this is one of the best Zelda games ever created the morphing into the stone and being apart it it just adds another affect witch makes it more challenging the bosses very created bosses but also can be hard to fight the story is great it flows pretty good and a surprising ending that made me go shock the game makes it more freely play then a straight path like in every zelda game they choose where you go but in this game you can go to any dungeon all you have to do is go buy items from the guy who is renting your house in the beginning anyway if your still asking yourself should i bye this game? i would say YES!!! this is one of the best zelda games ever!!!!!!!!!!!!!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "33602280", "uniq_id": "6495cefb-d4c8-514f-80f1-073be650e642", "scraped_at": "16/01/2022 16:18:34"}, {"index": "1504", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Countrys widie", "review_title": "Must Play Games", "review_description": "Action packed game. Hours of fun. Action around every corner", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "127673874", "uniq_id": "6701ea6e-6f9b-5075-a790-bc73497671bc", "scraped_at": "16/01/2022 16:18:34"}, {"index": "1532", "name": "Remnant: From the Ashes - PlayStation 4", "brand": "THQ Nordic", "sku": "213157", "reviewer_name": "Hugemradam", "review_title": "Tough but very fun.", "review_description": "Very tough boss fights but gets better as you upgrade your weapons. A lot of great creatures and amazing landscapes. Very fun to play with a lot of cool items and weapons.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.8", "reviews_count": "35", "comment_id": "163665515", "uniq_id": "2e06f9ce-68d6-55d6-9101-9bdc290e04f1", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1543", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "GamerMan1", "review_title": "For Kids", "review_description": "As a Zelda fan, I've been very excited for this to come out for about a year when Nintendo was making a big deal over it. When the day finally came, I traded two games towards this. I played it, and I was having a good time. Five days after release, I finished it. I couldn't believe how easy it was. For crying out loud Nintendo, first Luigi's Mansion: Dark Moon was too easy and short, and now a ZELDA title?! Where are the development masters from 1998? I honestly don't see why a bunch of people are rating it 10 out of 10. Oh, and did I mention that I beat it in less than 17 HOURS. AND I didn't use a strategy guide or ANY guide. The only reason I haven't gotten rid of it yet is because I want to try to finish the Hero Mode. It's very rage-activating, but that's Hero Mode. I think there's too many giveaways in the dungeons. I'd say this is for kids 8-12 years old or so.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "17", "not_helpful_count": "31", "reviewed_at": "8 years ago", "rating": "3", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "33105112", "uniq_id": "a480abcb-ea94-522c-8f09-bd0fafbc8e11", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1545", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Kr4zYk4nUk", "review_title": "A blast from the past with lots of goodies", "review_description": "I played legend of zelda a link to the past when it came out for super nintendo and beat it at least 3 times and have very fond memories. If your story is similar or if you're a fan of the zelda series, GET THIS GAME! I have to say having played a link to the past has been making this game a lot of fun being very familiar and different at the same time if that makes any sense. My only gripe is the renting system with items, but I'm only about 8 hours into the game so maybe that changes later.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "33072992", "uniq_id": "a7b42631-946c-5b94-8194-71a1aa5c4a13", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1550", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "plaguebruises", "review_title": "Gimme Them QTEs", "review_description": "I absolutely LOVED Detroit, which is why I bought the other two, and they turned out to both be good as well. Not as good as Detroit, but still worth the buy.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "125788093", "uniq_id": "5a27967e-41f5-5ce7-a291-7b6b1296a637", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1551", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Thals", "review_title": "Awesome", "review_description": "I love it. I like the fact that I can get one really well known game and two semi known games for a little bit cheaper than a normal AAA title. They are really great games and I think it\u2019s worth buying and playing", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "125788001", "uniq_id": "ca78f413-8ded-5dd4-b8c1-f5facf4985f6", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1552", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Amuscato", "review_title": "Best simulation game of the year!", "review_description": "Beautiful gameplay with 2 excellent additions. I enjoyed playing Detroit. The game started off slow but quickly picked up the pace. I played on the casual level so that I could enjoy the storyline without a challenge.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "125757610", "uniq_id": "e73f82fc-507d-54a9-894b-572618cc3690", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1554", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "lilchris9", "review_title": "Interactive movies, not quite games.", "review_description": "These games are focused on story over gameplay. If you're looking to have fun, none of these 3 will satisfy that itch.  ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1568", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "ForTruth", "review_title": "Nostalgic Tribute to the Best in the Franchise.", "review_description": "This game pays homage to A Link to the Past in many ways, almost like a direct sequel. It's new, it's sharp, and enjoyable. I was worried at first about the 2D/3D system, but it's masterfully implemented, and causes veteran fans of A Link to the Past to think in new ways. Sometimes it can be a bit easy, but later in the game, it becomes very challenging. More than the challenge, it's unbelievably fun. I consider ALttP to the best LoZ game out there, and this one doesn't disappoint.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "33048167", "uniq_id": "36af4f74-7e4f-535d-ac05-fafc8962f7b7", "scraped_at": "16/01/2022 16:18:36"}, {"index": "1575", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Ayana Brown", "review_title": "Quantic Dream Collection", "review_description": "I tried all 3 games. My favorite is become human, of course! With second game being beyond two souls and then heavy rain!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "125067463", "uniq_id": "212a9459-9654-58cd-942f-64b796b37f6d", "scraped_at": "16/01/2022 16:18:36"}, {"index": "1582", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Lilann", "review_title": "Fantastic game", "review_description": "Beyond two souls is the best game I\u2019ve ever played. I love it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "124302640", "uniq_id": "0c17f0bb-8f7f-505a-aca3-a75826f1ddd4", "scraped_at": "16/01/2022 16:18:36"}, {"index": "1586", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "GheeButters", "review_title": "Amazing addition to the franchise", "review_description": "This is an amazing game. As someone who's favorite Zelda game of all time has always been A Link to the Past, I think this serves as true successor. The graphics are great. Everything moves fluidly. The dungeons are very creative. The items and the map are awesome. Also, all the chibi-like characters are super cute. This is a must have game for Zelda fans and a great game to start being one.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "32985407", "uniq_id": "b1885873-f89e-56b7-8f5a-677914eca076", "scraped_at": "16/01/2022 16:18:37"}, {"index": "1590", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "SummerSoles", "review_title": "A real disappointment to a LoZ longtime player", "review_description": "This game has been effectively dumbed down. The dungeons are cake, the monsters are cake, the puzzles are cake. It's as if the game developers gave up on the long time tradition of making a long lasting challenging and replayable game. For a game of 40 dollars I feel as if the cost of each entertainment hour is not matched. The rental of the equipment is a good idea, especially since if you're 10+ you probably won't die. Yet that's something that seems awry in the gameplay. Maybe I was expecting another great LoZ game like Twilight Princess, even Skyward Sword was awesome. The remake of OoT was challenging and exciting, with great graphics and gameplay style. This is such a disappointment, after waiting half a year I'd say this was not worth it for anyone beyond the skillset of a child.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "11", "reviewed_at": "8 years ago", "rating": "3", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "32956602", "uniq_id": "8ac7fd02-51e7-596b-9198-0980bdc27000", "scraped_at": "16/01/2022 16:18:37"}, {"index": "1605", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Ronjon400", "review_title": "Wonderful games", "review_description": "These games are experiences not just games I think. To put it in perspective they aren\u2019t your call of duty or boring first Person shooter games they have meaning to them like your experiencing another life to me it\u2019s beautiful", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "123502422", "uniq_id": "4c8ee6e2-1c02-5728-b6f3-302e440afa73", "scraped_at": "16/01/2022 16:18:38"}, {"index": "1609", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "MrAwesome1983", "review_title": "Good story on 2 of the games.", "review_description": "Not really a big fan of two souls but the other two have a good story. Controls could use an upgrade tho", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "123224671", "uniq_id": "f28a4bca-4650-5894-94f5-6e6ae0521fd8", "scraped_at": "16/01/2022 16:18:38"}, {"index": "1634", "name": "Funko Pop! TV: The Simpsons Belly Dance Homer 2021 FunKon Exclusive 4.75-in Vinyl Figure", "brand": "Funko", "sku": "234661", "reviewer_name": "Taco breathe", "review_title": "Princess Kashmir Homer", "review_description": "It's Homer dressed as Princess Kashmir which never happened in the show. Funko has jumped the shark with the Simpsons line.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "4 months ago", "rating": "4", "average_rating": "4.3165", "reviews_count": "79", "comment_id": "186194447", "uniq_id": "af3de8e2-e9ff-5444-a53c-a067155fb9cc", "scraped_at": "16/01/2022 16:18:39"}, {"index": "1641", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Nickel", "review_title": "Great features and easy to operate", "review_description": "I got this watch as a gift about 3 weeks ago. I love how it tracks not only steps, but body battery, heart rate, stress level, etc. The emergency contact feature is very cool to keep people safe. It hooks up to headphones easily and makes your music to easy to get to. My only real complaint is the battery life. It oy last 3 to 4 days before I have to charge it again with little use, where as my Fitbit would last 7 to 9 days. All around it is a great watch and I have it personalized completely to my liking.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 days ago", "rating": "4", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236756360", "uniq_id": "ded3ba81-85fa-5df3-a099-8b647ddddf2f", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1642", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Joe1960", "review_title": "Easy  to use", "review_description": "This product was purchased as a gift for my son. He decided he wanted to go a different route. Best gift I ever got. The features of this watch are easy to use. I love being notified of text and email messages and the music download feature is convenient when at work. Having had competitors product, this has exceeded my expectations.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 days ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236752201", "uniq_id": "795eaf7b-0220-514a-b2f4-82fb1f561833", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1650", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Venu Girl", "review_title": "How Did I Live Without You?", "review_description": "Love my Venu! Great features, looks sleek and super motivating.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "17 days ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236481969", "uniq_id": "cef50606-578b-5828-bb2b-761bb4527619", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1653", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "PaPaw", "review_title": "Venu Square Music", "review_description": "This is my first Garmin, so the learning curve was steeper for me. Beautiful display, fun watch faces to play with, tracks loads of activities. Waterproof in the pool. I'm having to charge it nightly, but I have been playing with it a lot. I haven't yet used the gps function. I do know the swipe across to change screens isn't working as well for me as the dial would. Next one for me will have a dial to change screens and will be solar powered.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "29 days ago", "rating": "4", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236205476", "uniq_id": "3f1ca60a-a9ed-5380-b75d-b3a08d0a0a6f", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1658", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "JLV313", "review_title": "Almost perfect!", "review_description": "I bought this to record high intensity workouts for the health program through work. The battery life is good and it's comfortable. The strength app isn't super easy or intuitive to use but I like that I can edit workouts later. The one major feature missing for me is a medicine tracker (did I take it today, not a reminder). I have to record 1 second of martial arts every morning to remember if I took my pill. Even if I could add a custom type of workout that would satisfy it. I also wish it could dynamically set an alarm based on where you are at in your sleep cycle around the time of your normal wake-up time.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 months ago", "rating": "4", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "234566248", "uniq_id": "af2942a1-9d61-54f2-97de-471b81d86ca8", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1660", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Buzz", "review_title": "Broke on first run", "review_description": "Not sure how but top R corner chipped and cracked screen after 1 run. Yikes!!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 months ago", "rating": "1", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "234432739", "uniq_id": "5c52820e-4c53-59bf-83c7-c332e9522685", "scraped_at": "16/01/2022 16:18:42"}, {"index": "Overall", "name": " if you want to begin your fitness journey with a good smartwatch", "brand": " this is the option for you.\"", "sku": "No: I don\u2019t recommend this product", "reviewer_name": null, "review_title": "0", "review_description": "0", "recommended_review": "5 months ago", "verifed_purchaser": "4", "helpful_count": "3.7303", "not_helpful_count": "89", "reviewed_at": "233428341", "rating": "2dd86887-3e7f-5ae5-8c57-237a291289f4", "average_rating": "16/01/2022 16:18:42", "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1670", "name": "Truck Racing Championship - PlayStation 4", "brand": "Big Ben", "sku": "204724", "reviewer_name": "Anonymous", "review_title": "gg", "review_description": "my friend had a bit of a problem with getting his license.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "3.7917", "reviews_count": "24", "comment_id": "152158083", "uniq_id": "61171ae0-771a-5285-995e-7dddd1c950fe", "scraped_at": "16/01/2022 16:18:42"}, {"index": "1671", "name": "Truck Racing Championship - PlayStation 4", "brand": "Big Ben", "sku": "204724", "reviewer_name": "Jasleia W", "review_title": "Full Throttle Fun!", "review_description": "Fun game! Starting in noob mode starts out fun, working your way up! It just kicks butt!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.7917", "reviews_count": "24", "comment_id": "145255021", "uniq_id": "bd51b40b-c4e4-5c9d-b062-633903d91167", "scraped_at": "16/01/2022 16:18:42"}, {"index": "1677", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Tricia S", "review_title": "Great information source", "review_description": "I recently bought the Garmin Venu Sq - Music Edition. Had I really paid attention, I probably would not have ordered this particular watch. I\u2019m afraid the music features are lost on me as I\u2019m not really into listening to music this way. Overall, despite this feature I do like the info I get from this watch.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "232019771", "uniq_id": "4be5e923-651d-5ac9-8721-7e93c7455652", "scraped_at": "16/01/2022 16:18:42"}, {"index": "1685", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Tmichelle", "review_title": "Love the features. Easy to use.", "review_description": "I bought this a couple weeks ago and it's great. Love being able to track my workouts and foods. The only thing I wish I could do is connect to pandora.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "231362178", "uniq_id": "31090aea-7f31-5bd4-be90-6312e5b3ffbf", "scraped_at": "16/01/2022 16:18:42"}, {"index": "1701", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "JTs Mama", "review_title": "Great for getting your groove on!", "review_description": "My son and neighbors absolutely love dancing along to this game. There are a bunch of songs and dancing levels from which to choose.  Ordering it through gamestop was easy, and the product is in great condition.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "173340489", "uniq_id": "8e634320-ed49-5af1-a915-5aa3f8611fe6", "scraped_at": "16/01/2022 16:18:43"}, {"index": "1709", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Muffin", "review_title": "Great watch!", "review_description": "I have heart issues and my doctor said stress is likely a factor. This watch is great because it lets me know when my body is registering stress, which is something I\u2019d never noticed before. It also tracks my sleep and my movements/walking.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 months ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "230449790", "uniq_id": "c53436c7-9e87-5383-a6dd-a6bc00f5e943", "scraped_at": "16/01/2022 16:18:43"}, {"index": "1723", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "#1Golden", "review_title": "Love the colors and quality!", "review_description": "I got this as a Christmas gift and I love it. It was a great suprise", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "227295662", "uniq_id": "9c6b7b6f-ac14-5710-85dd-9357bbff45a0", "scraped_at": "16/01/2022 16:18:44"}, {"index": "1739", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Anonymous", "review_title": "It's just ok", "review_description": "It's decent but really more than what I need. Most if the activities I don't even do and it's not easy going from 1 screen to the next. I'm considering sending it back maybe for something less expensive and less complicated", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "225552047", "uniq_id": "582f91ee-725c-520a-94cd-d10c6c00b510", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1756", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Nonickname", "review_title": "Great features", "review_description": "Integration with my 520 plus is good, but instructions could be more precise.  Video instruction for each section would be helpful (ie golf, bike, walk, run etc).pairing Videos would also help. I realise that some are available, but a more logical progression / order would be beneficial .", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "224941773", "uniq_id": "0d289e97-5e81-5ba1-9b9a-440bcbe1af82", "scraped_at": "16/01/2022 16:18:45"}, {"index": "Easy music set up and headphone pairing", "name": " took no time at all to get my Spotify playlist on the watch and headphones connected.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Text size.  Can you please make this adjustable", "name": " my eyesight isn't getting better with age..\"", "brand": "No: I don\u2019t recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "4", "verifed_purchaser": "3.7303", "helpful_count": "89", "not_helpful_count": "224933023", "reviewed_at": "98a302a7-4b68-5170-a5ae-f38bd8ae6ba0", "rating": "16/01/2022 16:18:45", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1761", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "Tygerss", "review_title": "My MJ Experience.", "review_description": "I really enjoyed this game. It helps me keep moving.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "124298427", "uniq_id": "3e7043d0-fec7-55c9-b8f3-f081f43915ec", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1787", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Wally88", "review_title": "Solid game", "review_description": "Solid game and story line. I hadn\u2019t played a Pok\u00e9mon game since 2006 (diamond was my last game), so just wanted to get back to playing. Black was a good refresher.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "6 months ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "183265767", "uniq_id": "40bad41e-133e-5836-bb3e-74c880c44954", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1794", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "VMCFW", "review_title": "A Thriller of a Game", "review_description": "\"This is the best dancing game ever. Due to the fact that it is based on Michael Jackson, the artist with the highest selling album in the world \"\"Thriller\"\" (1982). It has all of Jackson's greatest hits with his iconic dance moves. I would recommend this to all Michael Jackson fans and dancing game fans.\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "34", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "4", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "69421652", "uniq_id": "834e02fc-6ba2-5870-93a8-03e1fbb77fc2", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1797", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "iicutiecakeziii", "review_title": "michael jackson experience rocks", "review_description": "i love this game it is actually like a good work out you just don't know you're doing it lmao but i think this game rocks on", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "29094818", "uniq_id": "06afcbf6-b5db-58ec-bbba-d08205269695", "scraped_at": "16/01/2022 16:18:46"}, {"index": "I HIGHLY recommend this to anybody who loves Pok\u00e9mon", "name": " these nostalgia googles", "brand": " cloudy they may be", "sku": " will never be taken off since they were given to me by a dear friend", "reviewer_name": "  who's name was Oshawott", "review_title": " even though I lost my copy one day I'll see my little friend again", "review_description": " someday", "recommended_review": " somewhere\"", "verifed_purchaser": "yes: I recommend this product", "helpful_count": null, "not_helpful_count": "5", "reviewed_at": "1", "rating": "1 year ago", "average_rating": "5", "reviews_count": "4.4195", "comment_id": "553", "uniq_id": "163432379", "scraped_at": "74d7ea87-711f-5965-b7e4-9cff97370762"}, {"index": "1811", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Rants", "review_title": "Hopefully it arrives in good condition", "review_description": "My copy hasn\u2019t arrived yet but this is my favorite game of all time so I know its gonna be good team plasma and the story there is so good the music so rememberable everything about this game I adore im excited to make my 100th tepig save and catch haxourous <- sorry if I spelt wrong and excadrill <- that too if I could give it 10 stars I would", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "148395911", "uniq_id": "9a1e192c-d71b-5b53-8922-e7e4d3bbd449", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1827", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "ttime10", "review_title": "love pokemon", "review_description": "I collect all of the pokemon games and love everyone of them", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "136184017", "uniq_id": "b87617df-ee77-5b1d-b5e3-afa90299c21e", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1829", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Grey80918", "review_title": "Pok\u00e9mon black", "review_description": "This game is amazing. Even if it doesn\u2019t have much to it, trading is always Available.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "131280572", "uniq_id": "bfae64ad-0d51-5fb6-9134-7d879904cfdd", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1830", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "PANDAWAN83", "review_title": "Awesome!!", "review_description": "Great game that stays true to Pok\u00e9mon while providing alternate accustomed storyline and characters.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "129942445", "uniq_id": "07aebd6f-ecd9-5e0e-882e-0606e9b1b9e0", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1839", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "MsBabybanks", "review_title": "By far one of the best all age game for the Wii", "review_description": "I played it at a friends house for the first time about a month ago. I havent been able to get it off my mind since. I received it as a birthday gift and now im use it more than expected. Its a great game when entertaining a small group of guest or even by yourself. I hope they consider a part II with more songs. For the most part I highly recommend this game. Enjoy!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "12", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "17032357", "uniq_id": "3bc1460a-05a7-5437-b4d1-5874a888e327", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1846", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Aston", "review_title": "If you want a good ds pokemon game this is it frfr", "review_description": "A good game. Works just as it is stated to. Love it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "127859115", "uniq_id": "8fa1e0cc-dd3f-5542-878e-23af9373a804", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1853", "name": "Battlefield 1", "brand": "Electronic Arts", "sku": "125976", "reviewer_name": "NCHammer2", "review_title": "Bad Game", "review_description": "It is not a good game..................................................................", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "15", "reviewed_at": "4 years ago", "rating": "1", "average_rating": "3.5556", "reviews_count": "9", "comment_id": "107368872", "uniq_id": "e16badf6-4f39-53ef-8e60-36d03fdd84be", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1867", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "JUSKEEZ", "review_title": "We love this game best family game ever", "review_description": "I grew up a Micheal Jackson fan and so are my children. We all love playing this game together. Actually we spent New Year's Eve Playing all night I / We love this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "16655182", "uniq_id": "8b86b2e8-e16d-5024-8006-2171e25ca5d9", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1871", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Bonney", "review_title": "Very happy", "review_description": "Played game before and loved it then now i got it for my daughter", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "125066320", "uniq_id": "d6c64cea-77cb-5bfa-9e23-ecbdddebd065", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1872", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Shadowpbg", "review_title": "Pokemon black", "review_description": "I like the game a lot. It is a great game. I might come back for some more games", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "124903886", "uniq_id": "28104e09-1aa8-509b-9eb5-a809db3318d3", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1877", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Pokeethan", "review_title": "Great game", "review_description": "I didn't like the game when I bought it when It was released. But when I played through it again, I loved it like any other pokemon game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "123291932", "uniq_id": "6eaf540d-5bf5-5a82-978e-45fffc35912f", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1881", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "jonatan", "review_title": "cool", "review_description": "you neded this game shop now this game this game is asome", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "16627533", "uniq_id": "9c6b376b-1c99-5771-85aa-5fef8e1b652f", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1886", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "RoRich1", "review_title": "One of the best games ever", "review_description": "Hours of family fun. It will keep a party going on for hours. Definitely worth the price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "16536353", "uniq_id": "72163b80-1141-5d95-b1e9-82192f50b4ea", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1887", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "socali24", "review_title": "Great For Everyone", "review_description": "This is a fun and great game to play with everyone. For Parties, Get Togethers and play only. It is a work out but a great game. The best game for 2010. Hope they make another one.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "16536190", "uniq_id": "e660efd5-c2ca-564e-b3be-2b9e6cb52da7", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1895", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Krysteena", "review_title": "Lost it, bought it again", "review_description": "Yep its a replay. I wanted to play it again because I didn't remember the story. I'm glad I did, I am finding it way more interesting than I did the first time I played it through.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "122282484", "uniq_id": "828e0dd0-4d16-5460-9187-df67e2fe02c3", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1903", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "Gemini", "review_title": "I can't believe how good it is!!!!", "review_description": "It is easy to play and a good workout! The song selection is great. There is music for every MJ fan.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "16400077", "uniq_id": "e6cea752-b653-5bfb-8e89-0c261c02a288", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1911", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "butterflyheart426", "review_title": null, "review_description": "The brand is the number one in my eyes and so many others.  It is not expensive and are used in many items and they last a long time.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 months ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "231067298", "uniq_id": "e9ad26dc-e566-501c-9d9e-3bd71c4c5008", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1918", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "akn1029", "review_title": "Great batteries", "review_description": "[This review was collected as part of a promotion.] These  D 4-Pack HIGH ENERGY\u2122 Alkaline Batteries are great to have around for baby gear such as a swing or bouncer and certain other kids toys. The battery life is good ans I would recommend them to family and friends.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "203998125", "uniq_id": "bfef706c-fd2b-55f6-9ce3-8fd30d71947d", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1919", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Esabella", "review_title": "Great battery", "review_description": "[This review was collected as part of a promotion.] I have been using this battery over two weeks regularly and it is working very well in the flashlight. So far I am happy with the battery.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "203980867", "uniq_id": "c52a9186-f929-5cd2-baa6-dd4d7b2e5e72", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1923", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Cmarcus47", "review_title": "Deffective", "review_description": "Game went blank after halfway through game", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "All in all", "name": " the game is a good one", "brand": " and I will be playing it for a long time", "sku": " I'm sure.\"", "reviewer_name": "yes: I recommend this product", "review_title": null, "review_description": "6", "recommended_review": "7", "verifed_purchaser": "11 years ago", "helpful_count": "4", "not_helpful_count": "4.3975", "reviewed_at": "239", "rating": "16246986", "average_rating": "6e97e218-40aa-560b-abb3-ace092541a18", "reviews_count": "16/01/2022 16:18:50", "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1946", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "Craig J", "review_title": "Good", "review_description": "It's like any other fighting game, just with dc characters.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "3", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "137380064", "uniq_id": "6f7a1037-2eee-529c-af89-41813d302e79", "scraped_at": "16/01/2022 16:18:50"}, {"index": "1947", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "Not Smith", "review_title": "Great Game", "review_description": "First time player, great game with good graphics and player selection.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "130609115", "uniq_id": "83e6742d-423f-5427-b3d9-868c16e83af4", "scraped_at": "16/01/2022 16:18:50"}, {"index": "1965", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "THE UNTOUCHABLES 1987", "review_title": "one of the best fighting games since MK.", "review_description": "Injustice Gods Among Us is from the people who bought everyone the one and only, Mortal Kombat series. this game is a lot like Mortal Kombat only with DC superheroes and villain's. every fighter is great in the game; it only depends who you like. the story mode is very deep, and exciting. plus the extra content is a bonus for the ultimate edition. overall great fighting game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "9", "not_helpful_count": "1", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "95564509", "uniq_id": "fe05bd46-9844-5008-a172-3a57b7242347", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1973", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Lulu15bb", "review_title": "Love it like all the series", "review_description": "I have all the pokemon games and I have to say this was really good. I loved most of the new pokemons and loved the new pokemon transformations and events. The story was nice and N was the best character created.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "4", "not_helpful_count": "2", "reviewed_at": "5 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "65887747", "uniq_id": "6dc60589-e9a7-51ba-878a-8eb6570b4570", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1980", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Stoffangadd", "review_title": "Upgrades", "review_description": "Graphics: They're upgraded since HeartGold and SoulSilver and by that I mean it uses more 3D and the backsprites in battles are animated. But animated backsprites doesen't mean that it looks good, it actually looks pretty bad compared to the still ones from the previous games. The Pok\u00e9mons are also cool and creative don't let the annoying Gen 1 fanboys trick you. Gameplay: The gameplay is just like HG and SS but there are new triple and double battles at random, there's also a few more new Pok\u00e9mon moves and TM's aren't destroyed when you use them (Thank God) oh and you can't walk with Pok\u00e9mon :( that sucks. After all SS and HG are just more fun and bigger games, Black and White are good starter games if it's your first time, but they're only good starting games HG and SS are great starting games. Story: The story is good, I won't spoil anything.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "32358368", "uniq_id": "9e215167-8c6c-5c20-a1eb-753fe5513952", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1982", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "Very Fun to play as a kid!! Because I am!", "review_description": "Hi i recomond this game because when i played black 2 at the end of the game in nevema town you find out what happend to you after you try to find N and black play this pre-owned to get gamestop power up points", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "30749641", "uniq_id": "e1f27292-2652-5bcc-901e-b58e2fcd8590", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1991", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Carol58", "review_title": "Good Batteries", "review_description": "[This review was collected as part of a promotion.] These are very comparable batteries to any of the other name brand batteries. I always buy these when buying batteries because they work just as well and they are lower in price!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "145718488", "uniq_id": "ec26f50f-f586-5538-acd4-2b06ddedb7bf", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1995", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "TNB719699", "review_title": "The game is perfect for ones that love fighters", "review_description": "People who love street fight, tekkan, & Mortal Combat I would highly suggest at least taking a look at the game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "7 years ago", "rating": "4", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "34127762", "uniq_id": "5d36d8e6-d1c6-59af-b12d-cbaa3b8752c7", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1996", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "lefteye", "review_title": "a good idea", "review_description": "I think it was an awesome idea for this game but some characters i think could have been better like bane could have been the newest bane or for a DLC most people like the dark night rises bane but they could have added different characters like killer croc, beast boy,or something like that but the original copy was a great game i never played this copy but from what I've played the game is awesome and i think nether realm and DC should keep working together", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "1", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "33603012", "uniq_id": "6f742dd0-a089-5bba-a90c-c01cabae1b51", "scraped_at": "16/01/2022 16:18:51"}, {"index": "The glow in the dark flashlights are good but they do not glow like I would have expected.\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "7 years ago", "review_description": "4", "recommended_review": "4.6053", "verifed_purchaser": "76", "helpful_count": "79957655", "not_helpful_count": "d83f0753-7431-5b0a-95b7-a43bbba85025", "reviewed_at": "16/01/2022 16:18:52", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2006", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Arbor", "review_title": "Products have good features", "review_description": "The lantern gives off plenty of light for our need during power losses at home. The flashlights also give of a good beam of light and they appear very durable. The package came to us very quickly.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "69202341", "uniq_id": "0d941976-fd5e-55da-baa1-4740d66627cf", "scraped_at": "16/01/2022 16:18:52"}, {"index": "2012", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "gamergirl1127", "review_title": "awesome", "review_description": "This is my first pokemon game and I am completely hooked. I would definitely recommend this to a friend or any gamer. If you are thinking about getting a pokemon game then get it. I was weary at first but after playing it for about an hour I was really happy I decided to buy it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "30151739", "uniq_id": "74865bd7-c207-5d24-b52f-202c543084c0", "scraped_at": "16/01/2022 16:18:52"}, {"index": "2013", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "StEaLtHXxY0L0", "review_title": "Pokemon Black is GREAT!", "review_description": "Pokemon Black is a very great Pokemon game. Though it is the only one i have played, i loved it. If you have another pokemon game like Diamond or Pearl, AND If you have ALL The gym badges, you can get on WI-FI or something and get your Pokemon from another game ONTO Black. I LOVE THIS GAME!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "29371777", "uniq_id": "5a7321b2-58c7-5535-bd9e-a66a6b4dd6f3", "scraped_at": "16/01/2022 16:18:52"}, {"index": "Pokemon are VERY pixelated. (I know pokemon hasn't ever been about graphics", "name": " but its hard to tell what your pokemon even looks like in battle. This was the first thing i noticed whenever i started playing)", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "One other vast improvement to the game is the soundtrack. Having played all generations except HeartGold/SoulSilver", "name": " I can honestly say that this game was the first one I can remember listening to all the way through. The annoying beeping when a pok\u00e9mon reaches low health has been integrated into its own song. It is no longer repetitive and headache-inducing", "brand": " but pleasant.", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "While not my favorite of the franchise", "name": " this game introduces great new features and improves on old ones", "brand": " guaranteeing a bright future for other Pok\u00e9mon games to come.\"", "sku": "yes: I recommend this product", "reviewer_name": null, "review_title": "0", "review_description": "0", "recommended_review": "9 years ago", "verifed_purchaser": "4", "helpful_count": "4.4195", "not_helpful_count": "553", "reviewed_at": "25563150", "rating": "a03ff777-e49b-5f2c-a129-d6be8415e19b", "average_rating": "16/01/2022 16:18:53", "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2036", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Anonymous", "review_title": "W2K19 awesome game", "review_description": "My 7 year old WWE fanatic likes it best out of all the WWE GAMES and he has them all!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "175624511", "uniq_id": "127d59f9-0ac9-585f-a4b7-378346bc2ec6", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2068", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Roman Woods", "review_title": "WWE 2k19 A.K.A the best WWE game of 2019.", "review_description": "It\u2019s really more than five stars, especially the WWE Showcase and MyCareer mode. Big upgrade from 2k18. The people actually talk! I love the game and 100 percent sure that you will too.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "141020296", "uniq_id": "81671162-a128-5c3f-b2e5-3c076aec84b4", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2075", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "FemeFatale27", "review_title": "Pro's and Cons!", "review_description": "This is actually the first Pokemon game I've played in a while. Ever since playing Pokemon Diamond and most of the GBA games which were good but the story often got either frustrating and or respetive for me. I'm pretty happy I bought Pokemon Black to me it's the best out of any Pokemon game I've played, but there are some equally frustrating things about this one. Cons: One of the biggest problems I'm having with this game and the reason why I only gave it a average rating was because the new Pokemon are a nightmare! Not only are they not creative such as Wubat (who had me laughing for hours because it was such a rip-off of Zubat) but they are really weak! I found myself having real difficulties with beating anything after my 4th gym badge. I mean seriously my starter Pokemon Tepig; who is said to be the best out of the two other starters is in 2nd evolution level 35 and is losing to wild animals of level 22!! whats up with that!? Which believe me is SOOO frustrating!!! and for some reason they decided to pix-elate the Pokemon so the pokemon look like they did in the Gameboy Advance games which isn't horrible but they just leave you thinking why? Pro's: The pro's of the game is that the game settings are amazing! and unlike the Pokemon are so creative and just so fun to explore! The game also has lots of opportunities to help your Pokemon advance levels which would of been great except the Pokemon are really weak so it doesn't help much. Also I love that they didn't make the gym leaders ridiculously hard like they always do in the previous Pokemon games. In conclusion the settings and places in this game is great, the Pokemon not so great. So if you can stand always running back in forth from forest to health center throughout the game then I would recommend it! BUT If you get frustrated with things like that like I do you might want to wait and buy Pokemon Black 2 (which i'm totally getting) because they are bringing back the the good Pokemon generations as well as the new ones in this game and hopefully with all the new settings and places like this one:)", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "4", "reviewed_at": "9 years ago", "rating": "3", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "24037914", "uniq_id": "0fdb1b90-8cb3-546c-848d-c814d17552ce", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2077", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "SO AWSOME", "review_description": "I love the game. Its so fun and it looks so 3d. i wish i got genesect to but i will have to wait. i beat the game in a week it was so fun.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "24029500", "uniq_id": "871cfa7e-ebf7-52f5-8b1a-d560fb93ce3f", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2083", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "joeyc", "review_title": "good value package", "review_description": "I feel that even though the overall package is a good value, I think the lantern is overpriced.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2102", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Schmitty", "review_title": "Dont let anybody trick u into this...", "review_description": "This game was aweful... I bought it a while ago, when white and black first came out. I was pumped to play a new pokemon game, simply because they are a good way to get entertainment. This game sucks... horribly.... They seriously brought the graphics back to a way WORSE than playing blue or red. Dont waste your money. If your going to buy a pokemon game get one of the other ones NOT black or white.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "19", "reviewed_at": "9 years ago", "rating": "3", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "22712643", "uniq_id": "2ff3bba1-2588-510e-b731-9c1ae89dabba", "scraped_at": "16/01/2022 16:18:54"}, {"index": "2105", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "dtwiiguru6", "review_title": "Geared toward novice players", "review_description": "Pokemon Black Version is the companion to Pokemon White Version, the fifth generation Pokemon games. This fifth generation game really delivers the standard Pokemon experience. As I said, this game is geared toward novice players who are new to the series. Some of the features that can show you this can also really enhance the gameplay for anyone. The text moves faster, the Pokemon attack faster, and some more things to really enhance the gameplay. It's the little things that make the game more fun. But perhaps the biggest thing to make the game easy to pick up and play for anyone is that Pokemon gain so much more experience per battle that it makes level-grinding obsolete, which is a good feeling. Switch training is also still very effective for training many Pokemon at once. If a Pokemon has a status ailment, it will show it on the pokemon's body, like if the Pokemon is asleep the sprite's eyes close to show that it's asleep. Parts of the game stray away from that isometric viewpoint that many Pokemon veterans are used to, and make use of full 3D. The best examples of this are on the Skyarrow Bridge and in Castelia City. That alone makes the game so much more enjoyable. The music is overall not that great, but there are some songs in the game that are so good, they make up for all the bad ones. The following isn't anything new to me, but I think the female sprite is just hot. What can I say? Pokemon girls are hot. Pokemon Black is a great game. Good graphics, decent music, and the small things have been improved that just make the game more enjoyable. It may be a bit too easy for a Pokemon veteran, but this game is still very easy to recommend to anyone, whether you are a Pokemon veteran or new to the series. Buy it now.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "7", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "22004550", "uniq_id": "bbb2f784-daf1-51b2-9f49-851e17c0acdb", "scraped_at": "16/01/2022 16:18:54"}, {"index": "Turned out beautiful.  Also added remote controlled battery lights to the ceilings", "name": " makes it look very real especially when the front is closed.\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "5", "verifed_purchaser": "4.7143", "helpful_count": "21", "not_helpful_count": "227821313", "reviewed_at": "c8141619-216e-5423-a6b6-0676189a6571", "rating": "16/01/2022 16:18:54", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2118", "name": "KidKraft Grand Anniversary Dollhouse", "brand": "KidKraft", "sku": "318606", "reviewer_name": "Eunice", "review_title": "The 50th Anniversary Doll House", "review_description": "The Doll house is Beautiful .My Granddaughter loves it .Not to difficult to put together ,my son said they should print the instructions in color.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.7143", "reviews_count": "21", "comment_id": "227418618", "uniq_id": "3edad16b-cebf-5ad3-8f2a-340786aaaf12", "scraped_at": "16/01/2022 16:18:54"}, {"index": "2134", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "macperson101", "review_title": "Love it.", "review_description": "I like the game. Completed it very fast.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2138", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Novashooter", "review_title": "Good game", "review_description": "The world map of the game got smaller and the gym battle are easy...making this pokemon series kinda of nooby it good game but it wasnt hardcore like ruby or pearl....", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "21768332", "uniq_id": "c9323b4f-607f-5a3b-a3be-bac6bbf334ed", "scraped_at": "16/01/2022 16:18:55"}, {"index": "2145", "name": "KidKraft Grand Anniversary Dollhouse", "brand": "KidKraft", "sku": "318606", "reviewer_name": "Susan", "review_title": "Wow, i wish i was little again", "review_description": "This dolls house is amazing!  We bought it for our 4 year old and she absolutely loves it, she is going to be playing with it for years to come.  Excellent quality , large, colorful and comes with so much furniture.  I feel its worth a lot more than the price we paid.  Awesome!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.7143", "reviews_count": "21", "comment_id": "227272724", "uniq_id": "c833c08e-5e18-5e2b-9f29-13cd1f801290", "scraped_at": "16/01/2022 16:18:55"}, {"index": "Don't mistake me for saying this game is bad - it is indeed a superb game. I would like to cover each aspect of the game.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "As for the story", "name": " you are a boy/girl of around 14-16 years of age", "brand": " with two friends Cheren and Bianca. The three of you are about to receive your first pokemon from Professor Juniper(who also happens to be the first female professor in the mainstream Pokemon games). With your pokemon", "sku": " you will be setting out not only on a journey to defeat the pokemon league and claim the title of champion", "reviewer_name": " but to be acknowledged as full-fledged adults", "review_title": " which makes sense", "review_description": " considering your character's age. Along your journey", "recommended_review": " you will be encountering Team Plasma", "verifed_purchaser": " an organization striving to separate pokemon from humans. You", "helpful_count": " of course", "not_helpful_count": " are against this ludicrous ideal", "reviewed_at": " and things become more serious.", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2172", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "MaryKaye", "review_title": "It was enjoyable.", "review_description": "I've been playing Pokemon games for the past (my rough guess) 15 years, and was a huge fan of Pokemon Blue Version. Still am! That said, Pokemon has come a long way graphically, but not so far for storylines. This game stuck more with the traditional game play style than, say, Pokemon Ranger, which I liked. The story wasn't bad, either. All in all, I enjoyed playing this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "20398626", "uniq_id": "66d32af8-7c40-5cdd-bfd7-44cd1389e320", "scraped_at": "16/01/2022 16:18:55"}, {"index": "2249", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "starchild1701", "review_title": "it was ok could have been a better picture", "review_description": "we only bought it for the peggle game that came with it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "123248361", "uniq_id": "33b64013-ee87-513d-af6c-a480d4c41c38", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2267", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Academy08", "review_title": "Trash", "review_description": "Career mode could of been way better. I loved the game at first but then it completely became wack.  Maybe next year they will do better.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "127188355", "uniq_id": "686af6ea-385e-5d59-a22e-69d11e7c82ba", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2308", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Buster from Houston", "review_title": "Cool fun game", "review_description": "Fun wwe game , probably the best since 2008 WWE game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "126425205", "uniq_id": "f93b12ff-49af-505f-82ac-9b77f18b2641", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2309", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "micahthegreat1_", "review_title": "Amazing!!!", "review_description": "I love this game the career mode storyline is so good.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "126341419", "uniq_id": "4e7ad05d-ced4-561e-a048-35826514b13b", "scraped_at": "16/01/2022 16:18:58"}, {"index": "They make the reversals hard to do it\u2019s either to fast", "name": " to slow or shows green but doesn\u2019t work properly. ", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2314", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Ty Trudeau", "review_title": "WWE 2k19", "review_description": "A very ambitious game. I can see what the the developers had in mind. But the game  ultimately fails to capture the true esque of what pro wrestiling is. Final score 5/10.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "125824032", "uniq_id": "b8f8a1b7-505d-58c6-ba71-6777eefa0f81", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2320", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Akxb9s", "review_title": "Love WWE, not a good game", "review_description": "Controls are slow and either your to slow or to fast when it wants you to hit a button.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "125722035", "uniq_id": "ad06e2b4-3b67-5805-88b0-735e6d9ea752", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2337", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "slapshot", "review_title": "Zombie Attack", "review_description": "The best part of the game is vs. and the campaign.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "19602310", "uniq_id": "6c24d27b-5dc9-5998-b739-f1ece636d1f6", "scraped_at": "16/01/2022 16:18:58"}, {"index": "-Graphics. This ought to shut up those who say the Pokemon series has terrible graphics. The Pokemon Series has never been about graphics", "name": " but Nintendo updated them because that's all gamers think about these days.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2349", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "andrewpbeast", "review_title": "A Great Last Game to the DS", "review_description": "This was the last game for the DS to some. The 3DS was about a month away, and no one could wait. But Nintendo pulled out a new Pokemon main series game to end the DS off, and we had no problem waiting another month for the 3DS. This game, in my opinion, is what Pokemon Diamand and Pearl should have been. It actually boosted up the graphics, made the Pokemon always moving, added a new camera view (both in battle and out), and made online play accessable. Plus the game has a lot of content... including 150 ALL NEW Pokemon. So... let's get on with the review. -----GRAPHICS------ Nothing ground-breaking, but they still look very nice, and the animations are great! -----FEATURES----- The game features 150 new Pokemon. That might be enough to make you want to buy this game. Plus there is a whole new region to explore with new cities, characters, and a whole new dramatic story. Plus all of the Pokemon from past versions are able to be caught or traded after the main game is over... so replay value is pretty high. -----GAMEPLAY----- The gameplay is awesome. It is Pokemon (and its fast paced, unlike diamand and pearl were). You run around and explore areas, finding your way through puzzles and areas, and pitting your Pokemon together in classic RPG battles. Pokemon in its prime. -----CONCLUSION----- This game is awesome. If you do not own either black or white, buy one of them (or both!!!). These games are true Pokemon classics... enough said!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "8", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "18762069", "uniq_id": "6a245aea-2dc8-5485-8180-cd35fe8d1539", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2376", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Bison272", "review_title": "Nice but I am not ready...", "review_description": "Create a character was too hard to understand and I gave up.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "124300716", "uniq_id": "d5864fe7-7eaa-5072-9011-a881984ec596", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2379", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "TBSS", "review_title": "Bad character design", "review_description": "They did a terrible job with the Ultimate Warrior, doesn\u2019t even look like him", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "124097084", "uniq_id": "b3cce5e8-109b-5d36-a4f0-1630eabfe00b", "scraped_at": "16/01/2022 16:18:59"}, {"index": "The concept is very simple and it actually works better than you'd think. It's always fun to see what lawn setup works best and how you can create new and wild plant formations to clear away the zombies. Also", "name": " the grid-style map really does work well as a mouse substitute for the Xbox 360.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2413", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Heathermc123", "review_title": "Last a long time", "review_description": "[This review was collected as part of a promotion.] Having a 98 lb dog means lots of walks.  Walks in the morning, afternoon, evening and even in the middle of the night.  With means I have to have a flashlight always ready.  I don\u2019t want to stumble.  The batteries not only made my flashlight shine bright but they have lasted a long time.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231643277", "uniq_id": "6da1cabc-0ecd-54d4-9513-6918511d756e", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2418", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Brittbrat47", "review_title": "Great product", "review_description": "[This review was collected as part of a promotion.] These batteries are amazing! They stay charged for really long periods of time even with continuous usage! They work great in children\u2019s toys! They are easy to use and it only takes a couple to last for weeks! It\u2019s a product I can trust and I am comfortable buying each time! It\u2019s durable and it lasts!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231585578", "uniq_id": "134c831a-d990-5841-a6fd-e3b2460836ad", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2429", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Anonymous", "review_title": "Doom Slayer", "review_description": "Non stop action, blasting my way through the game. Huge guns , big bosses good story. Visuals are great. A lot of cameos in the game.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2439", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "RJHJ", "review_title": "Never again", "review_description": "Controls were glitchy and not always responsive. Short Mycareer mode and no women's career mode", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "123845835", "uniq_id": "abc57723-6b82-51dd-bd97-fe81c60877b4", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2448", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Roman330", "review_title": "Moving in the right direction", "review_description": "As is often the case with 2k games (and in particular the wwe series) the game definitely has some bugs and flaws. They don't ruin the gameplay experience, but, do take a bit away from it. Outside of that this is the best game WWE has released in at least a decade. Fun new features, solid graphics, huge roster. Hours of entertainment to be had with the re-tooled career and universe modes. Not a perfect game, but, definitely a step in the right direction and leaps and bounds better than 2k18 was. Only knocks are the general glitchy-ness and repetitive commentary.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "123355989", "uniq_id": "ac316aaa-36a3-5bac-bb29-5713cdfb64a9", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2450", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "ADHDidentified", "review_title": "Great clear HD screen", "review_description": "[This review was collected as part of a promotion.] I used it through CNA school and used it with my job as a peer worker in narcotics anonymous.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "212263389", "uniq_id": "6177f393-43dd-52b2-9fa2-6c6c25516f2a", "scraped_at": "16/01/2022 16:19:00"}, {"index": "The only drawbacks I found are it doest swivel and has no USB c port.\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "5", "recommended_review": "4.1605", "verifed_purchaser": "81", "helpful_count": "212231611", "not_helpful_count": "399bb3a4-c9d3-5a3e-8475-b49d2eb6ccd3", "reviewed_at": "16/01/2022 16:19:00", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2454", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Indio", "review_title": "Awesome gaming monitor!", "review_description": "[This review was collected as part of a promotion.] This monitor was a big upgrade from my previous Samsung monitor. For gaming, the 144hz refresh rate stands out as the video is buttery smooth. The color reproduction is great, especially after calibrating the monitor. Blacks can be a little deeper as this is not an oled monitor and of course there are options with higher refresh rates. Outside of that this monitor is a great choice for anyone looking to up their gaming experience.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "212216493", "uniq_id": "40ee16ba-9452-598b-8fb3-1d07b48737ba", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2455", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Kingkja", "review_title": "Amazing curved monitor", "review_description": "[This review was collected as part of a promotion.] I used it for PC gaming and my PS5 and it worked amazing. Beautiful colors, and amazing refresh rate.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "212197269", "uniq_id": "355a3859-10c3-5a65-b135-759af46cedb9", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2469", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "AmberC87", "review_title": "Excellent", "review_description": "[This review was collected as part of a promotion.] No matter what anyone tells you, I do believe Energizer batteries last longer than off brand ones. These have been put in a toy for my daughter since the day we received them, and the toy is still going strong. Normally, we do have to change the batteries every few weeks. These batteries are great, and we will only purchase Energizer from now on!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231422346", "uniq_id": "8fcff3d9-f2ab-5887-8f71-47c3bd022720", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2473", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Ian Ridge", "review_title": "DOOM on Switch", "review_description": "Always a great game to play. Took some getting used to playing it on the Switch, but is still TONS of fun.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "6", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "153253026", "uniq_id": "44c7af51-67bf-51d4-82de-b03adc817810", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2475", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Seanstr26m", "review_title": "This is a fun title to play.", "review_description": "It was a lot of fun and a great introduction to the Nintendo switch.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "145099131", "uniq_id": "2cbf7fd4-31ec-5f7c-bf78-11c02ed35f53", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2481", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Erickus", "review_title": "Great game", "review_description": "Excelente game. A bit disappointed on the port, still fluent though. The game itself is superb.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "141857413", "uniq_id": "dea8c346-f705-5dbb-8061-310bb0ca00f7", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2486", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "blackpoke6047", "review_title": "Best Game Ever!", "review_description": "I don't have any other pokemon games so I can't compare this to any of them. Right when I started this game I became addicted! In my oppinion this is the best game Ever!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "18185345", "uniq_id": "1a4c2202-f732-55ef-bd9b-60afcf9eca4d", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2499", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Dave Garrett", "review_title": "Not bad.", "review_description": "Gameplay was an adjustment since I hadn't bought a wrestling game since 2003 but I got the hang of it and became fun. The menu system in creation mode is a gigantic one which makes it somewhat confusing. The soundtrack is awesome as well, with lots of uptempo metal and rap to get you pumped up to start slamming guys around. Lol", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "123058268", "uniq_id": "7ae1db89-7180-5ad1-8554-e483c1693c6d", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2508", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Stylist", "review_title": "Light weight", "review_description": "[This review was collected as part of a promotion.] I would use this for work and playing video games with my daughter.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "212142721", "uniq_id": "fb7ff4b8-38a9-569f-8896-1ceda1111a7b", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2526", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Rmh00", "review_title": "Never Disappointed", "review_description": "[This review was collected as part of a promotion.] As a family we have always used Energizer batteries and they have never let us down obviously good quality long lasting expiration dates and who doesn't love the Energizer Bunny. After trying the Energizer Max batteries we definitely will be buying these they seem to give a little bit more power and definitely last longer. We will continue to be an Energizer battery family M will definitely recommend these to our friends", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231299380", "uniq_id": "14cfbe38-c4d1-5e06-a24c-437ad4a39b65", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2529", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "165072", "review_title": "Doom", "review_description": "Good game, not for those that like to feel invincible. You will die.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "141384686", "uniq_id": "24b9f07b-164e-5f28-b9b3-4d9f0c27a1a0", "scraped_at": "16/01/2022 16:19:01"}, {"index": "The Nintendo switch is the downfall. The operations of the game on the Nintendo switch are absolutely horrible for anybody choosing this title on this platform.\"", "name": "No: I don\u2019t recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "3", "recommended_review": "4.4127", "verifed_purchaser": "487", "helpful_count": "137242542", "not_helpful_count": "4bad798b-7722-53fa-852d-d57a791623ad", "reviewed_at": "16/01/2022 16:19:01", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2542", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Ironmaiden1207", "review_title": "New and Upgraded Game Mechanics", "review_description": "Pok\u00e9mon Black is a great and refreshing addition to the series. Generation V adds in new pok\u00e9mon (155 new ones to be exact, which is the greatest amount added to date) to excite and surprise both new and continuing fans. The updated graphics from Diamond/Pearl/Platinum are beyond what anyone who followed the game\u2019s announcements at E3 expected (including me). Game Freak took the capabilities of Nintendo\u2019s DS, a system that came out over five years ago, and pushed them to their absolute maximum. At first glance the graphics seem the same, but the battle animations as well as a few of the cities really pop out in stunning detail. Having said that, this review is mainly geared toward the continuing fans that understand the game\u2019s underlying mechanics such as IVs, EVs, and the nature of breeding for competitive play.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2555", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "badbart", "review_title": "A ton of new and old school wrestlers", "review_description": "I bought this on sale at Gamestop and I really like it. I haven't bought a wrestling game in a long time but I am glad I got this one! Great graphics, the moves are easy to pull off, even for me. Get it you will like it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122724026", "uniq_id": "dfb5b137-510e-5588-a02e-8299fb3c8c01", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2556", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "WillRabbit", "review_title": "Reminds of the classic wrestling games.", "review_description": "I bought WWE2K19 originally for my nephew as a christmas present. Bit decide to play myself the game plays alot better then the last couple of game. Enjoyed playing it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122716641", "uniq_id": "57616dc8-09f9-58f1-ba19-0658b6172f7f", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2561", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Anonymous", "review_title": "great but dont know how to fix motion blur", "review_description": "this product is really great but i dont know how to fix the motion blur and it makes the game look really ugly and it would be really helpful if someon can help me", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "208062710", "uniq_id": "843a56ba-9273-5154-ae22-db7579cb6e9a", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2587", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Anonymous", "review_title": "The gameplay", "review_description": "This game isn\u2019t a shooter like Call of Duty or like Destiny. It\u2019s a run and gun type game. If you stop moving you die.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "130513065", "uniq_id": "f81cee93-e8d2-55f9-b7fb-085c5599639f", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2601", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "BigD2231984", "review_title": "Great fun", "review_description": "A really exciting game being I'm a wrestling fan I really enjoyed the look and gameplay of it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122690238", "uniq_id": "9be8c89c-5588-57ed-8c37-514f44b886e3", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2604", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "TDRookie", "review_title": "Quality", "review_description": "never buy this monitor. jog button that use to  control main menu does not work all the time. i have to send it bout again for 2nd time services in just couple months . and you have to wait almost 3 weeks to get it back. terrible and big mistake when i bought this monitor", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "200425970", "uniq_id": "ff344c57-18d2-579f-b82b-486fad1b5c5f", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2609", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Swimnwild", "review_title": "Simply won\u2019t work", "review_description": "I\u2019ve bought multiple copies and get the same error. Dirty disk. I bought 2k18 first. Got the error. Returned it but they were out. So I drove to San Jose. Got a new copy same error. Went back to San Bruno they were baffled suggested I buy 2k19. So I did. Same error. So whatever", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122681370", "uniq_id": "bdd1ee97-ce70-5dff-ab66-5ec25e332137", "scraped_at": "16/01/2022 16:19:02"}, {"index": "The monitor does have excellent colors and contrast", "name": " and it is indeed fast for a curved VA monitor.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2620", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Bella125", "review_title": "Great value", "review_description": "[This review was collected as part of a promotion.] It's Energizer, not much more to say!  Always reliable and last a long time for me.  This is the first time I have tried the Energizer Max and so far, so good.  I'm expecting great results as with other Energizer products.  Can't go wrong with this brand!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231198339", "uniq_id": "54cb9d30-f7bf-597e-9c31-ae798aaa18e2", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2628", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Cosmetic mist", "review_title": "Great game for us adult switch gamers", "review_description": "This game is surprisingly good. I thought that it would have trouble running on the switch but it is turning out to have no problems at all.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "130454649", "uniq_id": "a4742315-9973-572e-addb-0362adc7a4a0", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2636", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "LLIV", "review_title": "Repetitive Shoot Em Up", "review_description": "Fun for about an hour, then becomes repetitive. Online matchmaking is awkward and buggy and gameplay feels like a B-rate Halo knockoff.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "14", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "128630101", "uniq_id": "3f5cd468-b9e7-5817-b4a8-652aedcbb29d", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2641", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Jetset Boutique", "review_title": "Condition", "review_description": "Item arrived in great cosmetic condition however the black line on the screen was not on the description", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "6 days ago", "rating": "3", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "197350868", "uniq_id": "7a2a4c36-5dfc-5061-8bff-00ab85acf7a4", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2646", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Pgehrke", "review_title": "Great stuff!", "review_description": "Awesome phone! Appears new with 100% battery and flawless appearance.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "16 days ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "194407146", "uniq_id": "3329e415-b857-5049-af32-c3cae3d28990", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2650", "name": "Star Wars The Force Unleashed: Ultimate Sith Edition - Xbox 360", "brand": "LucasArts", "sku": "952540", "reviewer_name": "WhackusBonkus", "review_title": "It's showing Cracks but still worth playing", "review_description": "Tons of cool extras and new unlockables etc. But the main games issues remain. The devs or rather the publisher EA has not done their due diligence in making a special edition. The controls remain somewhat unresponsive and the animations suffer with all the new costumes and some of the physics that they undergo. I still really enjoy this game, despite it absolutely demolishing the force as a concept, that is actually the most fun part, this 'turned up to 11' star wars universe is bomb and still a well worthy disc to load in your Xbox this Halloween.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 months ago", "rating": "5", "average_rating": "3.9615", "reviews_count": "26", "comment_id": "188652612", "uniq_id": "679f1045-d1ec-52c2-957f-1f259f25c936", "scraped_at": "16/01/2022 16:19:02"}, {"index": "The game itself is really fun and enjoyable.\"", "name": "No: I don\u2019t recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "1", "review_title": "1 year ago", "review_description": "1", "recommended_review": "3.9615", "verifed_purchaser": "26", "helpful_count": "165066929", "not_helpful_count": "566d8636-9f62-555d-a299-2c23c854686a", "reviewed_at": "16/01/2022 16:19:02", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2654", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "bigdog1998", "review_title": "Very good pokemon game!", "review_description": "I just recently got this game and fell in love with it as soon as i first played it. The new pokemon in this game are very unique. This game is very challenging in some parts, but everyone likes a good competition! This game is the hardest pokemon game i have encountered so far but this can also be a good thing. Overall, this game is a very good pokemon game!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17728368", "uniq_id": "61f41895-9d1d-557d-81dc-1b00f56f80d5", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2662", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "drycones", "review_title": "A over the top game for everyone!", "review_description": "First off I just want to say that this is a game for everyone. The more you play it the more fun you will have. I have played this game now for about 120 hours and I don't think that will be a fourth of the time I play it for. Yet at the same time I found that it was great if I only wanted to play for 20 mintues at a time. This is a great game for long time Pokemon fans and for newcomers to the series. No matter who you are I think you should get this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "9", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17710118", "uniq_id": "08da893c-dd1f-5f63-831f-e1f97872ef64", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2703", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Genaro77", "review_title": "Great gameplay", "review_description": "Doom is one of those games that you have to play over and over again I also like playing online it's very challenging I can never get bored with this game at all", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "127856473", "uniq_id": "17b49413-3aa4-5ebd-a885-fbf4784c7011", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2705", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Blondegyspy", "review_title": "Fantastic First Person Rush", "review_description": "Fast pace and beautifully rendered with the same level of creepiness that the original game had. I was concerned at first playing it on the Switch but turned out to be the PERFECT platform for this game and I would definitely recommend it!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "127480130", "uniq_id": "4600dafc-2822-567e-8bc0-f8c22c81f15a", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2708", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Jack was already taken", "review_title": "Doom", "review_description": "Solid game.  Not really my thing normally, but glad to have it as a part of my collection.  Would not have bought digital.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "127172821", "uniq_id": "c07a946b-ca9b-510f-90b6-46f77e695c92", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2712", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Hello92", "review_title": "Worth it", "review_description": "Best deal I could find battery life was fair 93%. No scratches or cracks. Came with USB charger better then nothing", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "192398049", "uniq_id": "eb67a5ea-fd61-5521-bb56-cd8ec164be09", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2714", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Cam Cam", "review_title": "As advertised", "review_description": "phone came in great condition and so far no issues.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "192328160", "uniq_id": "bbd79486-b7f4-5a0b-9fb5-8ee7af33c0d7", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2718", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Hoosier Daddy 8669", "review_title": "Couldn't have asked for better", "review_description": "It was in perfect condition. Delivery was flawless. Exactly what I purchased, and that's exactly what I got. Couldn't have asked for better.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "7", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "191483237", "uniq_id": "36b7410c-a2f7-5891-b20d-cbd244931f1c", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2729", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Trixiesue", "review_title": "The best", "review_description": "[This review was collected as part of a promotion.] I think that these Energizer MAX batteries are the best. They last longer than most batteries do. They work great and the flashlight I put them in is bright, so I know they are doing their job! I will be buying them again.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231053539", "uniq_id": "4807da67-c6ce-5995-947a-057d227f7e57", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2764", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "878767787", "review_title": "85% Battery Life, Not Certified by Apple", "review_description": "\"They're not technically lying here, but the term \"\"Certified Refurbished\"\" generally means that the product is certified and refurbished by the manufacturer", "recommended_review": " so I feel kinda mislead. If they're using the same terminology as Apple", "verifed_purchaser": " they should have the same standards. 85% battery health is a big disappointment. What exactly was refurbished if such an obvious thing as the battery was not? This is just a used phone that has been cleaned and hopefully tested. Does the 1 year warranty cover a new battery?\"", "helpful_count": "yes: I recommend this product", "not_helpful_count": null, "reviewed_at": "32", "rating": "4", "average_rating": "1 month ago", "reviews_count": "2", "comment_id": "3.8558", "uniq_id": "104", "scraped_at": "191192921"}, {"index": "2765", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Sebasti\u00e1n_1", "review_title": "Good", "review_description": "You get what you paid. I got my iPhone one week ago, and I haven\u2019t gotten any problem. The condition of the phone was really good. I was scared about the battery, but I checked it. It was great.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "12", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "191055260", "uniq_id": "2b9fad96-ef67-51b3-a167-876190143d12", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2772", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Kellie B", "review_title": "iPhone 12 Pro 512GB", "review_description": "I received this phone refurbished and it looked brand new even though the rating was good not excellent. It has performed beautifully with no issues whatsoever. Would definitely buy another product from GameStop.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "8", "not_helpful_count": "1", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "190336482", "uniq_id": "6fc9cec8-cc30-57f8-a5d1-6ebd514cf379", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2778", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Scorp333222111", "review_title": "Very Boring- Not Scary At All- Don't Bother", "review_description": "This game doesn\u2019t live up to Supermassive\u2019s \u201cUntil Dawn\u201d. This game is extremely boring and not scary at all. The few attempts it makes to scare you just aren\u2019t scary. It all takes place mainly on an old WW2 ship. It could have been so much more scary. It doesn\u2019t have nearly as good of a setting as Until Dawn. The game just doesn\u2019t seem polished or maybe even finished. This game and \u201cLittle Hope\u201d are both this boring and not scary. Hope Supermassive takes a note from these bombs to create something much better the next time around. It\u2019s also only 4 hours long and not worth the price. Definitely don\u2019t recommend.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "5", "reviewed_at": "11 months ago", "rating": "1", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "172328953", "uniq_id": "ead96a3e-39ab-54d5-97c5-e6884de43997", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2788", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Bellabo67", "review_title": "Super product", "review_description": "[This review was collected as part of a promotion.] I have always used a different batteries but I never will use them again. These are the bomb!!! I put these in my flameless candles and they shone so bright. They were actually brighter. Will recommend to everyone I know!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231030884", "uniq_id": "e1b8b8ef-c047-5db4-b230-f555fa4e3fc0", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2789", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "BlueDragon21", "review_title": "Amazing product", "review_description": "[This review was collected as part of a promotion.] I got these batteries because I needed some for my flashlight. I was shocked that these made the light brighter and I know with this brand they will last for a while. I recommend getting these batteries for emergency use.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231030573", "uniq_id": "f98c5120-284c-54b4-805f-3f58720b58bc", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2795", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "gamer9977", "review_title": "best pokemon game yet!!!!!!!!!!!!!!!!!!!!!!", "review_description": "I love this game very addictive one day i played it for at least 12 hours!Graphics are AWESOME for a ds game!I beat this last Saturday and the Pokemon I have are,Serperior LV.74,Reshiram LV.57,Cinccino LV.54,Unfezant LV.52,Zoroark LV.64,and last but not least SimipourLV.65 I also love the new gyms especially the fourth one in Nimbasa city which is a roller coaster.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17497379", "uniq_id": "ceced451-e3fd-5946-a90c-0eee51e6b033", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2802", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Dookie", "review_title": "Worst Pokemn Game Since Ruby", "review_description": "This is by far the worst Pokemon released so far. I mean, normally, you get a Pokemon game and keep playing and playing. I could only play one day before I put it down. It sucks! walking is stupid, and the battles are overly hard.. If you plan on getting it, wait unil the price drop", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "34", "reviewed_at": "10 years ago", "rating": "2", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17448024", "uniq_id": "5381612a-c556-5457-b7a5-c0182f23ca6f", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2806", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "eglou", "review_title": "i recommend you guys to experience it for yourselv", "review_description": "good to great I think to play this high graphics game to a on the go console. not exact the same graphics as on the pc and ps4 but yeah its good.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "125404884", "uniq_id": "aad1d406-fee2-5a7b-810c-7ea21b8c7561", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2808", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Marktzin", "review_title": "Doom baby!", "review_description": "Who doesn\u2019t love the all time classic doom. When I was little I was terrified of the doom created in the early 2000\u2019s but now that I\u2019ve grown up, playing this game has been a great expierence and a bit different from your common shooters", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "125159473", "uniq_id": "1ee240ed-47cc-5e64-b7e9-f2b15872dbae", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2815", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Michael63728738383", "review_title": "It\u2019s the same game as last year", "review_description": "It\u2019s literally a copy with the only change being a different menu screen", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120998968", "uniq_id": "feebe97e-6a69-5f32-b3be-19fba7cc36b3", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2819", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Sirgel", "review_title": "Love the game", "review_description": "I just bought it and can\u2019t dtop playing it every chance I get .", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120832820", "uniq_id": "914319f5-a0c8-5590-bb73-7697f083b7b2", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2822", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Dan317", "review_title": "Great graphics and great online experience", "review_description": "I brought this game and I love the build quality and graphics they put a lot of detail in this game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120788651", "uniq_id": "40b93ff5-b508-5ff2-aeb7-3824c9fcef02", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2836", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Kevin65", "review_title": "Good batteries", "review_description": "[This review was collected as part of a promotion.] The Energizer MAX Alkaline D Batteries are good batteries.  I use them in my flashlight, that I am always using.  They last quite a long time for me.  I am very happy with them and plan to buy more of them to keep on hand.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231017127", "uniq_id": "53e44508-5eef-5991-9948-2c30078bfdd1", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2849", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "Freakin awesome game", "review_description": "If you love all the other pokemon games and actually read the story, you'll love this one as expected.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17412508", "uniq_id": "02dd343e-8727-58ee-b38d-e019e1d1f8e7", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2866", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Glacer", "review_title": "WWE  2K19!", "review_description": "Great game. Career mode provides so many challenges and there\u2019s always something to do.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120399343", "uniq_id": "847c59e7-f422-5c25-abb8-30829e7c289f", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2868", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Undertaker 3141", "review_title": "Great gameplay, great graphics", "review_description": "I bought the game a few days after it came out and I glad I did", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120398015", "uniq_id": "06b01be3-d421-58a0-9141-626ebd51d963", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2882", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Mgse", "review_title": "Wack", "review_description": "If i ask for a Ps4 game dont give me the xbox version of it", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "7 months ago", "rating": "1", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "180972468", "uniq_id": "3bd4191b-a262-56e2-8bce-c42eefe64a5e", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2886", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Deadstock", "review_title": "Awesome Game", "review_description": "Great game experience. Great franchise. Need more titles like this.Very pleasant gamestop experience as well.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "170203677", "uniq_id": "a00b9b98-5dc5-531e-ac46-fbab8df1d300", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2896", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Baine", "review_title": "Good decision based game", "review_description": "Not an action game its a decision based game, pretty good for what it is , but the game stop employees in Oroville are the best they are very knowledgeable an helping.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "141298878", "uniq_id": "b2a126f2-2ba9-593f-a5bd-2a95f9e45631", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2922", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Vanhala69", "review_title": "Very intense!", "review_description": "I bought the game a week ago and have completed the Campaign along with trying out the some of the other options. This game is very good, and keeps you on your toes throughout the whole Campaign. I wouldn\u2019t suggest if you suffer from high levels of anxiety and paranoia. Aside from that, it\u2019s a great title that really knows how to keep things interesting.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "121323698", "uniq_id": "9964746a-e85d-5df0-8a04-09f729f5477f", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2938", "name": "Madagascar 3: The Video Game - PlayStation 3", "brand": "D3 Publisher of America", "sku": "930800", "reviewer_name": "BLiiTzz", "review_title": "This Game is Pretty Fun.", "review_description": "This game is pretty fun, but as i look back at older games from madagascar, the animals use to run faster and they would be able to sprint, also the missions where a lot more fun than the ones on Madagascar 3 and more interesting, And also they had ALOT more mini-games, please Dreamworks and Activision or D3 Publisher, for the next Madagascar game MAKE BETTER GRAPHICS,MAKE THE ANIMALS RUN FASTER, MORE COOL MINI-GAMES, COOLER PLACES LIKE NEW YORK AND AFRICA (JUNGLE) and the missions make them more interesting", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "2", "reviewed_at": "9 years ago", "rating": "4", "average_rating": "4.5", "reviews_count": "2", "comment_id": "24558027", "uniq_id": "9df256c3-7299-57f7-9c55-0d76574619c6", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2944", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "airnesswaves", "review_title": "great batteries", "review_description": "[This review was collected as part of a promotion.] Energizer is a name that you can trust for excellent battery life and reasonable pricing on their products. These Energizer Max batteries are a great value and much better than generic batteries for sure", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230962264", "uniq_id": "38b87610-3e17-5bdc-a1e1-b63934dd0125", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2952", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Forte Kosakku", "review_title": "Fallout 4 Shoots to Kill", "review_description": "Its the fallout engine and world you know so well but with a focus on building little fortified communes for people to live in which makes all that scavenging that is so addictive, worth something. Anything you can store in inventory can be used to build something however, if you have an internet connection, you can access mods for free and just have toolboxs of unlimted materials waiting at each location. Its hard to resist that and if you do that , youll sorta negate the reason for collecting anything other than ammo, weapons, armor, clothes and whatever you like to display in your home and camps. The beauty of that was that for me, it didnt ruin the game , being a god right off the bat with all my goodies was just awesome. Im here to explore and do whatever i want since the world ended. The game is a blast and its funny and smart but the characters could have been more original like in Fallout 2 or 3. Even new vegas had great npcs and this one does too just not as many. The graphics on the Pro i use are just awesome. The colors in the game are vibrant its defiantly the best fallout game in the 3d universe made so far. Worth it. Gun physics are better and the way eneimes react to gettin hit by each shot after a certain perk is got adds fantastic realism. Shooting living things never felt so satisfying.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "155037582", "uniq_id": "ebc5af7e-d2b2-5065-a71f-e74e79a04be0", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2957", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Topher42", "review_title": "Fallout 4", "review_description": "Loved it. It very fun and you have options to use mods and the fact that you can have a dov is awesome", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "143989046", "uniq_id": "66982a01-bc22-5f3c-a666-e8d3c1f9b82e", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2969", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Ghostly Natsu", "review_title": "Misses The Mark", "review_description": "I more than anyone wanted to love this game so much. Having played Until Dawn religiously until I platinumed and then again every halloween season, to say I was excited for this was an understatement. However, all I received was genuinely bad acting, bad story, and bad story paths. The OP being O Death again but metal is pretty cool though.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "138111155", "uniq_id": "833b19df-42dd-5e70-aa12-57dcbd3b7aea", "scraped_at": "16/01/2022 16:19:05"}, {"index": "What that not what you want then don\u2019t buy it\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "3 years ago", "review_description": "4", "recommended_review": "4.4127", "verifed_purchaser": "487", "helpful_count": "120039974", "not_helpful_count": "e4695eb1-2321-5e1e-a470-1e92cca3e127", "reviewed_at": "16/01/2022 16:19:06", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2972", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "SirWaffle", "review_title": "Worked...for a bit", "review_description": "I bought the game around two and a half weeks ago, it worked well for a week and now just won't start up. The case they gave me came without a cover picture and only an ugly game stop one, so it was an eyesore in my shelf. But it's a good game, couldn't finish it though because, you know.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "2", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "120019774", "uniq_id": "baf2ea6e-191e-59bd-af8e-8476142d2da0", "scraped_at": "16/01/2022 16:19:06"}, {"index": "i'm using an avlt-dm42-1 monitor arm with no issues.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "gaming has already been more immersive and the refresh rate is great.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "tested with an gtx/rtx 2060/3060 video card", "name": " usb c-hdmi/displayport 1.4 cablemod cables", "brand": " upgraded version 1007.2 firmware", "sku": " with and without usb peripherals.", "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2994", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Seriouswoman", "review_title": "Computer", "review_description": "[This review was collected as part of a promotion.] I love to watch movies and play games it's cool and fun to play with.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "27 days ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "213061370", "uniq_id": "728d1ed4-9c0e-5f96-90c0-49d12877ed08", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3018", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "onionbagel", "review_title": "Best handheld, & best poke'mon ever!!!!!!!!", "review_description": "this is the best handheld game ever. poke'mon always has been the best, but black and white take it to the next, and what i think is the final level. i love all the details. for example, (eyes closing when poke'mon is asleep, characters can move their arms, the gyms are awesome with anything from roller coasters to cannons to countless elevators. not to mention,........ ALL THE NEW POKE'MON!!!!!!!! a must have for poke'fans and nintendo worshippers.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17323731", "uniq_id": "113329fa-4094-505c-9bdc-0f660162f33e", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3021", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Christian Casalduc", "review_title": "Dark Pictures:Man of Maden", "review_description": "It was an amazing experience had a lot of fun playing with my girlfriend the amount of choices and various different outcomes we can have while playing always keeps the gameplay fun and exciting we manage to discover something drastically new every time we re play the story!.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "137830492", "uniq_id": "192c63bb-4175-559f-a7c6-4bb4049b8fe6", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3031", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Carla  Bishop", "review_title": "I would recommend this game to anyone", "review_description": "It keeps my husband busy and I love watching him play it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "141854948", "uniq_id": "382465d1-a7b7-5fd2-8134-3481a2111c3d", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3032", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "superjake356", "review_title": "Fallout noob", "review_description": "First time getting into the franchise, i like it so far", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "141833508", "uniq_id": "fd9de99f-ee1f-511b-8677-2d9997081f83", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3037", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "JAHood", "review_title": "Fallout 4", "review_description": "Good story, very bloody, too much cussing for my taste, but overall very satisfying to play.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "141042890", "uniq_id": "82e62021-80c8-5975-8cf5-fa967b02df04", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3044", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Krissie126", "review_title": "Challenging yet fun!", "review_description": "Doom is challenging yet fun to play, I love that it's not to dark east to see demons before they kill you", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "117788308", "uniq_id": "0f93d81e-123c-595e-84f9-20d1cbfde6f8", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3046", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "S1ph3r", "review_title": "Doom on switch!?!?!", "review_description": "Yes, yes, yes! I'm a happy man. The new doom ultimate is coming on the switch as well!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "117197047", "uniq_id": "9c3ff326-5d88-5df7-a57e-a697a76ff3bf", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3054", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Elvidividi", "review_title": "Perfect  screen  for play my games", "review_description": "[This review was collected as part of a promotion.] Is a fantastic  screen  nice colors and very futuristic  experience", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "28 days ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "213042892", "uniq_id": "5a62ee66-ff25-59af-8412-18627501f54c", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3060", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "rrr75252", "review_title": "Power up", "review_description": "[This review was collected as part of a promotion.] These batteries are great. I use them in my remote control and they power up just fine. I like that they have alkaline in them so it gives out a lot of power and does not use much energy yet are strong. I use my remote control all the time and have  not had any issue my remote is still running strong. I recommend these batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230921255", "uniq_id": "5d055681-89e3-5458-a1f2-2de1538d9822", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3072", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "pokemonguy", "review_title": "A New Era", "review_description": "After my first day on this game, I was hooked. My starter was Oshowatt and already has reached its final evolutionary stage. I got five badges already, and already caught Victini. If I had a piece of advice, battle everyone, strength is major in this epic new pokemon game. Also some trainers give you free items for you beating them. But type match-ups can be a struggle. So hear is something very useful. At the first gym, the leader will tell you you should have a pokemon that is good againt bad match-ups so he tells you to go train at a sertain place. Go there and find this one guy who gives you a free pokemon for an advantage at the gym. If you chose snivy, a water type, oshowatt with a fire type, and tepig gets you a grass type.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17321278", "uniq_id": "051780d8-5e17-5634-bd50-211bec5ec40b", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3076", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "assasin54", "review_title": "great!!!!!!!!!!!!!!!!!!!!!", "review_description": "I bought this game yesterday and it is aswome. New pokemon i never seen before, great starters love it i would recomend this game to all pokemon fans", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17318156", "uniq_id": "5ff00208-8fdb-510d-b239-ee4153f56629", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3080", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "KamOFL", "review_title": "Horror", "review_description": "I've already played through twice. I love this game", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "136467208", "uniq_id": "9772b64a-73bb-5341-8100-d167bdbc82ec", "scraped_at": "16/01/2022 16:19:07"}, {"index": "No screenshots. Not a deal breaker", "name": " but a pretty stupid restriction. ", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3112", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Jose", "review_title": "I'm still in awe every time I turn it on!", "review_description": "[This review was collected as part of a promotion.] I love this monitor! I bought it for working from home and it's great being able to have email, work apps and a chat app all up on the same screen. While I'm not working I use it for gaming and the immersion in the game is awesome with all the real estate.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "28 days ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "213028357", "uniq_id": "efc8cc04-1307-5b82-86c1-c13a7331e77e", "scraped_at": "16/01/2022 16:19:07"}, {"index": "Beautiful panoramic veiw when using Excel spread sheets with multiple columns and row.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3115", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "TimeTavel04161961", "review_title": "Best view ever", "review_description": "[This review was collected as part of a promotion.] This amazing item works to my family satisfaction and will amazie your family as well Thank you Samsung!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "28 days ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "213022593", "uniq_id": "ed3dc70f-aef3-5751-9ac3-2d37451af61a", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3121", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Brookkynn610", "review_title": "Go to brand", "review_description": "[This review was collected as part of a promotion.] Energizer is my go to brand for batteries. They never let me down. Long lasting battery life for every day products. My automatic garbage can used D size batteries and they last months with multiple uses a day! Very impressed!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230907469", "uniq_id": "69543750-d48a-50f0-9141-1d76dc3f3c91", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3129", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Spinningfox", "review_title": "Really? I mean really?", "review_description": "Yes its another pokemon game. I get it, people still buy them so they are still selling them. Its the same thing the last 20 some games have been. I enjoyed pokemon for a while, I did. But they aren't even trying anymore. Have you seen the new pokemon designs? It's like they got them from Deviantart, actually that might have been an improvement. I gave it a good music review due to the fact those little tunes are catchy, I'll give it that. But honestly, they aren't even trying anymore. I suppose you would love this game if you're a die hard pokemon fan, and I suppose kids would as well as the series will still be new to them, but anyone who enjoyed the old games should know by now what to expect, a hundred hours of walking in grass to get the badges and beat your rival. Picture is a random pokemon from the game, tell me that's not just a Tauros with an afro. You know tauros, the pokemon from the first games?", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "17", "not_helpful_count": "125", "reviewed_at": "11 years ago", "rating": "2", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16526756", "uniq_id": "9c214d18-e3dc-59ee-a079-1a61ed07b0d3", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3132", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Riku134171", "review_title": "awsome", "review_description": "I can't wait this will be great just like every other one.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "6", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16480453", "uniq_id": "2ad0bcfe-67f6-5ad5-8bae-c4d630b920b5", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3136", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Wpowopo", "review_title": "It was ok", "review_description": "Look, I bought this game in Japanese, and it just was ok, I played it alot because i wanted to playthrough the game just for fun. The graphics were great and there wasn't alot of challenge to the game. I mean come on, I Caught the legendary on the box in a pokeball on my first try. this game was not hard but fun altogether. I liked the basics that it had in all of the other games but it's just all the same. I will do a speed run of the game when it comes out so i might put that up on my youtube page but i just don't think it's any different than any other pokemon game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "7", "not_helpful_count": "12", "reviewed_at": "11 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16466841", "uniq_id": "9bd4b7ea-1988-5270-93c7-dbf32d544a56", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3159", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "kdarwin", "review_title": "Stellar game. Runs great on switch", "review_description": "I bought Doom a couple weeks ago.  So far, I love this game.  The graphics look great on switch.  Obviously not PS4 quality, but definitely better than ps3 quality.  The frame rate is really stable so far, and the game is just plain fun.  Love it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "114322816", "uniq_id": "c2b13a21-b72b-56f8-a606-ac60b51e135b", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3179", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "n7nickys7n", "review_title": "10 Year Shelf Life", "review_description": "[This review was collected as part of a promotion.] I've always found Energizer to be one of the most trustworthy battery brands. Not only do they have a long shelf life, but they seem to last a long time in my electronics. I immediately popped it in my large flashlight, and it worked perfectly. The 10 year battery life is incredible. The only change I would make would be to add an expiration date or a more obvious one on the packaging. Overall, I  like and trust these batteries. They work well and are great to keep for an emergency. I'd recommend them.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230884596", "uniq_id": "831b9a17-2b0f-5bac-9f87-edd6e30adfe2", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3183", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Ashrose", "review_title": "The best", "review_description": "[This review was collected as part of a promotion.] Energizer is my go to brand for battery needs they last a long time and give max performance. We go through alot of D's in particular for all the baby toys so these are great to have it's a brand I can rely on. These are currently in a baby swing and going strong!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230877850", "uniq_id": "f8859b7b-55ba-5f49-92f2-c1018eec0354", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3186", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "BlackKaren", "review_title": "Go the Mile", "review_description": "[This review was collected as part of a promotion.] The best battery when it comes to baby rockers, no contest. They devour batteries up and so far the only ones strong enough to fight for my peace and quiet are energizer max. I miss the energizer bunny but he was right. They go on and on and on.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230870159", "uniq_id": "d3958249-f968-5223-bec6-30c9451ce77f", "scraped_at": "16/01/2022 16:19:08"}, {"index": "All we tend to purchase energizer batteries. ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3193", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "dagugtggggggggg", "review_title": "Best Game Ever", "review_description": "This game is the best and I love it overall this game has the best poke'mon ever it is a big hit.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "2", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16421797", "uniq_id": "c4c8643a-0050-5f80-b7bc-0c3a217abbed", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3209", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "RyanPyrope", "review_title": "Pretty Good Game. Would Buy Again.", "review_description": "The game is very interesting and paced pretty well. The animations and jumps between gameplay and cutscene are a little rough, but it's a good game. Excited for the rest of the anthology.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "136020015", "uniq_id": "e271499c-c2ac-5ada-bebd-4e0c61ca26bd", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3218", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Brittcwood89", "review_title": "Has awesome features great picture", "review_description": "[This review was collected as part of a promotion.] I watch alot of movies ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3222", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "jstancil", "review_title": "10-Nov", "review_description": "Classic. So much content and so little time to do it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "136941650", "uniq_id": "1b9e44f2-358a-5c25-a3b8-2e2854d2975a", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3243", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "George2319", "review_title": "Thank you! Bethesda, ID, all companies involved", "review_description": "Amazing port very well done. I have this game on pc and it feels better to be honest. Most likely because i can take it to work. I can number 2 and play. I also played today while waiting on my significant other to grocery shop ahhhhhhh", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "10", "not_helpful_count": "2", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "109336267", "uniq_id": "4cd54d77-7ff3-5764-accc-1fdcddecd4c5", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3245", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Jevans84", "review_title": "Fun fast pace", "review_description": "Tons of fun, great fun. I was a little nervous after reading about some of the technical compromises that had to be made to bring this to the switch. But after playing it for countless hours i am very impressed. Graphics are nice game plays smooth. I have had one sound drop but it wasn\u2019t bad ( kinda like someone turned my tv down a little) but the problem fixed it self. Great add to the switch", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "14", "not_helpful_count": "0", "reviewed_at": "4 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "108067933", "uniq_id": "3887fe9d-281f-5fe8-b207-f29a8ee3eee8", "scraped_at": "16/01/2022 16:19:08"}, {"index": "* this massive monitor turns heads at the office", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "* really big", "name": " you need a sturdy desk or the monitor will shake when you type / move your mouse / sneeze", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "* some apps (slack) don't let you share only part of the screen\"", "name": "yes: I recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "5", "recommended_review": "4.5319", "verifed_purchaser": "643", "helpful_count": "212939037", "not_helpful_count": "7197c89c-301f-53f3-9aa6-bd18bc641286", "reviewed_at": "16/01/2022 16:19:09", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3275", "name": "Funko POP! WWE: Stone Cold Steve Austin with Belt Metallic 3.75-in Vinyl Figure", "brand": "Funko", "sku": "221988", "reviewer_name": "Javier07", "review_title": "Stone Cold Say so in five stars", "review_description": "Oh Heck Yeah!!! My favorite wrestler in WWE in Attitude Era and now officially as funko pop.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 months ago", "rating": "5", "average_rating": "4.95", "reviews_count": "20", "comment_id": "178259597", "uniq_id": "b2438a1a-ff8e-5b8c-a262-46fdb5d95123", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3282", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Michelle Bornstein", "review_title": "Fall out 4", "review_description": "My husband can\u2019t stop playing this game . He has not given me a chance to play yet. When I finally get a chance to play I am sure I will enjoy it as much as he does", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "131286967", "uniq_id": "0193c322-8e94-58ee-b1f4-6cc4f96d4194", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3299", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "mskitty", "review_title": "Powerful", "review_description": "[This review was collected as part of a promotion.] We go through batteries in our home like water. I have the Energizer Max D-2 pack and boy did I need them. We keep flashlights in every bedroom plus under the sink for emergencies. During a recent storm, my flashlight died and of course no spare batteries for it. Hence, the Energizer D size are now in my flashlight. Powerful bright light and they have a 10 yr. shelf life. Energizer is the ONLY brand we use so having a durable, strong, long lasting battery is a necessity. Thank you Energizer, the name alone means quality products. Will be stocking up on more of all sizes!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230843356", "uniq_id": "ad4d17bd-ac23-5658-8f92-77fb31b6172a", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3301", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Shelby19", "review_title": "One of our favorites!", "review_description": "\"[This review was collected as part of a promotion.] These are by far our favorite batteries.  The durability and \"\"lastability\"\" is incredible.  Wonderful product.  We used these in our large flashlight and they were great.  The light appeared to be much brighter than with the other batteries we've used.\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230839434", "uniq_id": "0af386d1-47a6-502c-883b-fd890155bb51", "scraped_at": "16/01/2022 16:19:09"}, {"index": "The Energizer Max batteries in D are fabulous.  I\u2019m using these in our flashlight and they\u2019re lighting up the night!  ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Simple to install and much brighter than the ones we had in previously.  ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "The Max definitely last longer and save money.  They\u2019re brighter and you can really tell the difference.  When it comes to brand names", "name": " buying Energizer batteries is truly worth every penny.  ", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3309", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "empoleon19", "review_title": "pokemon is awesome", "review_description": "i cant wait to get it im so excited yayyyyyy POKEMON!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "8", "not_helpful_count": "5", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16250779", "uniq_id": "15262f26-11dd-51f3-83a8-ceda812f3b90", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3324", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Michelle", "review_title": "This product has great features", "review_description": "[This review was collected as part of a promotion.] For gaming and streaming", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "The colors really lly bring out your visual eye candy! Also the RGB light on the back makes a cool background light for sgowing off. I was so impressed I bought 2 haha! I love Samsung products I feel their innovative products are the future!\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "5", "recommended_review": "4.5319", "verifed_purchaser": "643", "helpful_count": "212877067", "not_helpful_count": "db951573-0bdc-5346-9eae-c881f8bd1fb5", "reviewed_at": "16/01/2022 16:19:09", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3328", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Craigc5937", "review_title": "A must have", "review_description": "Just amazing, You will not regret getting this game, even if your new to the series, a must play!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "131000452", "uniq_id": "705665da-752a-58f7-9bbb-c713fd64acda", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3330", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Shane T", "review_title": "Fallout 4", "review_description": "I got this a while after it came out but is still a great game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "130640591", "uniq_id": "d82258af-55e3-5a1e-b6d3-eb0d2acf19cd", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3345", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "mbphotogamer96", "review_title": "Horror Game", "review_description": "I really enjoyed this game and I would recommend this to anyone who loves horror!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "134928220", "uniq_id": "044ccb13-1188-57e9-a1f9-78d098a1cbbd", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3359", "name": "Spirit of the North - PlayStation 5", "brand": "Merge Games", "sku": "232541", "reviewer_name": "jose7000", "review_title": "Fun To Travel", "review_description": "This Game Is Very Fun And Very Challenging Going From Place To Place And Reaching The Destinations.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "2.8", "reviews_count": "5", "comment_id": "175329491", "uniq_id": "b5679058-98f0-5895-b1b5-82ef9410a441", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3360", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Fangs", "review_title": "Pokemon Black and White", "review_description": "These Pokemon games look really sweet. If you like the Pokemon franchise then you should get it. These games are really different from the previous ones yet they are the same. These games are those games that never get old. The new pokemon look awesome, and new features that have never been seen in previous games. Also if you choose Pokemon White you don't get to see Black City, you get to see the White Forest and if you choose Pokemon Black you don't get to see White Forest, but you get to see Black City. So you got to choose which one you want to see White Forest or Black City. Also the 4 stations are present; Winter, Autumn, Summer and Fall each one appearing in different months, a new one every month throughout the year, every station lasts one month and comes back on another month. And Pokemon are available depending on the station, unaccesible areas depending on the station as well. These are some of the features the games come with. I hope this is helpful to you all.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "9", "not_helpful_count": "1", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16158342", "uniq_id": "7583e094-3bf3-5577-a275-054968ad0480", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3376", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Lolcatz23", "review_title": "Awesome for productivity", "review_description": "[This review was collected as part of a promotion.] I use two monitors in addition to my Samsung CRG9 which is my main. I mainly use for games, and it's amazing, but not a real advantage to first person shooter games. It's more for the emmersive effect and it's great! With the high refresh rate, it makes games feel great such as call of duty, overwatch, etc. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3392", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Madie", "review_title": "Awesome", "review_description": "[This review was collected as part of a promotion.] These batteries are reliable. They have a long shelf life and dependable. I put them in my flashlight three months ago and they are CB still going strong and I get the brightest light. I have had no problems with leakage either.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "223899184", "uniq_id": "758b2ec3-76cc-5f08-ae91-51649bcae97f", "scraped_at": "16/01/2022 16:19:10"}, {"index": "Button layout actually helps for fighting games imo. ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3417", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Skimonitor", "review_title": "Samsung rocks the monitor world", "review_description": "[This review was collected as part of a promotion.] Streaming and internet", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "there should be additional hard buttons or quick settings to switch between display mode presets.  currently", "name": " you have to manually change the brightness/contrast/etc.  want to use your computer in low light", "brand": " enjoy navigating various menus to get to the correct adjustment setting.", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "for a gaming monitor", "name": " this has very poor functionality.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3421", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Saucee", "review_title": "AWESOME", "review_description": "[This review was collected as part of a promotion.] This monitor is very much so recommended, the visuals are clear and the pictures are sharp", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212848122", "uniq_id": "ee21de09-a9f5-58f0-857d-c94c7b5fcdd1", "scraped_at": "16/01/2022 16:19:11"}, {"index": "I bout two of these one for my friend's wedding gift and the other one for myself after seeing how happy my friend was with the monitor.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3454", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Halo Tutor", "review_title": "flashback to OG", "review_description": "Even though I intentionally bought this as a collectors item, I had to use it acouple times to feel the nostalgia of original Xbox days?", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "129205644", "uniq_id": "d12b76b1-cc8d-57da-8a98-d61944ab032e", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3457", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Slimdtylz", "review_title": "TBT 360", "review_description": "Awesome.feel. cant stoo using it over my wireless.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "127411070", "uniq_id": "5e29d020-2e16-5ea9-bba8-948d1d14dbb0", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3458", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "The iffyiest", "review_title": "An awesome reproduction.", "review_description": "The only thing they could improve is add wireless version. This is a almost perfect reproduction as the original duke. They really nailed the feel and how on some games it does take a while to get used to. The addition of the right and left bumpers actually helps out a lot. I kinda wish microsoft would let them use the wireless for this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "127163171", "uniq_id": "a8fd9d26-e690-50c3-88e5-d4860b4aa417", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3460", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "VaderNick84", "review_title": "Look and feel is great, design is flawed", "review_description": "Absolutely love the look and feel of this controller, do NOT like the cord being detachable and with it being plugged in my headset causes a buzzing feedback for any friends in my party.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "126532670", "uniq_id": "3664b3ff-ae7f-575e-bbe4-0439edfc9fc8", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3469", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Rocko", "review_title": "Great", "review_description": "[This review was collected as part of a promotion.] It was great and I would recommend this product to anyone", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212828479", "uniq_id": "607abf52-33ac-5b6b-947c-57f7e1da2f19", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3487", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "kris2239", "review_title": "Best Batteries!", "review_description": "[This review was collected as part of a promotion.] These are the best batteries I have ever used in my life.  They are so strong and durable.  They last for a long period of time and do not fail.  Compared to other batteries the Energizer Max Alkaline batteries are the best on the market.  If you have electronic, toys, etc.that require heavy duty power, then these are the batteries for you.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222883065", "uniq_id": "274be571-ffad-56c1-9c68-43808b79e08b", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3496", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "i36christo", "review_title": "Fallout 4", "review_description": "I love Fallout 4 and have the season pass which is awesome. Great deal for after my pro points 4.59 cash.cant beat that....", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "126627257", "uniq_id": "a4b1b441-8d0c-596d-834f-c9fcf6d797ab", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3510", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "kyle565635", "review_title": "retro flavor", "review_description": "if they had a black colored that would be even better.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "122699674", "uniq_id": "4a456ecc-a7c3-5a66-9b10-98ec991a022c", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3512", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Wambo", "review_title": "Great Throwback", "review_description": "It feels and plays just like an original one, and the lcd start up screen is awsome.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3531", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "EthanD", "review_title": "Amazing product", "review_description": "[This review was collected as part of a promotion.] I love how wide this monitor is, I also love how it fits your field of view more than a traditional monitor because of the curve, its aesthetic is also amazing, looks really good.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212791209", "uniq_id": "19e16e08-7c47-5c93-a914-53b2645f0cf2", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3541", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Dice Crawley", "review_title": "Get this game if you're a fan of Fallout", "review_description": "Excellent game but too many glitches to give it a 5 star rating", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "125659722", "uniq_id": "b9e6cc4e-8d50-5ae4-8a79-0ef8746c8557", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3542", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "TP21", "review_title": "Great game", "review_description": "Fun shooter with so much to do that the main missions become secondary", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "125553460", "uniq_id": "e64a701d-7636-5c18-bdaa-c41c117db96e", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3544", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Asaji", "review_title": "Crawl out throught the fallout, baby!", "review_description": "\"I love the Fallout series and the fourth one in the franchise lives up to my expectations. My only complaint is I would like a bit more variety in the music on Diamond City radio, or at least stop playing \"\"Butcher Pete\"\" so often.\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "125480966", "uniq_id": "b4f69991-098c-5a7b-b8a5-1479a103daae", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3546", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Nadhsw1", "review_title": "Long lasting", "review_description": "[This review was collected as part of a promotion.] I am trying the energizer max alkaline D batteries in my flashlight the package says long lasting, I guess time will tell, can't say too much right now because I have only been using them for a short period so hopefully they will last longer than the regular batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222819466", "uniq_id": "3e2286ba-35d7-55ad-a1aa-c8211ebfe413", "scraped_at": "16/01/2022 16:19:13"}, {"index": "Our experience has shown they retain power and don't leak after extended storage periods. Competitively priced too if you shop right.\"", "name": "yes: I recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "4", "recommended_review": "4.9175", "verifed_purchaser": "424", "helpful_count": "222755992", "not_helpful_count": "742f0443-c7fb-5c7c-8bb4-bd0e67f5211b", "reviewed_at": "16/01/2022 16:19:13", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3575", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "hmoe", "review_title": "tgreat controller", "review_description": "great the only thing I would have changed was made it wireless. Other then that I love it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "118331166", "uniq_id": "021a318b-0ac8-5ab4-b6d6-631fe0b6efbd", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3576", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Kittenrage", "review_title": "Just like my childhood", "review_description": "Got big hands? Or just in love with nostalgia, this controller is the one for you!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "118316077", "uniq_id": "25391879-ace9-56b0-9bdf-750e6afd6b52", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3588", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Tony517", "review_title": "Dependable Battery", "review_description": "[This review was collected as part of a promotion.] Energizer is my brand of choice when it comes to batteries. The Energizer MAX D cell batteries always work. They provide a long lasting amount of electricity so that I get multiple uses out of them, even when our star gazing every night.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222741156", "uniq_id": "088071c5-9827-59e9-935d-e200ffb94a9e", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3592", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Nete R", "review_title": "Works great", "review_description": "[This review was collected as part of a promotion.] I use these in a fountain in my home. They have been long lasting and keep my fountain chugging along. There has not been any leakage from the batteries which I\u2019m incredibly thankful for because I have had so many items ruined by faulty batteries. Thanks Energizer!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222704370", "uniq_id": "340c101f-143e-5824-99be-f2762c2dcda0", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3614", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "TestudoENumen", "review_title": "Blast from the Past", "review_description": "I looooove this controller. Granted, I might be biased, as this is my favorite controller of all time. This recreation is so great. I especially love that the black and white buttons are still here, and they are extra buttons for functions.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "117848281", "uniq_id": "35cd04d5-d837-57ac-878e-c3fc38ea2963", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3617", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Lokie1911", "review_title": "Fallout4 fun game", "review_description": "This is a great game except for all the loading screens and bad fps at times (ps4). I would recommend the game to anybody", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "124246093", "uniq_id": "9bcebc11-44fe-553f-995d-f28f5df3e88c", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3628", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Peachy20", "review_title": "Energizer max d cell", "review_description": "[This review was collected as part of a promotion.] I'm so glad I picked this up we had a storm come through and my flashlight battery was dead so I put these in and 4 hours after leaving on the light it still was as strong as I opened up put in and my kids had gotten ahold and played with my light for awhile and still held the strength I have found my go to battery thank you for developing the battery", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222681035", "uniq_id": "c47e71da-5323-5e94-aba1-3f62a23cb286", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3629", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Lthrpanda", "review_title": "Great batteries", "review_description": "[This review was collected as part of a promotion.] Energizer batteries are our family\u2019s choice battery and they seem to last longer than most other batteries out there.  The silver color is easy to find in the junk drawer and their performance is unmatched.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222679303", "uniq_id": "4a4eb4a0-3e0f-5a6f-9b5f-a416f00af993", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3637", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Trev", "review_title": "This product has great picture for gaming.", "review_description": "[This review was collected as part of a promotion.] I use it for gaming it'sime I'm in the game. I also use it for movies.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212705373", "uniq_id": "d7a08ddb-687c-5d4c-8399-af7ffaad4e85", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3641", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "RRPR", "review_title": "Awesome quality", "review_description": "[This review was collected as part of a promotion.] Thrilled using the monitor a d outstanding quality", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212689092", "uniq_id": "4afc964f-e371-51c2-beeb-0f6d9f80b7f9", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3643", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "DuckyXD165", "review_title": "This has good graphics and good refresh rates", "review_description": "[This review was collected as part of a promotion.] It works good for gaming because you fell like your in the game I don't really see a use for it at work because a flat would be the same for work but for gaming I would definitely use it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212688214", "uniq_id": "6229b4cd-fcfb-5377-86cb-1e7e1b684a2b", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3649", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Stankledank", "review_title": "Very fun game", "review_description": "Bought this last month with all the dlcs and it's really fun, the mod community on ps4 helped my game experience too, very fun", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "123680103", "uniq_id": "b9201042-22ea-58a3-8d4b-999a499e02be", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3657", "name": "Borderlands 2", "brand": "2K Games", "sku": "522380", "reviewer_name": "RavensRoost", "review_title": "GARBAGE!", "review_description": "Gearbox removed LAN feature without even a logical reason. This game used to be amazing, but now it's garbage.  Will not change review until they add LAN back. No logical reason for removing it.  And before anyone comments about playing online, bad internet where I live, and me and my friends used to play LAN, now it just sits uninstalled in my steam library.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "4", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.1875", "reviews_count": "16", "comment_id": "128020290", "uniq_id": "a665bcc9-6b18-549b-b8fb-785be7218812", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3667", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "TLopez", "review_title": "Everlasting", "review_description": "[This review was collected as part of a promotion.] I received the ENERGIZER MAX ALKALINE D BATTERIES 2 PACK in exchange for my review I received them just on time to put them in my granddaughters new bubble machine the batteries that we were using in it only worked a short time.I installed the Energizer batteries into the bubble machine and it worked for a very long time nonstop.Today we turned the machine on and the power is as strong as the day we first started using the Energizer batteries.I love the fact that I will not have to replace the batteries cause they seem to last a lot longer time. Goes to show the Energizer bunny commercial is true they keep going and going . Thank you for the opportunity to give my feedback on this product I will be purchasing it in the near future in place of my regular brand.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222666390", "uniq_id": "d5e74857-23db-5f6d-865c-76c6cf0472f3", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3679", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Joker", "review_title": "Best gaming monitor ever", "review_description": "[This review was collected as part of a promotion.] This is the best monitor I have ever used running 240hz 1sec response  the max settings run flawlessly with my fully loaded alienware  r11 and rtx3080 video card", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212673592", "uniq_id": "d6e56546-c222-536b-a844-d08a49c22899", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3683", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Relliknam", "review_title": "Love it cant live without it", "review_description": "[This review was collected as part of a promotion.] With my gaming system it one of those necessary things to have. Color and the curve draws you into games. So in conclusion keep putting out products like this and ill keep buying", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212671817", "uniq_id": "f1da1bae-9bae-5fd7-ade4-74860e964312", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3685", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "DVS1777", "review_title": "Nice", "review_description": "[This review was collected as part of a promotion.] Gaming watching the news and I want too are if the galaxy can compete", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212666301", "uniq_id": "79c172a1-13a7-5036-8754-ed280dbfc052", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3712", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Sonni", "review_title": "Great product", "review_description": "[This review was collected as part of a promotion.] I was worried in the beginning but it turns out to be a great monitor.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212663925", "uniq_id": "343895d8-69ed-588c-9c50-e7a5c0d373fb", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3714", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "JombaLuv", "review_title": "Best monitor of all", "review_description": "[This review was collected as part of a promotion.] I use the monitor stream movies, display for my virtual workstations. The picture quality is crystal clear.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212661977", "uniq_id": "67cc302c-b540-5fa7-a2e8-b3b4427705b9", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3722", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Tmoney6787", "review_title": "Mehhh", "review_description": "I hated it... My teen soon lives it!! Oh... I do appreciate antiquity look such as 90 degree pieces of pipe and old time clocks and gadgets. He has never seen these types of things because they've been replaced on everything that serve ever been on nowadays. other than that I didn't like the first one and I never went back for more but he's been through everyone and he swears by them different strokes I guess..", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "122741605", "uniq_id": "d0cef700-0c12-5f33-824d-4501b93a9187", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3724", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "GameFiend76", "review_title": "Skyrim with guns!", "review_description": "Great purchase. Reminds me of Skyrim, fun to create weapons and build a settlement. Good story, being able to play in over the shoulder 3rd person is fun too, though the movement is a little slow.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "122694939", "uniq_id": "cbeec093-efa3-54da-8dce-e1c85851fbde", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3732", "name": "Leisure Suit Larry: Reloaded", "brand": "Replay Games", "sku": "525589", "reviewer_name": "tomgene76", "review_title": "Reloaded and Then Some!", "review_description": "Not just a remake but with new twists and characters. That game you still remember with updated graphics and sound. Definitely glad I bought this!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "5", "reviews_count": "4", "comment_id": "132424218", "uniq_id": "867ca0f5-5bf1-51af-bc57-9a79335fc358", "scraped_at": "16/01/2022 16:19:16"}, {"index": "3740", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Joseph67", "review_title": "Powerful resource", "review_description": "[This review was collected as part of a promotion.] After reciving my Energizer MAX Alkaline D  Batteries they have preformed like a champ in my flashlight giving the the extra power I need when volunteering for my comunity as a emergency responder", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3743", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Krsna", "review_title": "I enjoy playing call of duty on this monitor", "review_description": "[This review was collected as part of a promotion.] For playing and streaming video games. Watching movies", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212648161", "uniq_id": "acd53376-c1c6-5868-b35a-28766b67aec0", "scraped_at": "16/01/2022 16:19:16"}, {"index": "3744", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Drad", "review_title": ".great monitor", "review_description": "[This review was collected as part of a promotion.] Monitor works perfectly, very large with excellent picture. The colors are great and gaming is easy on this monitor.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212640095", "uniq_id": "6b7a0323-b9a9-54cc-b6c0-64cb3915f471", "scraped_at": "16/01/2022 16:19:16"}, {"index": "3745", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "PD1977", "review_title": "Good", "review_description": "[This review was collected as part of a promotion.] Good monitor for gaming. Good monitor for gaming. Good monitor for gaming.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212639584", "uniq_id": "2f6d8aac-7994-57e5-8b06-d40a0dab20a7", "scraped_at": "16/01/2022 16:19:16"}, {"index": "3765", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Kiki23", "review_title": "Great", "review_description": "[This review was collected as part of a promotion.] I am a huge fan of energizer batteries. These batteries are great quality and long lasting. We typically use quite a bit of batteries for the kids toys. Luckily we haven't had to change them even with a ton of use.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222635500", "uniq_id": "f7a9c59c-f4e9-5d71-91e5-9f4127cdd225", "scraped_at": "16/01/2022 16:19:16"}, {"index": "It is also a great monitor for having multiple pages open. I can have 4 pages of notes open simultaneously with no problem. I did have to adjust the font size for this type of operation", "name": " but once adjusted", "brand": " everything is great.", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3815", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "johncho", "review_title": "best monitor", "review_description": "[This review was collected as part of a promotion.] As a casual gamer I don't see the benefits of higher refresh rate monitors or ultra high contrast or all that jazz, I just look for a decent experience at a reasonable price and this delivers", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212584166", "uniq_id": "b84d3e63-b603-54a1-b350-8fa1e52ca4f2", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3820", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Al3x", "review_title": "Gaming monitor review", "review_description": "[This review was collected as part of a promotion.] Perfect for gaming ultra wide display. I personally use it for racing simulators.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212570158", "uniq_id": "2dc8dea5-796f-5421-a664-5456a4fd7821", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3828", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Willzane", "review_title": "Great game", "review_description": "I've played Fallout 4 when it first came out and beat the game several times and several ways. After some time I bought it again and once again play it nonstop.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "118594719", "uniq_id": "5ed36795-5597-5a99-aa05-d6352a43d65a", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3832", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "mattbaum", "review_title": "Works great", "review_description": "[This review was collected as part of a promotion.] I received this product about a week ago and I have not had any issues with it. I cannot say how long the batteries will last but I know they will have a long lifespan based on the brand. I did notice a difference in the fan that I put them in because it blew air faster. The motor was able to work better compared to other d batteries. I can tell they are high quality batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "221985853", "uniq_id": "8b401597-00f1-5c14-8031-9c4a8b8a0ac0", "scraped_at": "16/01/2022 16:19:17"}, {"index": "Very nice shape and the curving way.\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "5", "recommended_review": "4.5319", "verifed_purchaser": "643", "helpful_count": "212567716", "not_helpful_count": "6fcfe253-60dc-570b-b78c-9d2cc72c50ba", "reviewed_at": "16/01/2022 16:19:17", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3843", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "KEBB1999", "review_title": "Amazing features & great entire family.", "review_description": "[This review was collected as part of a promotion.] This product has amazing features and is very easy to maneuver around, especially when your a newby such as myself on the smart things these days.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "I love that I can get daily use from this product  such as Work", "name": " Home usage for bills and can't leave out the kids gaming too...Definitely a product worth purchasing.\"", "brand": "No: I don\u2019t recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "1 month ago", "recommended_review": "5", "verifed_purchaser": "4.5319", "helpful_count": "643", "not_helpful_count": "212560310", "reviewed_at": "9511121d-364e-5913-9c60-2c6240551203", "rating": "16/01/2022 16:19:17", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3845", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Toya22980", "review_title": "Dope and fire n awesome.", "review_description": "[This review was collected as part of a promotion.] Home and do my own fun gamer hook up any game hook.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212556431", "uniq_id": "04c04e94-ba6c-55eb-a9bf-09c89657e950", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3848", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "diazserg74", "review_title": "Crg9 dualqhd curved monitor", "review_description": "[This review was collected as part of a promotion.] I use my mo itor for streaming photos gaming and movies sound quality is superb just the perfect amount of bass and treble one of  the best buys I've made when it comes to monitors I blue tooth my ring security system with monitor and avoid all the messy wires virtually wireless and color is amazing", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212546408", "uniq_id": "1fceab85-71ff-5145-9b46-3896762131ff", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3865", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Bricks", "review_title": "Dependable and Long Lasting Life", "review_description": "[This review was collected as part of a promotion.] I always use the Energizer Max Alkaline D batteries in my various trail cameras surrounding our property. The really do last a long time considering how often the cameras are set off by the deer, fox and other wild life that enjoy visiting us. Energizer makes batteries with extended life time. This last batch has a life time of ten years. Because of the extended life, I don't need to keep changing the batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "221803421", "uniq_id": "3e7148e3-0536-586c-ae17-ee5e839907c0", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3878", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "John", "review_title": "Decent Monitor, issues at risk", "review_description": "[This review was collected as part of a promotion.] Noticed when I was trying to go through thinking about this monitor, I tried it at a friends place first, which has had several issues with the 95 model. The 97 model seems to be a better unit, but definitely seems to retain some of the issues over time.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212529497", "uniq_id": "090b4ca6-ce87-5230-8676-3dbcff54e984", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3880", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "slimshardy69", "review_title": "this product is clean annd really nice", "review_description": "[This review was collected as part of a promotion.] i use mine for my computor and it is by far the cleanest most crisp clear screen ive ever seen.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212523444", "uniq_id": "9c7835ae-0b3b-5de1-b106-6c5b95ed0e2b", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3882", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Hottie22", "review_title": "Great product", "review_description": "[This review was collected as part of a promotion.] Fast efficient, clearview", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "My son enjoyed playing on thus console\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "4", "recommended_review": "4.5319", "verifed_purchaser": "643", "helpful_count": "212521713", "not_helpful_count": "c3d6cfde-c525-5ba6-a7f9-a2935e364985", "reviewed_at": "16/01/2022 16:19:18", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3891", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Mol1119", "review_title": "Great overall", "review_description": "The Fallout series is one that takes you into a world of a post-nuclear apocolypse where you fught to stay alive in an unfprgiving world. Every choice you make determines do many factors in the game. You can be good or evil. You can have companions that you can romance; each with their own well written tragic backstory(my personal favorite being hancock and Nick Valentine).In fallout 4 you are pre war and you fight to find your missing son, stole from you while you were unable to do anything.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117842732", "uniq_id": "9b184fe5-bbec-5a36-a696-db57957f9fe3", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3893", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Falloutfan76", "review_title": "AMAZINGGGG", "review_description": "i got this game like 3 weeks ago and it is the best game ever", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117228395", "uniq_id": "77ab9bd1-01d6-5d4f-b634-bd183bddf49a", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3902", "name": "PlayStation X Like It's 94 T-Shirt", "brand": "Geeknet", "sku": "211057", "reviewer_name": "Jay72482", "review_title": "Party like the first PS console drop...", "review_description": "I don't know who makes these shirts but there all super comfy...", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.614", "reviews_count": "57", "comment_id": "181513157", "uniq_id": "d1288e71-8767-512c-9914-e071dad5833a", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3917", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "GameLover", "review_title": "Amazing display!", "review_description": "[This review was collected as part of a promotion.] I use this monitor for gaming and surfing the web. Works freak with Xbox game pass. The video is amazing and the size is impressive.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212515892", "uniq_id": "44f4b194-5894-55d6-87a5-d9a401a0bbd7", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3928", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Tjmuzmuz", "review_title": "Didn\u2019t like it at first but now love it", "review_description": "Tried this a while back and didn\u2019t like it but came back to it and then loved it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117196855", "uniq_id": "501fdc7a-2cb8-54b4-8d8f-18a5a5ec6cac", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3943", "name": "Funko POP! Games: Halo Infinite Master Chief", "brand": "Funko", "sku": "216351", "reviewer_name": "Elstrix", "review_title": "Looks really good", "review_description": "I pre-order it and it arrived with no problems", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4096", "reviews_count": "83", "comment_id": "165430314", "uniq_id": "93299cbf-3116-52b4-bb3d-a75579421981", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3946", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Gritter", "review_title": "Good computer", "review_description": "[This review was collected as part of a promotion.] One of the best computers on the market. Great for gaming", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212506357", "uniq_id": "6ccc9cde-827b-5103-8254-055136381dc9", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3948", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "BabiLuv", "review_title": "This product is the best I have used!!", "review_description": "[This review was collected as part of a promotion.] I use my monitor for everything from work all the way to a movie when ready to relax this monitor has me satisfied to the max!!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212497228", "uniq_id": "c6ded1b8-c27e-59c8-9dc9-9f5365912ab4", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3957", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Ashley0387", "review_title": null, "review_description": "I haven\u2019t played video games in years. I bought this game after friends recommended it. I love it! Can\u2019t wait to get fallout 76!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "116715917", "uniq_id": "a2674e58-a6f8-5636-8494-ccb3702cbddd", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3971", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "CassMN", "review_title": "Great batteries", "review_description": "[This review was collected as part of a promotion.] Energized MAX D size batteries are impressive with the 10 year shelf life. Used them in a flash light and they worked perfect. Great illumination, making the light shine real strong. I've already told others about these!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217874182", "uniq_id": "88d4e858-5fea-585c-9ea8-f53051ed3566", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3975", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "dropete89", "review_title": "Big open world and plenty to do. Never gets boring", "review_description": "I have purchased this game multiple times and love it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "115657223", "uniq_id": "f80550da-bf87-508b-b465-8b13cc93fd4f", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3984", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "OliviaM19", "review_title": "Long Lasting", "review_description": "[This review was collected as part of a promotion.] Long lasting batteries for my child\u2019s swing. He uses this swing most days when I bring him to work with me. My other batteries used to run out within four or five uses. These are still going strong! Would recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217869701", "uniq_id": "f3ba9ce0-0d8a-57da-806b-a76ab6626865", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3987", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "CARLOS33", "review_title": "AMAZING", "review_description": "[This review was collected as part of a promotion.] These batteries did a amazing job.  I love how well these worked and how well they work in my flash lights and in my remote controlled.  I like how these batteries provided me with bright lights and consistent output when they are in my flashlight.  I love how they are still working in my remote control and in my flashlight.  These batteries our amazing.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217857738", "uniq_id": "7db394d8-a207-5366-8144-708cf527d005", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3993", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "dpjp2020", "review_title": "Long Lasting", "review_description": "[This review was collected as part of a promotion.] I am someone who really gets annoyed when I constantly have to replace the batteries in my stuff such as my led candles, clocks and tv remotes. So I decided to try these batteries and I am so glad that I did because they truly do last a long time. I wanted to compare them with my other ones so I put a different battery in each of my candles at the same time. I am honestly shocked that I have now had to replace my candle twice with the other battery but this one is still going strong. I would definitely recommend these batteries to anyone who is looking for a trusted brand and a long lasting battery.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217831843", "uniq_id": "5533ae0c-dffd-5445-974a-ce7a0084ab0a", "scraped_at": "16/01/2022 16:19:20"}, {"index": "4009", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Joeym1400", "review_title": null, "review_description": "I bought this game a long time ago but a couple of months ago it was stolen and I was very excited to have a nother copy", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "115346117", "uniq_id": "ed9194ef-464b-541b-b379-e7e0076d3278", "scraped_at": "16/01/2022 16:19:20"}, {"index": "4026", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Ajay", "review_title": "Great", "review_description": "[This review was collected as part of a promotion.] I use it for gaming", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "I love all the features it has ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "4039", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "HomelessUnderABridge", "review_title": "Best game ever", "review_description": "I will probably get a divorce before I\u2019m even married because of this game, I\u2019ve lost friends and family and live under a bridge due to the time spent playing this game and you know what? Totally worth it!!! Overall great game and as for my life choices let\u2019s say it minus 5 stars but who cares right Fallout!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "114872206", "uniq_id": "482f8447-015c-550c-959f-3c6e1818a549", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4053", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Lumber Man Bill", "review_title": "Best batteries around", "review_description": "[This review was collected as part of a promotion.] We have many kids toys at the house between our two children. And what do you need with all those toys? Reliable batteries. The Energizer max alkaline battery is our go to. It keeps toys running strong longer than any of the other batteries on the market. It is the only type of batteries we use in our household.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217742304", "uniq_id": "2c4e3f7a-e484-557c-97b3-cd4cb44735bf", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4099", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "DrMurphy", "review_title": "Excellent open world", "review_description": "Given that it's an older game, it still has a few visual glitches than tend to happen. However, it's not enough to keep from enjoying the game. Probably in my top 10 favorite games. Highly recommended", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "114217234", "uniq_id": "e30904e2-90ea-5954-9c1a-b1d5b1a643d1", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4106", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Jahk1313", "review_title": "Great for kids", "review_description": "I bought this for myself but didn't enjoy this game. It's great for kids but not what I was looking for.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "3", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "113927867", "uniq_id": "809621ff-822b-5689-9bf8-656117ae2f62", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4113", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Dawsonsmommy", "review_title": "Love the brand", "review_description": "[This review was collected as part of a promotion.] I have always used this brand of batteries. They have a long shelf life and keep my things going for awhile. I\u2019ve never had an issue with these batteries. I have told many of my friends and family about them.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217713636", "uniq_id": "f0065927-1437-5b33-b08c-3d5983b402f8", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4127", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "James", "review_title": "Amazing experience! Love this!!", "review_description": "[This review was collected as part of a promotion.] I use my monitor for work. Takes up less space then two monitors (I had 3) and it's just a great monitor for multitasking.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212416057", "uniq_id": "9c6b1fd9-a082-5ac9-b53c-b67839229433", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4135", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "pebbles321456", "review_title": "Best Game Ever!", "review_description": "Best game purchase ever! I have spent hundreds of hours playing this game since it came out!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "18", "not_helpful_count": "2", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "104930844", "uniq_id": "4a37a58f-5ec8-5fdc-983a-e125fd3127e8", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4150", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Bigalpha1969", "review_title": "Very Powerful Batteries!", "review_description": "[This review was collected as part of a promotion.] Honestly you can't go wrong with Energizer! Works in my heavy duty flashlight perfectly! Very reasonably priced also! Very powerful & long lasting! Quality is always top notch! Packaged very well too! Highly recommended!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217681476", "uniq_id": "53e52715-cb00-5878-94bb-9d977cc32701", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4151", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Krista87", "review_title": "Long lasting", "review_description": "[This review was collected as part of a promotion.] We have a huge need for batteries in our house between a toddler and baby and these don\u2019t disappoint. We are using them in our baby\u2019s swing and use the swing for hours a day and they\u2019ve been working great!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217678113", "uniq_id": "46b2971d-f809-5009-992f-62de21cfac87", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4173", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "yaibelishere", "review_title": "Get. This. NOW!!!!!", "review_description": "this game is beyond what I expected! The gameplay was solid, the music was perfect, and the story was well crafted. A true successer to fallout 3!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "8", "not_helpful_count": "4", "reviewed_at": "5 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "75853101", "uniq_id": "f1aefc1a-50d6-5053-8798-30aaad523482", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4181", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Monniemommy", "review_title": "Seem to work great so far!", "review_description": "\"[This review was collected as part of a promotion.] We have three kids, 10, 9 and 5 so we go through our fair share of batteries.  I can not tell you how many times our inlaws purchase value brand batteries to \"\"save\"\" money.  Nothing works like Energizer!\"", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217592470", "uniq_id": "1748ba24-f1e6-5c14-8869-07f036291938", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4185", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "76Hu77", "review_title": "I love this product", "review_description": "[This review was collected as part of a promotion.] I like to play game with my monitor and watch some movies", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212411183", "uniq_id": "f5c58d7c-ac36-5bb9-9782-0ff2b3f02584", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4190", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "MeerabGamemonitor", "review_title": "Grate screen resolution!", "review_description": "[This review was collected as part of a promotion.] My son is in school,  he injoy using this monitor working school homework and playing roblox.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212404819", "uniq_id": "3eac6b5e-5fef-57fd-a394-df55d20b7347", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4191", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Bill S", "review_title": "The NEO G9 is Outstanding, One of a Kind", "review_description": "the neo g9 is simply outstanding. hdr is excellent with an oled-like quality. it does take some time to set up this monitor correctly. many of the negative reviews here are from folks who don't have a clue how to do that or for older generations of the odyssey g9. this review is for the neo g9 released in 2021.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "4195", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "StevenDTimm", "review_title": "Fantastic Game!!", "review_description": "I bought Fallout 4 when it first came out and I cannot tell you the awesmness of this game! I have been following the Fallout series since the 1990's and since Bethesda took over the franchisee, it has been nothing but spectacular! The gameplay, graphics and audio score are wonderful. This is a game where you can truly immerse yourself in. If you liked Skyrim, you will love Fallout. It has much of the same game play mechanics and you will be able to explore a large and vast world. I would definitely recommend Fallout 4 to any serious gamer!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "4", "not_helpful_count": "2", "reviewed_at": "5 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "73940585", "uniq_id": "816a2b3f-4ee7-5267-a801-685f5f02c166", "scraped_at": "16/01/2022 16:19:24"}], "stage_runningstate": "executed", "datacache": 0, "originalcount": 5321, "samplecount": 544, "samplefile": "/FileStore/platform/sampleData/678d37425351fccd0b114dbb/part-00000-6bb59f94-0e63-4601-a3a6-3d55a8a0700f-c000.csv", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": "{}"}}, {"_id": "678d37425351fccd0b114dbc", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/gamestop_reviews.csv", "in": ["678d37425351fccd0b114dbb"], "out": ["678d37425351fccd0b114dbd"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "Helpful_AutoFE", "dataPercentage": "10", "comment": "", "pipeline_id": "678d37425351fccd0b114db8", "sub_type": "Feature", "stage_type": "transformation", "stage_attributes": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10", "sampledata": [{"index": "0", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Leeford", "review_title": "look out gamerz, here comez awsome", "review_description": "My new OLED is a upgrade and it's great!  This is my third Vizio TV to replace my first one that went blank after 12 years of stellar service. (I'm even thinking of getting it repaired if possible for the great grand kids.)   I have always liked the picture quality and the price of Vizio's. You cant go wrong.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229196240", "uniq_id": "d749678d-aeba-5a6b-b8e2-8d2121463672", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 352.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 286.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 374.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 35.0, "uniq_id_stringindexer_transform": 350.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "1", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "DJM7", "review_title": "Great looking screen!", "review_description": "Rating is really a 4.5 but that's unavailable. The unit looks great both in and off. It is short on physical features (Bluetooth and whatnot) but I use both external sound and media units. This is a great OLED to buy if you want a great TV at a reasonable price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229179703", "uniq_id": "9f20312c-1047-5824-97d2-d5563b8fd046", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 273.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 105.0, "review_title_stringindexer_transform": 346.0, "review_description_stringindexer_transform": 218.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 25.0, "uniq_id_stringindexer_transform": 149.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "2", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "EC82", "review_title": "Quality", "review_description": "I\u2019m quite pleased with the entire product as a whole. The quality of picture and sound really speaks for itself when in use.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229174444", "uniq_id": "178b3b03-2c56-5abc-a016-c74c2633c9c2", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 369.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 198.0, "review_title_stringindexer_transform": 198.0, "review_description_stringindexer_transform": 381.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 77.0, "uniq_id_stringindexer_transform": 282.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "3", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Weeto", "review_title": "Unbelievable picture quality!", "review_description": "I\u2019ve only had my new Visio OLED65 mounted and operating for 3 days now and I\u2019m like a kid who after Christmas can\u2019t get enough of his favorite gift. The brightness and clarity of the picture is another huge by step forward in the evolution of  the television. I find myself seeking out programming that will showcase the quality of the picture regardless of the genre or intended audience. Some of the newer, computer generated cartoons, lack any redeemable qualities (imho) save for the incredible graphics, which are stunningly colorful, bright, and almost as vivid as real life. Nature documentaries and shows involving space, especially when shot in 4K are almost mesmerizing. When I bought my 65\u201d HD tv about 10 years ago I thought I was witnessing the best quality picture that could be produced by anything this side of a mirror. I was wrong, and happily so. If you\u2019re on the fence, like I was, about whether to replace a broken or outdated television with another of similar HD quality, that is to say \u201cstandard high definition\u201d...don\u2019t even waste your time. It\u2019s increasingly difficult to find as 4K is becoming ubiquitous, so that is pretty much a given. On the subject of spending your hard earned money on the more expensive OLED technology....if you have the means, or can somehow figure out how to acquire the means...my advice is definitely do so. Whether you\u2019re into movies, sports, gaming, or even nature/space shows, you will be amazed at the latest leap in picture quality and brightness. And VIZIO offers all the quality at a substantial savings. Putting the absolute best technology within the reach of those of us for whom the strength of the stock market makes absolutely no difference to our bottom line. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 456.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 328.0, "review_title_stringindexer_transform": 203.0, "review_description_stringindexer_transform": 246.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "FYI...the 65\u201d HD television I had to replace was a Samsung that was about 4 or 5 years old that stopped working after some loud cracking and popping noises that sounded like the transformer on an overhead power line blowing out. However", "name": " my 42\u201d VIZIO that I bought in \u201808 doesn\u2019t even have a single bad pixel. Food for thought.\"", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "0", "review_title": "0", "review_description": "10 months ago", "recommended_review": "2", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "229167959", "reviewed_at": "16e925e3-1e59-537e-aa67-1675b613d351", "rating": "16/01/2022 16:17:56", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 480.0, "name_stringindexer_transform": 19.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 7.0, "recommended_review_stringindexer_transform": 13.0, "verifed_purchaser_stringindexer_transform": 4.0, "helpful_count_stringindexer_transform": 4.0, "not_helpful_count_stringindexer_transform": 22.0, "reviewed_at_stringindexer_transform": 28.0, "rating_stringindexer_transform": 7.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "4", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "LexusSC400", "review_title": "Vizio OLED", "review_description": "The picture is very crisp and the blacks very dark.  Beautiful color.  The Vizio SmartCast app is fantastic.  The response from selections is much faster than the traditional supplied remote.  They update it from time to time with most recent voice search function", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229131414", "uniq_id": "bc017585-3bc1-5a37-9e58-f0bed6de9a72", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 64.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 45.0, "review_title_stringindexer_transform": 58.0, "review_description_stringindexer_transform": 322.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 96.0, "uniq_id_stringindexer_transform": 211.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "5", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ninjaafro", "review_title": "Bugs", "review_description": "Picture quality is amazing, however within a week from purchasing the tv will not turn on unless I unplug and plug it back in.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229087196", "uniq_id": "4167ea1c-87b6-5dbd-a04b-56fc7d1948e9", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 185.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 356.0, "review_title_stringindexer_transform": 210.0, "review_description_stringindexer_transform": 70.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 364.0, "uniq_id_stringindexer_transform": 369.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "6", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "von R", "review_title": "Glass like screen", "review_description": "Image is so clear I feel like I\u2019m on the set of the shows.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229080154", "uniq_id": "b4c20627-111c-5ad9-809f-11d6a82c675d", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 266.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 119.0, "review_title_stringindexer_transform": 293.0, "review_description_stringindexer_transform": 408.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 334.0, "uniq_id_stringindexer_transform": 87.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "7", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ohio Erik", "review_title": "Amazing 4k picture", "review_description": "I purchased this TV about 2 weeks ago and am blown away by the crisp, 4k picture.  I would definitely recommend this TV to someone considering an upgrade.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229044038", "uniq_id": "ea9ef1ba-d537-5b73-ab71-790616ef3258", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 424.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 40.0, "review_title_stringindexer_transform": 246.0, "review_description_stringindexer_transform": 311.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 1.0, "uniq_id_stringindexer_transform": 55.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "8", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "jonck", "review_title": "Great features", "review_description": "I got this today 2/25 for my birthday present from my son as a surprise gift, without any prior guess or information at all. My previous one in my master bed room was quite old Samsung 50\u201d PD TV, which was ok but heavy and bulky compared to this. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 39.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 395.0, "review_title_stringindexer_transform": 353.0, "review_description_stringindexer_transform": 143.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "I am so happy to have this wonderful big one for my first OLED TV", "name": " of which screen is fantastic and very light compared to my previous one indeed.\"", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "0", "review_title": "0", "review_description": "10 months ago", "recommended_review": "4", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "228991912", "reviewed_at": "7f69bc6a-f89c-53d4-a52a-39a8b8512c54", "rating": "16/01/2022 16:17:56", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 348.0, "name_stringindexer_transform": 36.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 7.0, "recommended_review_stringindexer_transform": 5.0, "verifed_purchaser_stringindexer_transform": 4.0, "helpful_count_stringindexer_transform": 4.0, "not_helpful_count_stringindexer_transform": 16.0, "reviewed_at_stringindexer_transform": 29.0, "rating_stringindexer_transform": 7.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "9", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bob279", "review_title": "Great picture and a good price", "review_description": "Best price on an OLED tv. Has a great picture and is easy to navigate the menus and connect via apple or Android devices. I always bought LG OLED tvs because I liked their quality and features. But so far, Vizio is just as good and a better price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228960695", "uniq_id": "3e14ceea-0717-51ac-9edf-6b0d17b9f978", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 88.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 143.0, "review_title_stringindexer_transform": 333.0, "review_description_stringindexer_transform": 98.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 250.0, "uniq_id_stringindexer_transform": 104.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "10", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "NuggetsOne", "review_title": "Awesomeness!", "review_description": "Just like the elite controller v2 but halo edition one of the best controllers out there if you do not have one elite\u2019s controller\u2019s are must have.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "16 hours ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "198688597", "uniq_id": "3bdf13c6-ed6c-5df7-a7cb-f87507d4b133", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 193.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 107.0, "review_title_stringindexer_transform": 266.0, "review_description_stringindexer_transform": 392.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 31.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 306.0, "uniq_id_stringindexer_transform": 17.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "11", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "AJ V", "review_title": "Fantastic product", "review_description": "First foray with the elite controller. Nothing but impressed. The weight in the hand, the grip, the buttons, and changeable joysticks are all amazing. Even better is the Masterchief finish. If you can't find the halo edition I'd recommend trying the regular elite series 2, I'll never use a different Xbox controller again.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 day ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "198672375", "uniq_id": "92688319-f675-53b8-9468-2e7b1ea9bbc4", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 84.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 18.0, "review_title_stringindexer_transform": 321.0, "review_description_stringindexer_transform": 247.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 41.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 292.0, "uniq_id_stringindexer_transform": 40.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "12", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Always a fool", "review_title": "Not all as it seems", "review_description": "Really bought this for the blue mode leds, just to find out they are still white leds with a blue coating on them and not that bright. All in all still an elite controller.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "7 days ago", "rating": "4", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "196827630", "uniq_id": "ff2acd3f-f96f-5935-bdfc-8e29e518fb60", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 28.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 304.0, "review_title_stringindexer_transform": 158.0, "review_description_stringindexer_transform": 27.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 21.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 139.0, "uniq_id_stringindexer_transform": 43.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "13", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "RootM0d", "review_title": "Beautiful design - Awesome feel - Must get one!", "review_description": "At first I was asking myself why spend the crazy money on a controller!  I too am now a believer.  From the case to cable to finally making its way to the actual controller - it is special in every way.  There is so much detail to this controller.  Lets not forget it is a limited edition and carries a beautiful Halo design.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "7 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "196827194", "uniq_id": "a3a3d750-800d-5eef-a917-fd5b00598f06", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 151.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 235.0, "review_title_stringindexer_transform": 142.0, "review_description_stringindexer_transform": 229.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 21.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 186.0, "uniq_id_stringindexer_transform": 94.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "14", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Ozlas", "review_title": "Simply amazing", "review_description": "The build of this controller is perfect and the details are amazing.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "9 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "196230804", "uniq_id": "ebae6bfc-540e-5f39-9ce2-2d46db50b49a", "scraped_at": "16/01/2022 16:17:56", "index_stringindexer_transform": 296.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 296.0, "review_title_stringindexer_transform": 278.0, "review_description_stringindexer_transform": 58.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 36.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 302.0, "uniq_id_stringindexer_transform": 274.0, "scraped_at_stringindexer_transform": 10.0}, {"index": "15", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Odium Prius", "review_title": "Limited Edition Halo Controller", "review_description": "Cortana herself lives within this controller. I am one with Halo", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "195216162", "uniq_id": "78865f85-196f-515f-90ed-a8dad95d9065", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 82.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 10.0, "review_title_stringindexer_transform": 315.0, "review_description_stringindexer_transform": 204.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 18.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 387.0, "uniq_id_stringindexer_transform": 336.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "16", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Ryan CIN3MATIX", "review_title": "Beautiful Elite Series 2", "review_description": "This controller has always been great but this one is a work of art.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "195708350", "uniq_id": "89ac96f3-a6a7-5f6e-ac22-302869e30bc7", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 172.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 163.0, "review_title_stringindexer_transform": 91.0, "review_description_stringindexer_transform": 49.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 18.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 92.0, "uniq_id_stringindexer_transform": 50.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "17", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Punkwaste", "review_title": "Firing on all cylinders.", "review_description": "Even lighter than my previously owned Elite Series 2, thought it would be heavier. The buttons, the triggers, the analogue sticks, everything operates better than the original Elite Series 2 at launch. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 285.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 338.0, "review_title_stringindexer_transform": 344.0, "review_description_stringindexer_transform": 179.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "This thing is only $20 more than the ES2", "name": " and you know they could\u2019ve easier made it $100 more and still sold out. Amazing.\"", "brand": "yes: I recommend this product", "sku": "Verified Purchaser", "reviewer_name": "0", "review_title": "0", "review_description": "14 days ago", "recommended_review": "5", "verifed_purchaser": "4.6993", "helpful_count": "306", "not_helpful_count": "194520876", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "16/01/2022 16:17:57", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 276.0, "name_stringindexer_transform": 24.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 9.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 240.0, "recommended_review_stringindexer_transform": 4.0, "verifed_purchaser_stringindexer_transform": 11.0, "helpful_count_stringindexer_transform": 20.0, "not_helpful_count_stringindexer_transform": 28.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 8.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "18", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "CosmicOwl", "review_title": "Rad sauce", "review_description": "These controllers I think are worth the money. One of my favorite things is that I no longer need double A batteries. It comes with a charging port. And how I can customize the buttons is rad", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "17 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "194329916", "uniq_id": "65c38814-b259-591c-ae59-a3f0fbae81d0", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 407.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 309.0, "review_title_stringindexer_transform": 167.0, "review_description_stringindexer_transform": 330.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 24.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 324.0, "uniq_id_stringindexer_transform": 356.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "19", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Skyturtle97", "review_title": "Excellent purchase.", "review_description": "Love the controller use it everytime I play. The remote plays excellent. Be carefull of the back buttons though do to being removable I feel like they will wear out faster than most.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "18 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "194187129", "uniq_id": "902d7992-f6fd-55bd-b5d7-408db5a49648", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 53.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 271.0, "review_title_stringindexer_transform": 247.0, "review_description_stringindexer_transform": 151.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 45.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 346.0, "uniq_id_stringindexer_transform": 258.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "20", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Pitbull91101", "review_title": "Yoshi switch game", "review_description": "Yoshi game was awesome and still playing it thank u sooo much GameStop :))", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127432481", "uniq_id": "540015d7-27e3-50f6-b66b-8646416c0cfb", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 355.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 36.0, "review_title_stringindexer_transform": 211.0, "review_description_stringindexer_transform": 425.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 307.0, "uniq_id_stringindexer_transform": 339.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "21", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Mykd", "review_title": "Awesome game if you like the Mario brothers games.", "review_description": "Great game. You will enjoy it. Good price worth it I Always have enjoyed the super Mario series since Mario brothers in the arcade", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127430959", "uniq_id": "00bd1c61-b1e9-5996-9cb2-68f647941463", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 217.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 261.0, "review_title_stringindexer_transform": 42.0, "review_description_stringindexer_transform": 431.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 244.0, "uniq_id_stringindexer_transform": 177.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "22", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Chigg", "review_title": "Awsome game...", "review_description": "My son loves to play this game, he's been playing it every day since he got it... Great Job!!!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127420280", "uniq_id": "5cf58f8e-75b2-555b-b9ac-0edb49219337", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 121.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 116.0, "review_title_stringindexer_transform": 305.0, "review_description_stringindexer_transform": 281.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 132.0, "uniq_id_stringindexer_transform": 131.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "23", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Prieto56", "review_title": "Awesome Game for Children!", "review_description": "The game is great for a family and younger children. My 4 year old wnjoys the game.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127414142", "uniq_id": "992506c3-cb1d-5a05-afc6-cce6a4a437fd", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 58.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 318.0, "review_title_stringindexer_transform": 363.0, "review_description_stringindexer_transform": 17.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 269.0, "uniq_id_stringindexer_transform": 68.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "24", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Iz B", "review_title": "Poochy", "review_description": "It would be better if Poochy was in all of the levels.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127414207", "uniq_id": "70c3cefe-763a-5aca-9b7d-5bd2b36c5595", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 160.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 194.0, "review_title_stringindexer_transform": 161.0, "review_description_stringindexer_transform": 194.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 63.0, "uniq_id_stringindexer_transform": 276.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "25", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Angel Marred", "review_title": "Not bad", "review_description": "It's cute and fun, but feels a little lacking in fulfilling its potential.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127411122", "uniq_id": "c1aea343-68b1-58fa-8a7d-07f265e664cb", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 291.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 97.0, "review_title_stringindexer_transform": 12.0, "review_description_stringindexer_transform": 424.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 195.0, "uniq_id_stringindexer_transform": 251.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "26", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Derrick Evans", "review_title": "Opinion on Yoshi Crafted World", "review_description": "Good game including game play and music also music", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127409004", "uniq_id": "fec5af3e-7f63-5e5d-9649-1b81750f3e24", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 128.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 294.0, "review_title_stringindexer_transform": 99.0, "review_description_stringindexer_transform": 295.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 124.0, "uniq_id_stringindexer_transform": 374.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "27", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jeremy Green", "review_title": "Another Win-tendo Jewel!!", "review_description": "The quirky style that shined in Yoshi\u2019s Wooly World has gotten a serious upgrade in this new gem from Nintendo.  Like all it\u2019s first-party titles, this game is nearly flawless.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 362.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 66.0, "review_title_stringindexer_transform": 192.0, "review_description_stringindexer_transform": 428.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The \u201ccrafted world\u201d is exceptionally detailed", "name": " with cardboard cutouts", "brand": " Pinterest worth constructions", "sku": " and vibrant colors that pop on everything from the tiny Switch screen to a 70\u201d flatscreen TV.", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 36.0, "name_stringindexer_transform": 15.0, "brand_stringindexer_transform": 17.0, "sku_stringindexer_transform": 16.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The gameplay is tight", "name": " with seamless reaction times and plenty of opportunities to save yourself from mistakes.  Easy enough for kids to pick up", "brand": " but easily enjoyed by gamers of all ages", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 92.0, "name_stringindexer_transform": 20.0, "brand_stringindexer_transform": 18.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Most importantly", "name": " this game is fun!\"", "brand": "No: I don\u2019t recommend this product", "sku": "Verified Purchaser", "reviewer_name": "1", "review_title": "0", "review_description": "2 years ago", "recommended_review": "5", "verifed_purchaser": "4.6556", "helpful_count": "2390", "not_helpful_count": "127408484", "reviewed_at": "7ed32763-a3be-57d4-a35e-a166b90de2ee", "rating": "16/01/2022 16:17:57", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 388.0, "name_stringindexer_transform": 14.0, "brand_stringindexer_transform": 9.0, "sku_stringindexer_transform": 9.0, "reviewer_name_stringindexer_transform": 4.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 5.0, "recommended_review_stringindexer_transform": 4.0, "verifed_purchaser_stringindexer_transform": 5.0, "helpful_count_stringindexer_transform": 8.0, "not_helpful_count_stringindexer_transform": 12.0, "reviewed_at_stringindexer_transform": 27.0, "rating_stringindexer_transform": 8.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "28", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Carl78", "review_title": "Good game", "review_description": "She loves it good game. It easy to play and addicting.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127407425", "uniq_id": "bc585083-82d6-5cb5-af8a-7f19120e6f3a", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 487.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 206.0, "review_title_stringindexer_transform": 47.0, "review_description_stringindexer_transform": 299.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 319.0, "uniq_id_stringindexer_transform": 47.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "29", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Alejandro Rivera", "review_title": "Best Nintendo game I ever played!", "review_description": "Yoshi\u2018s crafted world is the best Nintendo game I ever played since Yoshi\u2018s woolly world! Lots of hard challenges to complete and it\u2019s so much fun! I love this game!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127405746", "uniq_id": "d92ea3bf-7fab-56df-802f-973a7be01387", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 440.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 175.0, "review_title_stringindexer_transform": 80.0, "review_description_stringindexer_transform": 294.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 72.0, "uniq_id_stringindexer_transform": 63.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "30", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Pixle101", "review_title": "Brilliant picture", "review_description": "I recently bought this TV and was blown as easy with the picture quality. I never want not to go back to LED.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228929144", "uniq_id": "4eeca482-acc8-54f0-bf9c-1552ad6304c3", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 423.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 405.0, "review_title_stringindexer_transform": 53.0, "review_description_stringindexer_transform": 265.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 32.0, "uniq_id_stringindexer_transform": 227.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "31", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Sillypajamas", "review_title": "Absolutely amazing picture quality", "review_description": "I went from an old LCD TV to this Ola TV and the picture quality is amazing this TV has a deep as blocks of ever seen the sound quality is fantastic I could not be happier!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228928290", "uniq_id": "b6503cc7-6b14-5ea4-ae9e-5e984741ae65", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 306.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 155.0, "review_title_stringindexer_transform": 166.0, "review_description_stringindexer_transform": 314.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 191.0, "uniq_id_stringindexer_transform": 387.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "32", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "John4", "review_title": "This tv is vibrant", "review_description": "Bought this yesterday and I am really excited. I saw how clear the picture was and had to have it. Won out over my husband who wanted the Sony.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 250.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 85.0, "review_title_stringindexer_transform": 228.0, "review_description_stringindexer_transform": 175.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "He agreed this morning while watching NASCAR that I was right. Yeah for me.\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "10 months ago", "review_description": "5", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "228881042", "not_helpful_count": "2a736f40-6b79-5c49-b539-5eae6b06fe94", "reviewed_at": "16/01/2022 16:17:57", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 4.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 365.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 13.0, "not_helpful_count_stringindexer_transform": 42.0, "reviewed_at_stringindexer_transform": 23.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "33", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Mike1921", "review_title": "Great picture, confusing to turn on", "review_description": "I've had this TV for 3 weeks now, so far I really like the picture. it's hooked up to a vizio 2.1 sound bar. it is confusing when I 1st turn the TV on,  I get the Vizio sign on the screen, a few moments later the picture comes on with the TV speakers, then the tv shuts off, a few seconds pass and he comes back on with the sidebar act of and everything is OK then don't understand why it goes off comes on goes off and comes back on", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228863224", "uniq_id": "4840bb9f-8063-54f1-aafd-dc779ba006b8", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 99.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 157.0, "review_title_stringindexer_transform": 317.0, "review_description_stringindexer_transform": 347.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 8.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 127.0, "uniq_id_stringindexer_transform": 193.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "34", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bmitch20", "review_title": "Nice tv", "review_description": "Great TV at at a reasonable price.  Happy so far with purchase", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228776856", "uniq_id": "5dfb09b5-3b7b-5c92-8d69-2e487ee55948", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 8.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 273.0, "review_title_stringindexer_transform": 355.0, "review_description_stringindexer_transform": 398.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 341.0, "uniq_id_stringindexer_transform": 119.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "35", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "karena", "review_title": "Gorgeous picture!", "review_description": "I love that I found an OLED that did not break the bank. The picture quality is amazing and VCast is great! The only downside is the sound and it\u2019s only a small complaint on the quality.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228759010", "uniq_id": "58e11806-69db-59a1-bf1b-1931387149b4", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 168.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 61.0, "review_title_stringindexer_transform": 292.0, "review_description_stringindexer_transform": 223.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 316.0, "uniq_id_stringindexer_transform": 214.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "36", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Babes70", "review_title": "Love this TV!!", "review_description": "Easy setup and there you go...I love VIZIO TV. I will continue to buy VIZIO TV's !", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228750584", "uniq_id": "1b36ae98-a3b9-586b-b75c-92d0b0a64fbe", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 271.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 19.0, "review_title_stringindexer_transform": 244.0, "review_description_stringindexer_transform": 393.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 230.0, "uniq_id_stringindexer_transform": 286.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "37", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Koky87", "review_title": "Great tv for value", "review_description": "Very good image quality, beautiful design on a affordable price", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228749581", "uniq_id": "ce1ab1c3-34c5-5b21-90d3-be7a37b215d1", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 140.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 44.0, "review_title_stringindexer_transform": 85.0, "review_description_stringindexer_transform": 136.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 85.0, "uniq_id_stringindexer_transform": 277.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "38", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Dcm388", "review_title": "Best tv for the price", "review_description": "Oled is king I\u2019ll never go back to traditional led TVs again it\u2019s just not even in the same ballpark you can\u2019t beat the picture quality of and oled", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228724687", "uniq_id": "926fe7c6-6345-529c-91bc-35736576d50f", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 373.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 350.0, "review_title_stringindexer_transform": 303.0, "review_description_stringindexer_transform": 263.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 283.0, "uniq_id_stringindexer_transform": 209.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "39", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "SunnyS", "review_title": "TV is awesome!!", "review_description": "\"I'm a true fan of vizio. My old 36\"\" Vizio lasted me a very long time and that's the reason why I decided to stick with vizio. Visuals are amazing on this OLED. There are some bugs but they can be repaired by software update patches released by vizio. I also bought the Vizio Atmos soundbar and its absolutely freegin awesome. Only issue I've experienced is the sound bar doesnt activate on its own and I usually have to cycle through the settings to reactivate through HDMI-ARC. Im.sure theres a fix for it. Overall I'm happy with it and still feel vizio makes great products.\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228722869", "uniq_id": "b74cf53c-979d-5157-b1b1-28572636ecef", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 278.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 92.0, "review_title_stringindexer_transform": 149.0, "review_description_stringindexer_transform": 108.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 168.0, "uniq_id_stringindexer_transform": 123.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "40", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Spenceleoz", "review_title": "Xbox Elite Controller 2 - Halo Edition", "review_description": "It\u2019s amazing! Works perfect, just as an elite controller should. The best part is the paint job! 10/10 recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "21 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "194027229", "uniq_id": "f6a47493-63ec-510b-aba2-8a68eff9bc34", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 72.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 88.0, "review_title_stringindexer_transform": 249.0, "review_description_stringindexer_transform": 8.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 22.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 288.0, "uniq_id_stringindexer_transform": 328.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "41", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Rich190", "review_title": "Premium Halo Xbox Elite Controller", "review_description": "This controller provides excellent fine motor control with adjustable thumbstick tension, and removable back peddles.  It works great especially for a first person shooting game like Halo infinite.  It\u2019s on the pricey side, but you know this is a premium product for serious gamers.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "2", "reviewed_at": "21 days ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "194017047", "uniq_id": "9699ef26-f730-5927-bf3e-7cdf8ecbb2a5", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 443.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 412.0, "review_title_stringindexer_transform": 379.0, "review_description_stringindexer_transform": 99.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 22.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 322.0, "uniq_id_stringindexer_transform": 33.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "42", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "DrKillem", "review_title": "Amazing!", "review_description": "Best Xbox controller I've owned. Worth every penny. Owned for a month with no issues. Only con is I wish there were replacement joysticks, I love these but i know I'm going to wear them out, and I won't have Master Cheif green ones to replace :/", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192503208", "uniq_id": "3de73f9b-98c9-56e2-805a-e539ab1e5e33", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 339.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 411.0, "review_title_stringindexer_transform": 7.0, "review_description_stringindexer_transform": 126.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 326.0, "uniq_id_stringindexer_transform": 352.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "43", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Areria", "review_title": "Great controller but late shipping", "review_description": "Great controller. Purchase was definitely worth it. The only problem was the finalizing my payment and the late shipment through GameStop.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "7", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192137369", "uniq_id": "a2bc0bcb-0540-5dca-b1c2-06430afdd624", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 233.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 231.0, "review_title_stringindexer_transform": 97.0, "review_description_stringindexer_transform": 127.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 5.0, "not_helpful_count_stringindexer_transform": 10.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 26.0, "uniq_id_stringindexer_transform": 80.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "44", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "eyesayahh", "review_title": "Best Controller", "review_description": "This controller is incredibly responsive. It\u2019s fully customizable with lots of additional features & settings that can be adjusted to your preferences. I was skeptical at first due to the price but after a fair amount of use I wouldn\u2019t game with anything else", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "4", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192087597", "uniq_id": "8c024bd3-193e-5631-802c-3a989f6d4f73", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 95.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 267.0, "review_title_stringindexer_transform": 11.0, "review_description_stringindexer_transform": 166.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 5.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 160.0, "uniq_id_stringindexer_transform": 114.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "45", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Animehipster", "review_title": "Great controller", "review_description": "Love the controller no probs with it the first one was lost but customer service made sure I got another one and in a timely manner", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192080051", "uniq_id": "1a337911-6166-5983-b5cf-944db19384c8", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 2.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 317.0, "review_title_stringindexer_transform": 4.0, "review_description_stringindexer_transform": 163.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 274.0, "uniq_id_stringindexer_transform": 165.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "46", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Moi93", "review_title": "Halo Elite Series 2 Controller", "review_description": "SO BEAUTIFUL! Great addition to my Halo collection. The detail is just amazing. Performs like any other elite series 2 but that color scheme is just phenomenal.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "8", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192046520", "uniq_id": "8c51c627-f616-5bdf-aeff-d93bf787994c", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 152.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 90.0, "review_title_stringindexer_transform": 172.0, "review_description_stringindexer_transform": 259.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 8.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 273.0, "uniq_id_stringindexer_transform": 109.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "47", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Geo R", "review_title": "Buy one if you can find it!", "review_description": "great controller, beautiful design, ultimate customization", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "6", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192045625", "uniq_id": "dfa3ef96-f70e-5e78-9ee8-8d0c57f017c2", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 298.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 346.0, "review_title_stringindexer_transform": 25.0, "review_description_stringindexer_transform": 209.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 4.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 4.0, "uniq_id_stringindexer_transform": 2.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "48", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "JohnHalo117", "review_title": "Halo Infinite Controller:)", "review_description": "Doesn\u2019t even feel like an elite controller. But it does feel like an advance one with the grips and joystick converters. Not really worth the money but the design is amazing and there is no battery pack in the back, it\u2019s all built in, like a phone. Over all I love it! I\u2019m such a Halo fan it was a no brainer not to get.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192042914", "uniq_id": "8c35296d-ba41-5598-a513-740f8566113e", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 213.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 204.0, "review_title_stringindexer_transform": 343.0, "review_description_stringindexer_transform": 404.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 121.0, "uniq_id_stringindexer_transform": 327.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "49", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "GrabAzzery", "review_title": "A High Quality Masterpiece", "review_description": "It feels great, it enhances gameplay thanks to the paddles and customizability, and it looks absolutely beautiful.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "5", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192041796", "uniq_id": "6ebdfa30-4058-5fa6-b76a-d8bc6977e810", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 265.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 165.0, "review_title_stringindexer_transform": 215.0, "review_description_stringindexer_transform": 250.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 6.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 253.0, "uniq_id_stringindexer_transform": 77.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "50", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Chaz54", "review_title": "Yoshi party", "review_description": "Tons of fun to play with my kids! They love the look and ease of play!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127405362", "uniq_id": "960cbf7c-2354-567a-ba9c-537f3e63810f", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 133.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 82.0, "review_title_stringindexer_transform": 250.0, "review_description_stringindexer_transform": 203.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 249.0, "uniq_id_stringindexer_transform": 389.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "51", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jukeman79", "review_title": "BUY IT", "review_description": "Awsome title. Loads of fun! My kids and I love it!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127405229", "uniq_id": "69500d83-dab7-5078-9aa1-5e2200736382", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 34.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 60.0, "review_title_stringindexer_transform": 128.0, "review_description_stringindexer_transform": 430.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 350.0, "uniq_id_stringindexer_transform": 106.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "52", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "dfint", "review_title": "Amazing!", "review_description": "This game is amazing! Almost had given up on the Switch, but this game saved that from happening! It's a great game for people of all ages!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127404696", "uniq_id": "d361c95b-fd18-5024-a6fe-f997562e2d3b", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 468.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 221.0, "review_title_stringindexer_transform": 7.0, "review_description_stringindexer_transform": 382.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 388.0, "uniq_id_stringindexer_transform": 37.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "53", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "SamuraiMatt", "review_title": "Tank Yoshi and the layered egg aiming", "review_description": "Fun and cute, but some of the mechanics don't work that well (Tank Yoshi and the mutil-layer egg aiming). Still fun, but needs improvement in the mentioned areas. See Caddicarus' analysis.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127396175", "uniq_id": "c74037cf-5c28-5aa1-894a-c9abd50cdc79", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 334.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 197.0, "review_title_stringindexer_transform": 81.0, "review_description_stringindexer_transform": 228.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 207.0, "uniq_id_stringindexer_transform": 288.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "54", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "DKCBatch", "review_title": "Yoshi's Crafted World", "review_description": "It's awesome! The graphics make everything look like cardboard!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127396143", "uniq_id": "ab03b0d3-cc3b-5cf9-9894-200631099bb4", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 228.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 334.0, "review_title_stringindexer_transform": 6.0, "review_description_stringindexer_transform": 207.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 221.0, "uniq_id_stringindexer_transform": 275.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "55", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "VileMKII", "review_title": "Good", "review_description": "Fun title that is a good installment to the series. A little bit easy to beat, but has plenty of extras to keep entertained while going for that 100%", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127359093", "uniq_id": "296f57cd-b10f-5bd0-8dd9-78048b7c2e37", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 124.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 158.0, "review_title_stringindexer_transform": 13.0, "review_description_stringindexer_transform": 128.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 104.0, "uniq_id_stringindexer_transform": 330.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "56", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "LRoberto", "review_title": "Super awesome", "review_description": "This game was fir my youngest, he picked it out from good reviews online.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127348302", "uniq_id": "667613eb-326c-5e9c-a48d-bdd2461a770c", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 122.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 349.0, "review_title_stringindexer_transform": 314.0, "review_description_stringindexer_transform": 267.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 133.0, "uniq_id_stringindexer_transform": 218.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "57", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Philliptate7", "review_title": "1 or 2 player fun!", "review_description": "It can be 1 or 2 players. It\u2019s pretty simple mechanics, but there are so many creative was to use them. And there is a lot of replay ability. Me and wife have a blast.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127348104", "uniq_id": "603d6f26-ffc4-5059-8cd8-ed6ddd671e63", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 240.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 75.0, "review_title_stringindexer_transform": 35.0, "review_description_stringindexer_transform": 335.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 12.0, "uniq_id_stringindexer_transform": 100.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "58", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Toxicbug", "review_title": "Game play", "review_description": "It\u2019s a game that\u2019s for kids and for adults to enjoy", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127347414", "uniq_id": "7e989ba1-5dbc-561a-b719-01ed3cda849b", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 321.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 274.0, "review_title_stringindexer_transform": 248.0, "review_description_stringindexer_transform": 124.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 257.0, "uniq_id_stringindexer_transform": 57.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "59", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bardot", "review_title": "Love It", "review_description": "Purchased this TV a couple of weeks ago as my existing TV was 10+ years old and needed an upgrade.  Had a salesman take the time to show me the differences between an OLED and other projection systems.  Couldn't be happier with the picture that I am not experiencing.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228719614", "uniq_id": "4f131751-4d8a-5bfd-af50-9d2ce3dd046a", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 200.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 170.0, "review_title_stringindexer_transform": 209.0, "review_description_stringindexer_transform": 384.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 173.0, "uniq_id_stringindexer_transform": 268.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "60", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "tackomoto", "review_title": "Fun repeat play factor", "review_description": "My wife loves it. She even lets me play the co-op mode with her sometimes. I\u2019m not that into gaming, but this game is really fun!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127345863", "uniq_id": "8cbb57c6-0882-59dd-af92-73b57a213812", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 292.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 211.0, "review_title_stringindexer_transform": 254.0, "review_description_stringindexer_transform": 325.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 172.0, "uniq_id_stringindexer_transform": 299.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "61", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bob81", "review_title": "Outstanding!", "review_description": "This OLED is Excellent, Very Easy to Operate. I imagine that Someone may Complain but I am certain that it will be a Tribal thing.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228712408", "uniq_id": "86570fa2-2141-573f-93ea-6368fedc9d0d", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 145.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 224.0, "review_title_stringindexer_transform": 37.0, "review_description_stringindexer_transform": 161.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 208.0, "uniq_id_stringindexer_transform": 15.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "62", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Porkchop76", "review_title": "Deep blacks", "review_description": "Great tv. I like the vizio apps.the sound is nothing special but if you are buying an OLED you probably have another option. The best part is the deep true black. The colors are very vibrant. I am very satisfied.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228703343", "uniq_id": "a3955d77-2dea-561b-823c-41bc60377780", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 59.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 186.0, "review_title_stringindexer_transform": 155.0, "review_description_stringindexer_transform": 51.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 200.0, "uniq_id_stringindexer_transform": 163.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "63", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bino7899", "review_title": "Great TV for the price", "review_description": "Has some bugs and I know Vizio will work on them a little faster. Especially with the new Xbox series x and ps5. Other than that can\u2019t beat the price for an Oled TV. Great picture. Now Vizio please get the VRR @ 4K120 to work and give us the option to change all picture setting in game mode. No settings should be blanked out.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228692495", "uniq_id": "9e0d282d-056f-55c9-a62d-13e79bbb844c", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 450.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 342.0, "review_title_stringindexer_transform": 330.0, "review_description_stringindexer_transform": 134.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 332.0, "uniq_id_stringindexer_transform": 368.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "64", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Doblado98", "review_title": "Amazing tv", "review_description": "I bought this for my birthday and it has been amazing!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 330.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 404.0, "review_title_stringindexer_transform": 143.0, "review_description_stringindexer_transform": 366.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Wonderful OLED TV\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "11 months ago", "review_description": "5", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "228691813", "not_helpful_count": "865fb1f7-9fbc-5ec8-89fb-868f67495019", "reviewed_at": "16/01/2022 16:17:57", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 141.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 9.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 31.0, "not_helpful_count_stringindexer_transform": 43.0, "reviewed_at_stringindexer_transform": 23.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "65", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Super Awesome!", "review_title": "Great features!", "review_description": "I love the tv and everything about it. I am a big fan of Vizio TVs, except for the sound, you will need a soundbar.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228632763", "uniq_id": "ee801ec0-c5cf-5655-8498-a9770f1a6921", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 238.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 263.0, "review_title_stringindexer_transform": 206.0, "review_description_stringindexer_transform": 97.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 295.0, "uniq_id_stringindexer_transform": 75.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "66", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "jpc3", "review_title": "Great price, Vizio is a reliable brand", "review_description": "All my Vizio TVs have held up under use. Hoping the new OLEDs will get firmware updates and continue to make this TV great now and in the future", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228622725", "uniq_id": "4ef37b88-1ab9-5d98-adfd-5a7790b9cdfc", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 30.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 373.0, "review_title_stringindexer_transform": 57.0, "review_description_stringindexer_transform": 319.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 175.0, "uniq_id_stringindexer_transform": 156.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "67", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Terry T.", "review_title": "Good TV for the Price but has some issues", "review_description": "Very good OLED tv for the price but it does have some issues with powering on.  If you leave it idle for too long it will \u201cgo to sleep\u201d and the only way to cut it back on is to power cycle.  Other than that I love it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228576384", "uniq_id": "232f5009-6c44-540a-9e7a-040e815522eb", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 10.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 400.0, "review_title_stringindexer_transform": 60.0, "review_description_stringindexer_transform": 359.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 392.0, "uniq_id_stringindexer_transform": 303.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "68", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Canothegreat", "review_title": "Beautiful oled screen", "review_description": "Beautiful screen! Awesome price but full of bugs. On my set had to constantly unplug my tv from the  power supply to get it to come on. Worked well with my xbox series x just a few glitches here and there. No 4k 120 for the ps5 so I had to use the 4k 60 hdmi slot. I feel this tv is still in beta and needs alot of firmware updates to address system performance issues.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "2", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228545194", "uniq_id": "bb5c5e36-48cd-533e-8b32-ac1840944224", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 142.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 102.0, "review_title_stringindexer_transform": 24.0, "review_description_stringindexer_transform": 232.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 248.0, "uniq_id_stringindexer_transform": 13.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "69", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "shane19", "review_title": "Looks great!", "review_description": "I bought this tv because I wanted to try out OLED for the first time. I\u2019m glad I bought it. The colors and contrast are on point. The price compared to the competition in the same category can\u2019t be beat. Super happy.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228523449", "uniq_id": "ce94d9a4-0183-5315-8521-941c99a5aa68", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 308.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 5.0, "review_title_stringindexer_transform": 385.0, "review_description_stringindexer_transform": 372.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 296.0, "uniq_id_stringindexer_transform": 371.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "70", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "R Robles", "review_title": "Best Controller!", "review_description": "Everything I wanted from a controller, in an amazing custom paint job!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192040841", "uniq_id": "0fcf6665-8e4c-55e5-8723-8ea686ad425a", "scraped_at": "16/01/2022 16:17:57", "index_stringindexer_transform": 365.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 160.0, "review_title_stringindexer_transform": 98.0, "review_description_stringindexer_transform": 415.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 333.0, "uniq_id_stringindexer_transform": 266.0, "scraped_at_stringindexer_transform": 2.0}, {"index": "71", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "IanMan141", "review_title": "Elite  Series 2 Halo Wireless Controller", "review_description": "The design is very remarkable great addition to the collection of Halo Series X Console Bundle it a must have.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192039616", "uniq_id": "524f0643-9cda-5306-81ab-277f533b47da", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 239.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 401.0, "review_title_stringindexer_transform": 63.0, "review_description_stringindexer_transform": 416.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 336.0, "uniq_id_stringindexer_transform": 310.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "72", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Best Controller", "review_description": "I love the pro controller and this one is absolutely beautiful. Must buy", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192038437", "uniq_id": "fd3b358c-a67f-5475-a1cd-04c862f97b4e", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 189.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 11.0, "review_description_stringindexer_transform": 414.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 291.0, "uniq_id_stringindexer_transform": 297.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "73", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Gaming reviews6", "review_title": "Amazing", "review_description": "Works good its perfect for people who game hard-core because it don't ware out as fast and last a long time cheaply priced perfect for your gaming set up!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "1", "not_helpful_count": "6", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191969147", "uniq_id": "aed215bd-32e5-5577-be72-8fe1a4273d12", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 41.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 397.0, "review_title_stringindexer_transform": 21.0, "review_description_stringindexer_transform": 423.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 4.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 315.0, "uniq_id_stringindexer_transform": 388.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "74", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "twojoesf", "review_title": "Great looking controller!", "review_description": "I love the classic colors of master Chief! Looks great with my Halo Theme Xbox!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "5", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191868187", "uniq_id": "87901149-9f7d-5db6-9c6b-7f516bda5b83", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 461.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 283.0, "review_title_stringindexer_transform": 285.0, "review_description_stringindexer_transform": 104.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 14.0, "not_helpful_count_stringindexer_transform": 6.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 91.0, "uniq_id_stringindexer_transform": 59.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "75", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Marco AP", "review_title": "Buttons don\u2019t register", "review_description": "AXYB buttons do no register unless they are 100% fully pressed in. Annoying there is no pressure sensitivity!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "18", "reviewed_at": "1 month ago", "rating": "1", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191531039", "uniq_id": "db0b55df-7fd4-5d5c-90d3-eac2b049be4c", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 340.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 152.0, "review_title_stringindexer_transform": 312.0, "review_description_stringindexer_transform": 85.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 5.0, "not_helpful_count_stringindexer_transform": 41.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 128.0, "uniq_id_stringindexer_transform": 16.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "76", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "I own this", "review_title": "Excellent controller", "review_description": "This no longer available item is excellent and you should buy one, but you can\u2019t.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "41", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191517192", "uniq_id": "c026bcd2-f440-5b87-95d0-a9dbdd87d4fe", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 220.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 72.0, "review_title_stringindexer_transform": 168.0, "review_description_stringindexer_transform": 286.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 44.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 280.0, "uniq_id_stringindexer_transform": 348.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "77", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Fa crediblenick", "review_title": "Awesome controller", "review_description": "Great controller love the way it feels and all the little halo touches it has.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "4", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191510980", "uniq_id": "0d5805fa-77a0-581e-9f6a-b5441020925d", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 70.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 352.0, "review_title_stringindexer_transform": 205.0, "review_description_stringindexer_transform": 255.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 5.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 340.0, "uniq_id_stringindexer_transform": 229.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "78", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "516", "review_title": "Solid controller", "review_description": "So far I love the feel and look of this controller. Need to wait and see how the grips hold up to give it a 5 star rating.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "4", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191473354", "uniq_id": "20b6e8de-5239-5339-97cd-f4a96cf19873", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 49.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 127.0, "review_title_stringindexer_transform": 75.0, "review_description_stringindexer_transform": 208.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 5.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 9.0, "uniq_id_stringindexer_transform": 215.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "79", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "M4lmx81", "review_title": "This is awesome design", "review_description": "I was lucky to cop a limited edition elite controller  waiting for halo campaign to used", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "3", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191467877", "uniq_id": "d7a8c6c4-234e-5c12-a8d0-af859409bd8a", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 175.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 39.0, "review_title_stringindexer_transform": 306.0, "review_description_stringindexer_transform": 53.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 7.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 237.0, "uniq_id_stringindexer_transform": 172.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "80", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "NicoleD90", "review_title": "Awesome!", "review_description": "This game has amazing graphics and amazing levels.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127345574", "uniq_id": "09c6537e-9796-5aca-a264-354c489b7706", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 254.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 205.0, "review_title_stringindexer_transform": 18.0, "review_description_stringindexer_transform": 42.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 358.0, "uniq_id_stringindexer_transform": 173.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "81", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "MDB3", "review_title": "Family time", "review_description": "It fun for your family and if you have kids they will enjoy hours of fun", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127333838", "uniq_id": "b6dae06e-562f-5f67-b905-6a267a1b3147", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 376.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 208.0, "review_title_stringindexer_transform": 183.0, "review_description_stringindexer_transform": 24.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 299.0, "uniq_id_stringindexer_transform": 31.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "82", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Bigbadbarry", "review_title": "Yoshi Fun!", "review_description": "I loved the Yoshi yarn game on the 3DS & I love the New Yoshi Yarn game on the switch.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 264.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 365.0, "review_title_stringindexer_transform": 194.0, "review_description_stringindexer_transform": 344.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "More color Yoshi\u2019s to choose from and a forward and backwards game in every course. It\u2019s a lovable game to play!\"", "name": "No: I don\u2019t recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "127332001", "not_helpful_count": "0a5b2e83-abcb-5537-a109-15a4b8c4f86d", "reviewed_at": "16/01/2022 16:17:58", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 382.0, "name_stringindexer_transform": 8.0, "brand_stringindexer_transform": 8.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 2.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 3.0, "verifed_purchaser_stringindexer_transform": 3.0, "helpful_count_stringindexer_transform": 30.0, "not_helpful_count_stringindexer_transform": 30.0, "reviewed_at_stringindexer_transform": 10.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "83", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Scott79rod", "review_title": "Awesome", "review_description": "Great game love every minute of it fun and entertaining", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127321759", "uniq_id": "6ff43da6-1ce0-54d4-9080-221feba20bd8", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 166.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 14.0, "review_title_stringindexer_transform": 8.0, "review_description_stringindexer_transform": 400.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 93.0, "uniq_id_stringindexer_transform": 250.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "84", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "BubbaHero4All", "review_title": "Great game!", "review_description": "Excellent condition. Awesome game. My fiance is enjoying it a lot.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127320268", "uniq_id": "9dc8e634-e9bc-584c-b64b-bb39c8f54fce", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 38.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 183.0, "review_title_stringindexer_transform": 334.0, "review_description_stringindexer_transform": 182.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 222.0, "uniq_id_stringindexer_transform": 323.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "85", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Diana finley", "review_title": "Yoshi's crafted world", "review_description": "One of the best games I've played in a while absolutely beautiful \u2764\ufe0f", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127319595", "uniq_id": "3025b560-5f5b-560b-9b15-d3c2ed1468b0", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 469.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 181.0, "review_title_stringindexer_transform": 14.0, "review_description_stringindexer_transform": 308.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 310.0, "uniq_id_stringindexer_transform": 326.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "86", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "HeliosExe", "review_title": "gud", "review_description": "10/10, it is a very creative, thinking out of the box game, it might be a bit easy, but it is fun to and I will 100% it even if it's the last thing I do.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127299640", "uniq_id": "2dee6b9f-1dd6-500a-9518-e48555992512", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 371.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 166.0, "review_title_stringindexer_transform": 277.0, "review_description_stringindexer_transform": 332.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 110.0, "uniq_id_stringindexer_transform": 83.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "87", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "platygirl", "review_title": "Yoshi's Crafted World... Buy it TODAY", "review_description": "OMG, this is the ultimate of fun, silly, fantasy escapism. Sit back, relax, and give yourself an hour to let Yoshi explore the hand-made world of tape, cardboard, and pipe cleaners", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127295961", "uniq_id": "348d2ec6-347b-50e5-9fe8-388a58176915", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 203.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 122.0, "review_title_stringindexer_transform": 327.0, "review_description_stringindexer_transform": 363.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 383.0, "uniq_id_stringindexer_transform": 120.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "88", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "2-Apr", "review_title": "Classic", "review_description": "Takes me back to the 90's. Thank you Nintendo! and thank you GameStop for always having great prices and what I want in stock!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127293457", "uniq_id": "de401188-0285-5ddd-93d8-f84f18f155e2", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 68.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 144.0, "review_title_stringindexer_transform": 357.0, "review_description_stringindexer_transform": 231.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 74.0, "uniq_id_stringindexer_transform": 366.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "89", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Candice S", "review_title": "Yoshi's crafted world is fun", "review_description": "really cute game and its pretty easy for the non gamer . its great to have a son who can help you too", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127293081", "uniq_id": "6879d252-929f-560d-a2f6-c29114a460cf", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 32.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 230.0, "review_title_stringindexer_transform": 237.0, "review_description_stringindexer_transform": 268.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 231.0, "uniq_id_stringindexer_transform": 135.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "90", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Woodbine23", "review_title": "Excellent product", "review_description": "I purchased several television and soundbars from Vizio from the M series and the SB38", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228523275", "uniq_id": "065df515-c00f-5674-8005-0e71aac9b6cc", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 87.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 128.0, "review_title_stringindexer_transform": 20.0, "review_description_stringindexer_transform": 190.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 267.0, "uniq_id_stringindexer_transform": 21.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "91", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Maximus", "review_title": "Awesome Features!", "review_description": "I purchased this OLED over a week ago along with the Vizio Elevate Soundbar for my new Xbox Series X. I truly appreciate the picture quality experience that this TV can offer. The performance of this TV and Soundbar surely surpass its price point. I strongly recommend this TV for anyone that wants the best performance for the money. I will dare to say that based on my research, this TV will absolutely rival other brands at much more expensive price points.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228509090", "uniq_id": "7b762f11-3f30-5648-898e-b365a7eaedd8", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 467.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 362.0, "review_title_stringindexer_transform": 61.0, "review_description_stringindexer_transform": 338.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 304.0, "uniq_id_stringindexer_transform": 316.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "92", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Pat23", "review_title": "Buggy like no tomorrow", "review_description": "I had purchased this knowing it was going to not be perfect but omg. I had to go in and change my ps4 setting for video to even use the menu settings at all. I also cannot use netflix, it won't open from smartcast but when I press the button on the remote it freezes the whole tv on a black screen. This is a serious deal breaking bug.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228499139", "uniq_id": "df5e5870-c422-5585-9dbd-2f01e48ee872", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 404.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 129.0, "review_title_stringindexer_transform": 176.0, "review_description_stringindexer_transform": 283.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 260.0, "uniq_id_stringindexer_transform": 86.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "93", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "woodbine23", "review_title": "Excellent product", "review_description": "I purchased this a week ago and so far so good it's to early to make a define decision.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228478134", "uniq_id": "b9a43399-3aea-58dc-b1c2-96e5bab6e7f4", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 20.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 195.0, "review_title_stringindexer_transform": 20.0, "review_description_stringindexer_transform": 224.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 318.0, "uniq_id_stringindexer_transform": 22.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "94", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Rajib", "review_title": "Almost but not quite", "review_description": "I wanted to buy this for long but I am a bit disappointed. I guess my expectations were high but not really sky high.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 165.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 15.0, "review_title_stringindexer_transform": 290.0, "review_description_stringindexer_transform": 76.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Pros:", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 363.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "1. The picture is absolutely gorgeous and you can tune it further to your choice.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 309.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "2. The Smartcast interface is decent.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 332.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "3. The remote is also not bad at all.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 158.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "4. Very quick to connect apple play. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 364.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "5. There are ample connection options for my bedroom", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 204.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Cons:", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 107.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "1. Cast is buggy. I can never get it to run first time. This is where I would focus most of the development time if I were Vizio.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 181.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "2. Smart Cast does not have a browser app that is accessible easily.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 119.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "3. There is no easy way to add more apps that are not already in the Vizio library.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 195.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "4. The detail picture quality will not go up to the level you get out of a top line OLED. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 420.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "5. The bezel is still not near zero bezel size. It is sizable to be noticeable.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 3.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Overall", "name": " for the price it is a good deal.\"", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "0", "review_title": "0", "review_description": "11 months ago", "recommended_review": "4", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "228476168", "reviewed_at": "cec7afe6-497f-5ac5-a9c8-b1ca19d4a4b0", "rating": "16/01/2022 16:17:58", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 0.0, "name_stringindexer_transform": 25.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 226.0, "recommended_review_stringindexer_transform": 5.0, "verifed_purchaser_stringindexer_transform": 4.0, "helpful_count_stringindexer_transform": 4.0, "not_helpful_count_stringindexer_transform": 26.0, "reviewed_at_stringindexer_transform": 43.0, "rating_stringindexer_transform": 12.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "95", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "zachR", "review_title": "Great Clarity, Very Very buggy software.", "review_description": "The Best: The TV offers great contrast and clarity. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 317.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 123.0, "review_description_stringindexer_transform": 388.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The Good: Smart casting features. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 5.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The Bad: Pre-calibrations could improve", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 305.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "THE UGLY: Very Very buggy software. Doesn't start a lot of times and have to re-plug many times. Brings me Anxiety.\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "11 months ago", "review_description": "4", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "228459804", "not_helpful_count": "c0fef563-2deb-5c01-acc6-9db6c6fa8368", "reviewed_at": "16/01/2022 16:17:58", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 295.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 9.0, "review_description_stringindexer_transform": 2.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 12.0, "not_helpful_count_stringindexer_transform": 14.0, "reviewed_at_stringindexer_transform": 10.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "96", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "KristovM", "review_title": "Gorgeous screen with a few quirks", "review_description": "This screen is a beauty. Very sharp, good colors and decent brightness. I hook it up to my PC for gaming and occasionally have some quirks. In the middle of a game it says no signal detected and shuts off. Sometimes it isn't detected by the PC. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 307.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 153.0, "review_title_stringindexer_transform": 296.0, "review_description_stringindexer_transform": 367.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "A few quirks with the PS5 too. Sometimes when I power on the TV it also turns on the PS5. Sometimes when I power on the PS5 the TV turns on too. Neither seems to be consistent. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 248.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Needs and HBO Max app. Also needs to be able to disable inputs from the list like in previous Vizio models. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 63.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "All minor issues and possibly handled via software or firmware updates. The hardware is solid though.\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "11 months ago", "review_description": "4", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "228397838", "not_helpful_count": "15bc27e2-a5ad-5a18-b47e-5f4cd100907c", "reviewed_at": "16/01/2022 16:17:58", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 212.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 9.0, "review_description_stringindexer_transform": 2.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 19.0, "not_helpful_count_stringindexer_transform": 17.0, "reviewed_at_stringindexer_transform": 10.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "97", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "goobs150", "review_title": "Vizio OLED TV", "review_description": "I bought this 2 weeks ago and has a great picture. It is good for gaming on the xbox series one. The only issue is the VRR does not work and has a distorted picture when I enable it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228397787", "uniq_id": "e3d25147-7e31-5ade-b955-8c6c07276063", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 427.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 180.0, "review_title_stringindexer_transform": 136.0, "review_description_stringindexer_transform": 107.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 109.0, "uniq_id_stringindexer_transform": 222.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "98", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "sftaylor614", "review_title": "Love / Hate Relationship", "review_description": "I love the pristine picture, with saturated accurate colors. However, I absolutely hate not being able to turn off the fluctuating luminance. The only thing that spoils a great review is the brightness that changes with how dark the screen is to increase contrast. The TV does not need it, and if I knew who the engineer was that omitted the off selection for this annoyance, I would offer him a Vizio necklace.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228341387", "uniq_id": "37ab8cbb-cbe6-5514-bb5a-3223ae898d16", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 6.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 220.0, "review_title_stringindexer_transform": 174.0, "review_description_stringindexer_transform": 239.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 347.0, "uniq_id_stringindexer_transform": 259.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "99", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Johnboi781", "review_title": "Excellent tv great picture", "review_description": "The only issue I have is. I own both ps5 and xbox series x and if I use hdmi ports 2 and 3 4k 120hz I have to unplug the tv every time I turn the tv on I worked around this by using ports 1 and 4 so I'm stuck at 4k 60hz on both consoles unless I want to constantly unplug the tv for it to work but over all I love the oled tv and you have to get a polarized power cable because vizio gives you a non polarized power cable that does not fit the TV power port", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228321620", "uniq_id": "156a2f4b-a3ee-5a50-8bf2-f2311c908491", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 157.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 179.0, "review_title_stringindexer_transform": 173.0, "review_description_stringindexer_transform": 413.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 384.0, "uniq_id_stringindexer_transform": 130.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "100", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Harbinger86", "review_title": "Love it", "review_description": "Great item and excellent condition. Works awesome!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191464723", "uniq_id": "3da6f23f-4693-549c-9b9f-0faa66b56124", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 57.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 293.0, "review_title_stringindexer_transform": 28.0, "review_description_stringindexer_transform": 14.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 352.0, "uniq_id_stringindexer_transform": 301.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "101", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Incredible controller!", "review_description": "Very cool design, feels great and comfortable in my hands.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191463669", "uniq_id": "66f84845-97c8-5cca-8bf1-4cc4cdfceead", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 412.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 226.0, "review_description_stringindexer_transform": 78.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 345.0, "uniq_id_stringindexer_transform": 140.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "102", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Halo Infinite Elite Series 2 Controller", "review_description": "This Halo Infinite Elite Series 2 controller is so awesome with the Halo theme on it, it's beautiful.  Being able to customize the controller to my liking ranging from the controller sticks, d-pad, and how short you want your trigger throw is freaking amazing compared to a normal controller.  Only con is that it's expensive, but once you open up the whole package and unboxing experience it is well worth the price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "28", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191462968", "uniq_id": "8a38edf4-1d13-54d2-a32c-f98303cbd0ac", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 304.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 140.0, "review_description_stringindexer_transform": 379.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 32.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 353.0, "uniq_id_stringindexer_transform": 334.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "103", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "King TJ 09", "review_title": "Halo lovers & competitive players dream", "review_description": "Packaging was 5 stars alone but the feel and customizability of the control and the design made it over the top and it came with the full game download", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191459315", "uniq_id": "b25ea776-319f-5907-bb36-8330e0b9e736", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 187.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 25.0, "review_title_stringindexer_transform": 370.0, "review_description_stringindexer_transform": 59.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 279.0, "uniq_id_stringindexer_transform": 345.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "104", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Biobroly24", "review_title": "Xbox elite series 2", "review_description": "Love this controller glad GameStop pro was lookin out and it came in a decent time", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191448343", "uniq_id": "b7379f49-dc90-56f4-8823-769c4832168b", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 85.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 250.0, "review_title_stringindexer_transform": 139.0, "review_description_stringindexer_transform": 16.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 79.0, "uniq_id_stringindexer_transform": 333.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "105", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Microsoft Elite 2 Pro Controller Halo Edition", "review_description": "The Microsoft Elite 2 Pro Controller is perfect for the console gamer of any level. The fact that it\u2019s the Halo Edition makes it that much better! I love the controller and I\u2019m glad they came out with this limited edition.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191443448", "uniq_id": "92468c29-d5fb-59dc-a142-1e67d15d1ee1", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 449.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 147.0, "review_description_stringindexer_transform": 313.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 259.0, "uniq_id_stringindexer_transform": 199.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "106", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Beautiful controller", "review_description": "This is a piece of art, amazing!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191440654", "uniq_id": "81bfcb3b-43a9-55da-84ca-2712183f9869", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 258.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 153.0, "review_description_stringindexer_transform": 113.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 155.0, "uniq_id_stringindexer_transform": 200.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "107", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Killerxxx08", "review_title": "Amazing!", "review_description": "Very well design and heavy feeling, it truly makes you feel like you have a better-quality controller compared to the regular Xbox Series X controller. Would recommend to any gamer specially Halo fan!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439900", "uniq_id": "77925e75-8d4b-5970-9020-ddd3517955c7", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 146.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 174.0, "review_title_stringindexer_transform": 7.0, "review_description_stringindexer_transform": 309.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 75.0, "uniq_id_stringindexer_transform": 148.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "108", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Parker86", "review_title": "Worth every penny.", "review_description": "This was my first elite controller and I love it, it\u2019s definitely a game changer and looks beautiful.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439828", "uniq_id": "22f370a8-e30f-5cea-9d38-0d7b9da2fd0b", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 244.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 371.0, "review_title_stringindexer_transform": 260.0, "review_description_stringindexer_transform": 371.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 327.0, "uniq_id_stringindexer_transform": 195.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "109", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "It's alright", "review_description": "The controller is great but I am experiencing stick drift just two days after receiving it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439957", "uniq_id": "3c5e7a8f-7138-5143-a3dd-81d9f2bf87e6", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 350.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 51.0, "review_description_stringindexer_transform": 230.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 379.0, "uniq_id_stringindexer_transform": 292.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "110", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "PUGLOVERRG", "review_title": "Yoshi's Crafted World", "review_description": "Awesome, love this character! Love the whole game!!!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127291762", "uniq_id": "77005922-343e-5afd-8604-de6116cb0a81", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 77.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 253.0, "review_title_stringindexer_transform": 6.0, "review_description_stringindexer_transform": 254.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 177.0, "uniq_id_stringindexer_transform": 241.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "111", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Kamna", "review_title": "Easy to pick up, hard to master", "review_description": "Excellent for a relaxing time. Can be challenging if you want to %100 every level.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127286343", "uniq_id": "ead016dd-471c-550c-8335-e80ade7ecbb9", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 303.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 398.0, "review_title_stringindexer_transform": 108.0, "review_description_stringindexer_transform": 165.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 134.0, "uniq_id_stringindexer_transform": 318.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "112", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Natees", "review_title": "Fun new twist on a Yoshi", "review_description": "Fun and exciting game if you like Yoshi and his classic games", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127272761", "uniq_id": "3f2ea70f-6737-57b4-bbff-c6b5af771f90", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 188.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 289.0, "review_title_stringindexer_transform": 252.0, "review_description_stringindexer_transform": 82.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 66.0, "uniq_id_stringindexer_transform": 78.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "113", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Nate Corneliusen", "review_title": "Yoshi's Crafted World", "review_description": "The game is adorable, the music isn't ear-splitting, and the levels themselves are fun. However, it ends up becoming a chore if you intend to 100% the game with multiple scavenger hunts per stage with a flip-side that is dedicated to finding three dogs under a certain amount of time for the full reward. Ultimately, it's cute and full of heart, but is not recommended to just sit down and 100% in one sitting. It's quick, easy fun enjoyable in small bursts either alone or with a friend.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127262343", "uniq_id": "14829c73-4cad-510d-9d51-01ef577acadf", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 7.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 213.0, "review_title_stringindexer_transform": 6.0, "review_description_stringindexer_transform": 111.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 82.0, "uniq_id_stringindexer_transform": 144.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "114", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Racheljay11", "review_title": "It\u2019s okay", "review_description": "I\u2019m not a big gamer. I was so excited when this came out I had to get it. I guess I just expected more", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127260250", "uniq_id": "fe7a0330-a5dd-530e-9497-80d37d07253b", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 432.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 207.0, "review_title_stringindexer_transform": 133.0, "review_description_stringindexer_transform": 368.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 370.0, "uniq_id_stringindexer_transform": 155.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "115", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "D3vonator", "review_title": "A Unique 3D Adventure that's hard to resist", "review_description": "Nostalgically entertaining and unique 3D adventure that will make it hard for you to put the controller down", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127259475", "uniq_id": "e59c376b-a912-50c5-9d04-8f7f3e7a6d45", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 342.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 252.0, "review_title_stringindexer_transform": 335.0, "review_description_stringindexer_transform": 343.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 193.0, "uniq_id_stringindexer_transform": 54.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "116", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Vegas momma", "review_title": "Cute Yoshi game", "review_description": "Bought this game for my 12 yr old's birthday.  He really likes to play in multiplayer mode with me.  Definitely fun bonding time!  So far it has been fairly easy to finish each section, without being too easy (working together helps).  I do hope it gets a little harder as we get a little further in.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127254841", "uniq_id": "5104f652-46d7-5b1e-bdf2-55b7f55d4b22", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 218.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 137.0, "review_title_stringindexer_transform": 300.0, "review_description_stringindexer_transform": 210.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 213.0, "uniq_id_stringindexer_transform": 76.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "117", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Henrio", "review_title": "Not bad", "review_description": "Good to see Yoshi on the switch, but it is a slight step down from Yoshi\u2018s woolly world", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127250995", "uniq_id": "780060a5-4afc-5712-9c61-66c3df2f51ff", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 100.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 11.0, "review_title_stringindexer_transform": 12.0, "review_description_stringindexer_transform": 79.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 268.0, "uniq_id_stringindexer_transform": 101.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "118", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jeefly", "review_title": "A wonderful game", "review_description": "Truly amazing. The art style is unique and the gameplay is equally fun as it is relaxing and rewarding.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127250993", "uniq_id": "333d879a-9b72-50d3-a5d7-faa0961846ca", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 396.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 193.0, "review_title_stringindexer_transform": 298.0, "review_description_stringindexer_transform": 41.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 192.0, "uniq_id_stringindexer_transform": 160.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "119", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "BoJackson87", "review_title": "Yoshi", "review_description": "I got this game so me and my gf can play together. Its fun and quirky but gets challenging", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127250112", "uniq_id": "41044c39-03df-5ca0-b0da-9219160fa67b", "scraped_at": "16/01/2022 16:17:58", "index_stringindexer_transform": 489.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 270.0, "review_title_stringindexer_transform": 15.0, "review_description_stringindexer_transform": 84.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 196.0, "uniq_id_stringindexer_transform": 126.0, "scraped_at_stringindexer_transform": 4.0}, {"index": "120", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "tankgod1", "review_title": "Great Game!", "review_description": "Some folks didn't like this game....thought it didn't measure up to the original or Forged Alliance. Boy, are they wrong! I thought this game was great! Maybe the tech tree is a tiny bit smaller, but the game more than makes up for it with new, cool units, great graphics and effects, and awesome explosions. In fairness, I was a little perturbed that that more than one engineer cannot build on the same structure, as in the previous games, but then again, the structures go up pretty quick. Happy hunting!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "4", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "38246272", "uniq_id": "c64a9e38-39cc-50ef-9d30-1eed268a4a24", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 14.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 383.0, "review_title_stringindexer_transform": 16.0, "review_description_stringindexer_transform": 212.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 39.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 368.0, "uniq_id_stringindexer_transform": 376.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "121", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "16nflp", "review_title": "Great game.", "review_description": "Great game. Nothing bad about it. It has many great features and story mode is cool. I think it is awesome.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "23501684", "uniq_id": "8e31a70f-17f9-53d5-9f0f-3b578d7433e8", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 65.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 67.0, "review_title_stringindexer_transform": 318.0, "review_description_stringindexer_transform": 162.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 16.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 359.0, "uniq_id_stringindexer_transform": 145.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "122", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Joey3245", "review_title": "Not as good as it looks", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "5", "reviewed_at": "9 years ago", "rating": "2", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "23367706", "uniq_id": "42674a2c-bab8-5cd9-b2f4-a5b33733beb4", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 300.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 333.0, "review_title_stringindexer_transform": 302.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 6.0, "reviewed_at_stringindexer_transform": 16.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 6.0, "uniq_id_stringindexer_transform": 11.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "123", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "chiknwingding", "review_title": "I don't see how people can't like it", "review_description": "This game, in my opinion, is WAAY better than C&C and is very good in gameplay and everything else. Some people say that he storyline is horrible, but that doesn't really effect me since I just play on the skirmish and online. The story line isn't really a big concern. I just play it when I'm bored.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "5", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "19236943", "uniq_id": "322502c8-f81a-51b5-b3bf-e6e61a83b045", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 134.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 125.0, "review_title_stringindexer_transform": 345.0, "review_description_stringindexer_transform": 375.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 6.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 9.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 52.0, "uniq_id_stringindexer_transform": 62.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "124", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "GeneralM99", "review_title": "Great...but...", "review_description": "The story is extremely slow and confusing until you get later into it. It forces you to play as a certain faction first, then another and end with the Cybrans. You should definitely try out the originals, they are ten times better then this. Overall, the gameplay is about the same as the last game, the graphics are much better and the sound and music is again amazing. However, the story development needs more work.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "19088941", "uniq_id": "c397a7c1-d874-554e-9004-4d7a2422f5d3", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 37.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 372.0, "review_title_stringindexer_transform": 73.0, "review_description_stringindexer_transform": 71.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 9.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 337.0, "uniq_id_stringindexer_transform": 102.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "125", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "fiddlegammer11", "review_title": "look out gamerz, here comez awsome", "review_description": "alright here comes the best game eva, anyway herz a shout out to all of the peeps that think this game is the best eva u rock 4 ur good reviews. anyway the graphics might not be as good as the first but the graphics to me doesn't matter at all since the campaign is awsome and a good storyline. along with the campaign the units and multiplayer maps and experimentals and ect. but i honestly i think the unit count is very low there should be a higher unit count because people have things to do units to make and probably alot of them too and places 4 them to go like in others bases and stuff.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "19030618", "uniq_id": "8e0bfb12-1204-59aa-ae95-fc75ec400ba0", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 406.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 139.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 155.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 9.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 286.0, "uniq_id_stringindexer_transform": 138.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "126", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Commando38", "review_title": "Best RTS game made so far", "review_description": "This game is the absolute best RTS game you can play. And I have played alot of RTS games, so I know what I'm talking about. This game has very good graphics, and they will be even more enjoyable the more you paly the game, considering that you notice things like shadows cast by the terrain, and details such as distortion coming out of a walkers exhaust pipes. This game also has an amazing command system. There are more controls and options you can use to make your army do anything imaginable. This game also includes extra experimental weapons, which they balanced much better than on the first one, and actually have a general purpose rather than to walk into the enemies base and kill. And most people have heard that the nukes on the second ones are pitiful compared to the first. The difference is that on the first one, it was a bright light and smoke covering a large area of the map. On this one, it might be only a little bit smaller, but it is insanely detailed, in the fact that an extremely large portion of the map gets lit up in red, and things are actually moving with the explosion as they would in real life. When it touches water it makes steam and jets it into the air, so nukes on this one are much more enjoyable to watch, regardless of what you've heard. All in all, 10 stars.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "6", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250428", "uniq_id": "c0b37854-ae65-508d-a8d8-05183e6ca822", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 268.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 377.0, "review_title_stringindexer_transform": 36.0, "review_description_stringindexer_transform": 168.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 7.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 365.0, "uniq_id_stringindexer_transform": 219.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "127", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "CoD4 Veteran 13", "review_title": "Awesome", "review_description": "I don't know why people don't like this game, because if you like real-time strategy or RTS, this is the game to get.                                                                                                                                                                                                      I usually only play online and play skirmishes to get better or if no one is as good as me because I can destroy anyone.                                                                                                                                                                                                  I am a veteran at Call of Duty Modern Warfare 1 and 2 so don't try and kill me or fight me.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "2", "not_helpful_count": "11", "reviewed_at": "11 years ago", "rating": "4", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250438", "uniq_id": "8af5ed1a-cca6-5a39-bcf8-bb9c25ec7806", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 235.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 370.0, "review_title_stringindexer_transform": 8.0, "review_description_stringindexer_transform": 407.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 20.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 53.0, "uniq_id_stringindexer_transform": 278.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "128", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "TheGamerGalore", "review_title": "good, but a little disappointed", "review_description": "What Gas Powered Games have done here is amazing, this game is packed with more units, new features, less glitches, and a lot more excitment. what i was really taken with is that there is no +mass or -mass anymore, its all based on real numbers. the tech tree feature is amazing, allowing you to upgrade old units to make them more lethal later in the game. a lot of the good things are still their like the cybran ships being able to crawl onto land. however, the story is disappointing, character extremely lack any sort of personality and emotions. also, for high end computers, this game has surprising lower graphics, units like the UEF titan look a little bit more like legos, even though some units have good deatil, others are flat out bad, although you have to appreciate that they are trying to let computers with lower hardware able to run this game. online play and skirmish mode are fun.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "11 years ago", "rating": "4", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250426", "uniq_id": "c5dd07cc-ca1f-52d8-82df-d13c4e129265", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 62.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 3.0, "review_title_stringindexer_transform": 214.0, "review_description_stringindexer_transform": 159.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 227.0, "uniq_id_stringindexer_transform": 191.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "129", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "agent00aa", "review_title": "SC2? or sometihng completely  different?", "review_description": "\"Supreme Commander 2 is different than it's \"\"predecessors\"\"", "recommended_review": " i say it should just have a completely different name slapped onto it. Then i would of not had any quarrels with it", "verifed_purchaser": " because i wouldn't be expecting something so different than what i knew. Now i own both of the \"\"previous\"\" games and they are both excellent", "helpful_count": " and so when i found out about this \"\"sequel\"\" i ran out and bought it with out much looking into it", "not_helpful_count": " i knew it had a different maker but i figured how bad could they have possibly made it... i mean it's Square Enix! Now don't get me wrong it is a good game", "reviewed_at": " but i was expecting to buy SC2... Not SC2 revamped... i couldn't just jump into it", "rating": " i had to learn the new feel to the game. In SC2 you now get to your good units by having to research most of them", "average_rating": " and experimental units are really not that great", "reviews_count": " yea they are all based of the old games models but i think that most kinda suck comparatively... like the experimental units", "comment_id": " for so called \"\"game breakers\"\" as they were know for in the old games", "uniq_id": " u can make them with very little ease and there not nearly as effective as they use to be.... which i guess is the trade off for it", "scraped_at": " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "index_stringindexer_transform": 439.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 13.0, "review_title_stringindexer_transform": 217.0, "review_description_stringindexer_transform": 45.0, "recommended_review_stringindexer_transform": 17.0, "verifed_purchaser_stringindexer_transform": 12.0, "helpful_count_stringindexer_transform": 16.0, "not_helpful_count_stringindexer_transform": 40.0, "reviewed_at_stringindexer_transform": 38.0, "rating_stringindexer_transform": 10.0, "average_rating_stringindexer_transform": 9.0, "reviews_count_stringindexer_transform": 8.0, "comment_id_stringindexer_transform": 331.0, "uniq_id_stringindexer_transform": 386.0, "scraped_at_stringindexer_transform": 15.0}, {"index": "130", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "jonso", "review_title": "Crafted Family Fun", "review_description": "2 player fun for dad and 10 year old. Replay value is high with extra modes after completion.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127238242", "uniq_id": "928838d7-ee40-5739-a91c-37320381b139", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 429.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 278.0, "review_title_stringindexer_transform": 291.0, "review_description_stringindexer_transform": 117.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 342.0, "uniq_id_stringindexer_transform": 349.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "131", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "KingEdd", "review_title": "He love it", "review_description": "My son been waiting on this game for a long time. But he got it now and he love it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127234219", "uniq_id": "0a0d4148-507a-575b-8ca1-9ce89095fc80", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 478.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 101.0, "review_title_stringindexer_transform": 231.0, "review_description_stringindexer_transform": 302.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 242.0, "uniq_id_stringindexer_transform": 394.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "132", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Ems C", "review_title": "Big replay value", "review_description": "I'm in love with everything from this game and I appreciate the replay value as well. You can go back to a level and find new tasks/goals", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127230795", "uniq_id": "f30f8cd1-56b3-5068-bcd7-d59438a6da70", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 93.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 414.0, "review_title_stringindexer_transform": 132.0, "review_description_stringindexer_transform": 201.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 182.0, "uniq_id_stringindexer_transform": 324.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "133", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Leon81", "review_title": "Retro", "review_description": "Brings back so many memories, I absolutely love this game.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127187464", "uniq_id": "caa8b6bd-4ca5-5ed9-b467-f4fc59e596ff", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 297.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 345.0, "review_title_stringindexer_transform": 95.0, "review_description_stringindexer_transform": 72.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 293.0, "uniq_id_stringindexer_transform": 372.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "134", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Kids love i", "review_title": "Kids love it", "review_description": "It actually looks crafty and there is so much to explore and you can", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 131.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 245.0, "review_title_stringindexer_transform": 52.0, "review_description_stringindexer_transform": 89.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Make", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 112.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Stuff in your house.\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "127185338", "not_helpful_count": "4a650967-e873-5e06-a3d0-81e9530e5a78", "reviewed_at": "16/01/2022 16:17:59", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 178.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 8.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 2.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 3.0, "verifed_purchaser_stringindexer_transform": 3.0, "helpful_count_stringindexer_transform": 33.0, "not_helpful_count_stringindexer_transform": 31.0, "reviewed_at_stringindexer_transform": 37.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "135", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Marshmilo", "review_title": "Yoshi's Crafted World", "review_description": "The cutesy graphics and creative levels definitely added to the child-like wonder and fun of the game. Even the creepier levels were cute, but still gave you goosebumps at the same time.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127183266", "uniq_id": "b6fc226c-c88b-5332-88db-545da41ae9b3", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 61.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 131.0, "review_title_stringindexer_transform": 6.0, "review_description_stringindexer_transform": 169.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 287.0, "uniq_id_stringindexer_transform": 355.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "136", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "makeshift SP", "review_title": "Awesome, Nothing too Over the top", "review_description": "I like the simple creativity, nothing too over the top just very creative. It\u2019s sort of too easy so it\u2019s something to pass time with. Overall a good purchase", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127179492", "uniq_id": "b0620603-ee01-512d-bdfe-b37993ab43ff", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 492.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 280.0, "review_title_stringindexer_transform": 283.0, "review_description_stringindexer_transform": 418.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 181.0, "uniq_id_stringindexer_transform": 73.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "137", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Marc reed", "review_title": "The game", "review_description": "Fun imaginative and challenging at times great deal of replay ability", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127178055", "uniq_id": "41b29280-1727-5bba-ac8a-17e914bd2d00", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 261.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 95.0, "review_title_stringindexer_transform": 358.0, "review_description_stringindexer_transform": 300.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 251.0, "uniq_id_stringindexer_transform": 99.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "138", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Kwoodky", "review_title": "Gotta get it!", "review_description": "Fantastic game! The level designs are inventive and memorable.  I haven't had this much fun with a game since the days of the NES/Genesis!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127177220", "uniq_id": "0efc324a-3a27-5e05-b98d-8cb6cd444775", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 226.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 74.0, "review_title_stringindexer_transform": 78.0, "review_description_stringindexer_transform": 137.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 27.0, "uniq_id_stringindexer_transform": 95.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "139", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Marieleisele", "review_title": "Great fun for everyone.", "review_description": "This game is so much fun.  You can easily run though a level or you can take your time and find all the hidden things.  I love to play it and so does my daughter!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127161458", "uniq_id": "3bfce4cc-4c76-5c78-bc93-d740963116f3", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 90.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 223.0, "review_title_stringindexer_transform": 62.0, "review_description_stringindexer_transform": 153.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 14.0, "uniq_id_stringindexer_transform": 82.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "140", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jb2827", "review_title": "Reasonable pricing, great OLED", "review_description": "I\u2019ve been very hesitant to upgrade to an OLED because I couldn\u2019t justify the cost. But when Vizio jumped into the OLED market, I was very excited. Other brands\u2019 \u201cbudget OLEDs\u201d cut corners, whereas Vizio\u2019s track record with reasonably priced premium TVs is outstanding.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 281.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 378.0, "review_title_stringindexer_transform": 221.0, "review_description_stringindexer_transform": 180.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The important thing you might not first look for in a TV is how black the blacks are", "name": " followed by how light the screen can be without a terrible contrast. This TV fit the bill for both. Also", "brand": " this TV is fully ready for the Max features of the Series X and PS5.", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 283.0, "name_stringindexer_transform": 11.0, "brand_stringindexer_transform": 12.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The only issue I have is the speakers leave a bit to be desired. They\u2019re ok", "name": " but if you want a theater experience", "brand": " buy a sound bar or speakers.\"", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "0", "review_description": "0", "recommended_review": "11 months ago", "verifed_purchaser": "5", "helpful_count": "4.2727", "not_helpful_count": "363", "reviewed_at": "228309057", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "16/01/2022 16:17:59", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 27.0, "name_stringindexer_transform": 35.0, "brand_stringindexer_transform": 10.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 3.0, "recommended_review_stringindexer_transform": 9.0, "verifed_purchaser_stringindexer_transform": 8.0, "helpful_count_stringindexer_transform": 9.0, "not_helpful_count_stringindexer_transform": 9.0, "reviewed_at_stringindexer_transform": 26.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 14.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "141", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TCTV", "review_title": "Very Nice", "review_description": "This is my 3rd Vizio TV. 1st OLED. They are all 5 star products!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228297521", "uniq_id": "b72f7138-db42-5954-9039-1eebfbe44ba6", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 89.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 214.0, "review_title_stringindexer_transform": 351.0, "review_description_stringindexer_transform": 205.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 240.0, "uniq_id_stringindexer_transform": 159.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "142", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Mofa", "review_title": "Awesome picture", "review_description": "Easy to set up, to program, and assemble. Smart TV is very convenient.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228244888", "uniq_id": "750791b6-adfe-5127-aa53-9a502824f996", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 23.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 46.0, "review_title_stringindexer_transform": 259.0, "review_description_stringindexer_transform": 278.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 366.0, "uniq_id_stringindexer_transform": 312.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "143", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Cat711", "review_title": "Great Picture", "review_description": "I bought this TV right before Thanksgiving and have enjoyed it ever since. I wanted a Smart TV and this did not disappoint. I bought a smaller one for my bedroom.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228226690", "uniq_id": "83cdeff3-bf81-5aab-a214-4f778969e26c", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 426.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 364.0, "review_title_stringindexer_transform": 55.0, "review_description_stringindexer_transform": 301.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 356.0, "uniq_id_stringindexer_transform": 314.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "144", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "FXDLS110", "review_title": "Picture is good, the firmware needs improvement", "review_description": "As the title states, the picture is good, as expected. The only downside so far is that there are SERIOUS handshaking issues between this tv and my PS5 console. Sometimes, Ive got a black screen, and must reboot the tv to get the PS5 display to come up. Also, the tv menu will lock you out of several key picture adjustments during PS5 use. With some adjustments to the firmware to fix these issues, this tv would be nearly perfect.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228181572", "uniq_id": "2f8a681e-1bd7-5a6c-a446-4ac731ed373b", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 202.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 17.0, "review_title_stringindexer_transform": 87.0, "review_description_stringindexer_transform": 200.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 276.0, "uniq_id_stringindexer_transform": 122.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "145", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "GASMAN", "review_title": "Really Good TV, I\u2019m not a gamer.", "review_description": "I haven\u2019t had an issue with this television like others. From what I have read, most issues are about gaming compatibility. 4.7 / 10", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228165736", "uniq_id": "ef6ab344-54b7-5244-a7be-81066f12b6ba", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 323.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 106.0, "review_title_stringindexer_transform": 193.0, "review_description_stringindexer_transform": 353.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 210.0, "uniq_id_stringindexer_transform": 271.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "146", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "ectaylo", "review_title": "Great Picture/Horrible Software", "review_description": "Severe Issues with settings. None remain when set, audio passthrough is a nightmare. Motion settings are impossible to turn off for all HDR formats. Doesn't handle 24p content well from anything other than blu-ray source.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "2", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228114419", "uniq_id": "d29dc126-1eca-5ed3-8156-9f4d98d42b09", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 494.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 354.0, "review_title_stringindexer_transform": 297.0, "review_description_stringindexer_transform": 184.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 377.0, "uniq_id_stringindexer_transform": 189.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "147", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Melony", "review_title": "Beautiful picture and great sound!", "review_description": "This is my fourth Vizio tv and they just keep getting better. Bread brand and quality product.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228085186", "uniq_id": "21bbb55e-c631-5317-bbbe-e966c51ddc36", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 25.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 281.0, "review_title_stringindexer_transform": 69.0, "review_description_stringindexer_transform": 21.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 166.0, "uniq_id_stringindexer_transform": 225.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "148", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Slair", "review_title": "Beautiful picture, disappointing software...", "review_description": "I am very pleased with the quality and picture on this TV.  I was disappointed that the streaming software runs at 720p since this is a 4K TV.  I added a 4K Firestick to resolve the issue.  Otherwise I am very happy with the design and function of this TV.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228057468", "uniq_id": "7fc9e390-1992-5327-9a3f-8730d97e32b3", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 234.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 20.0, "review_title_stringindexer_transform": 169.0, "review_description_stringindexer_transform": 181.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 4.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 393.0, "uniq_id_stringindexer_transform": 313.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "149", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "ll1cool1", "review_title": "Great colors sometimes", "review_description": "I bought it about three weeks ago, and sometimes I am impressed with the crisp colors produced. There are times not so much, I  was watching something on Netflix the other day, and all the color except red looked good. The red color was like pigmentated almost as if it were a hole where ever there was red. I also noticed that when streaming sports live action it blurs a lot. I  am not sure that isn't the feed, but it is annoying.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "12 months ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227938540", "uniq_id": "e00ba275-4a07-5d26-b371-4317a039c78c", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 353.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 117.0, "review_title_stringindexer_transform": 188.0, "review_description_stringindexer_transform": 125.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 15.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 115.0, "uniq_id_stringindexer_transform": 154.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "150", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Xbox Halo Elite Series 2 Controller thoughts.", "review_description": "Extremely great controller! It's my first pro controller and I loved it. The design and color make it complete. Had to get used to the paddles on the back, but afterwards it made doing certain things in games easier!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439701", "uniq_id": "e6b35618-1a65-58b4-b82f-91fe5c64d444", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 454.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 30.0, "review_description_stringindexer_transform": 15.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 154.0, "uniq_id_stringindexer_transform": 384.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "151", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Oh so pretty!", "review_description": "Beautiful controller! A must have for any Halo fan!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439022", "uniq_id": "85d2e8a6-54a4-5cfd-85b8-a40628881808", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 315.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 40.0, "review_description_stringindexer_transform": 183.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 317.0, "uniq_id_stringindexer_transform": 363.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "152", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "DK4345", "review_title": "Issues with mine, probably not everyone.", "review_description": "Right joystick jumps and feels stuck sometimes. Paint in that same joystick that is gunmetal is gone and when the stick is rotated you can see the silver beneath. Wish I could have returned, but with how these are gone everywhere I don\u2019t know how I would have gotten another one\u2026", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "2", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191438590", "uniq_id": "de5d066a-fb60-5496-a2af-4708d4867650", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 180.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 89.0, "review_title_stringindexer_transform": 34.0, "review_description_stringindexer_transform": 334.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 46.0, "uniq_id_stringindexer_transform": 302.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "153", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Hothroy", "review_title": "Great Halo Controller", "review_description": "Great design and awesome feel. This controller would be perfect if not for the horrible quality control issue Microsoft has on their controllers. Mine had stock drift, a messed up button, and a bent paddle, so I\u2019m waiting on a replacement. Fingers crossed.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191438462", "uniq_id": "a803b874-c886-57b3-b93b-16a92cb2c4af", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 17.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 382.0, "review_title_stringindexer_transform": 240.0, "review_description_stringindexer_transform": 292.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 246.0, "uniq_id_stringindexer_transform": 129.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "154", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Zanderspike", "review_title": "Finish the fight!", "review_description": "A controller worthy of a spartan you'll never play the same ever again with interchangeable thumbsticks, d-pad and mappable paddles you'll be unstoppable in any engagement.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191438175", "uniq_id": "9d0a0700-633a-5cb9-b33f-88479669ad1c", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 418.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 182.0, "review_title_stringindexer_transform": 202.0, "review_description_stringindexer_transform": 144.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 76.0, "uniq_id_stringindexer_transform": 141.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "155", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "N Zero", "review_title": "Master Chief approves", "review_description": "Happy to add this to the Halo collection! She\u2019s a beauty.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191437894", "uniq_id": "78a38873-09a0-5f5c-8680-56bd3d8182bb", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 164.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 81.0, "review_title_stringindexer_transform": 313.0, "review_description_stringindexer_transform": 399.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 390.0, "uniq_id_stringindexer_transform": 113.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "156", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "daSurge", "review_title": "Love this controller.", "review_description": "Solid feeling controller. Love the design and halo theme of it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191437728", "uniq_id": "0b9eb2b5-8735-5a5c-b3c1-e574976ff59a", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 346.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 240.0, "review_title_stringindexer_transform": 191.0, "review_description_stringindexer_transform": 342.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 354.0, "uniq_id_stringindexer_transform": 151.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "157", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Coolest controller", "review_description": "Multiple parts that can be swapped. Comes with an in game code that gives a weapon charm", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191435985", "uniq_id": "6680ec17-93e7-5d88-be84-252b6dcf4afa", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 493.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 88.0, "review_description_stringindexer_transform": 147.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 190.0, "uniq_id_stringindexer_transform": 192.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "158", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "James0023", "review_title": "Halo Infinite Elite Controller", "review_description": "Best controller ever. Toss a Halo Infinite skin on it makes it that much better. Recommend to anyone.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191434602", "uniq_id": "830e77d9-5c67-518a-a24d-48656e6ec23a", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 22.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 217.0, "review_title_stringindexer_transform": 372.0, "review_description_stringindexer_transform": 280.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 44.0, "uniq_id_stringindexer_transform": 308.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "159", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Adyn Evans", "review_title": "Great once I got the working product.", "review_description": "Thumbstick issues straight out of box. Had to send back to Microsoft to exchange for working one. After that it\u2019s wonderful. More of a quality control issue on Microsoft\u2019s end than gamestops fault, however when I reached out to GameStop about the purchase I was told they didn\u2019t have any to replace it with. Just a general pain in the butt just for me to get a working product that I paid a lot of money for.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191433776", "uniq_id": "9f9fe687-9b39-54dc-a594-be74dc951e9f", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 199.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 169.0, "review_title_stringindexer_transform": 359.0, "review_description_stringindexer_transform": 394.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 184.0, "uniq_id_stringindexer_transform": 291.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "160", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "glumee", "review_title": "Nintendo Just KNOWS Fun!", "review_description": "Typical, classic, Nintendo fun! Challenging? Not very. Enjoyable from beginning to end? Absolutely!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127153348", "uniq_id": "7a0bc368-d016-51c1-a93a-e5255b8818b6", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 394.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 49.0, "review_title_stringindexer_transform": 151.0, "review_description_stringindexer_transform": 328.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 357.0, "uniq_id_stringindexer_transform": 375.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "161", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Azucarmamacita", "review_title": "Yoshis crafter world", "review_description": "Super fun, a lot of challenges and game time. Since I bought it I haven\u2019t put it down.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127152461", "uniq_id": "c68ab9a9-35ca-50e7-8d99-61aa90cc6170", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 490.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 110.0, "review_title_stringindexer_transform": 43.0, "review_description_stringindexer_transform": 318.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 42.0, "uniq_id_stringindexer_transform": 167.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "162", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "dahc", "review_title": "Cute and fun", "review_description": "Not a hard game but a good one to relax and play after work.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127151155", "uniq_id": "3c2570e7-dcf8-5ca5-a2e5-cab3f469a020", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 310.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 73.0, "review_title_stringindexer_transform": 163.0, "review_description_stringindexer_transform": 193.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 225.0, "uniq_id_stringindexer_transform": 137.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "163", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "killer_kenne", "review_title": "Yoshi crushes another one outta the park!!", "review_description": "If you like yoshi, you can\u2019t go wrong here. Game is a masterpiece and provides decent challenges for even the seasoned gamer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127149546", "uniq_id": "eb70dff8-04e8-5a64-a14e-63186d060a0e", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 127.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 136.0, "review_title_stringindexer_transform": 375.0, "review_description_stringindexer_transform": 298.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 171.0, "uniq_id_stringindexer_transform": 25.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "164", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JustWill1982", "review_title": "More Yoshi fun.", "review_description": "More whimsical Yoshi fun that innovates on the last game without changing what we know and love.  A bit easy but still fun & heartwarming.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127147505", "uniq_id": "70075879-a707-5623-93eb-21a98adec3ff", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 47.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 392.0, "review_title_stringindexer_transform": 322.0, "review_description_stringindexer_transform": 195.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 380.0, "uniq_id_stringindexer_transform": 196.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "165", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Theraven16", "review_title": "Yoshi\u2019s Crafted World", "review_description": "Fun game, but too short.  Beat the game after only three days of casual play.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127144002", "uniq_id": "b2f4b512-cb05-54e0-8cdc-5513f11da130", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 401.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 323.0, "review_title_stringindexer_transform": 17.0, "review_description_stringindexer_transform": 412.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 187.0, "uniq_id_stringindexer_transform": 344.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "166", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Penutt2", "review_title": "Great Game!", "review_description": "Yoshi\u2019s Crafted World is fun and a bit challenging.  My 10-year-old loves it and I can play it with him.  Yoshi!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127140095", "uniq_id": "ca9738d7-fa47-5310-94c9-9abdf85f4aec", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 144.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 408.0, "review_title_stringindexer_transform": 16.0, "review_description_stringindexer_transform": 336.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 20.0, "uniq_id_stringindexer_transform": 228.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "167", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "TheMonty", "review_title": "Beautiful game but a bit overpriced.", "review_description": "Really adorable game with an imaginative landscape. This game is cute and colorful and fun for all ages. Collectibles could be a little more satisfying however, it doesn\u2019t ruin the game. Developers did a great job but the game should be priced about $20 lower.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127137390", "uniq_id": "7cdfe34c-abaf-5aef-9de4-e655f148a573", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 378.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 357.0, "review_title_stringindexer_transform": 349.0, "review_description_stringindexer_transform": 377.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 205.0, "uniq_id_stringindexer_transform": 223.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "168", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Drdrums", "review_title": "Don\u2019t miss this if you like platformers!", "review_description": "A fun platformer with charming visuals, interesting puzzles, and a good level of difficulty!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127131702", "uniq_id": "92c805bc-a7f5-5195-a86c-1bae32b5992c", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 448.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 258.0, "review_title_stringindexer_transform": 386.0, "review_description_stringindexer_transform": 395.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 256.0, "uniq_id_stringindexer_transform": 244.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "169", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Midwestmikey", "review_title": "Great game for kids and adults", "review_description": "An extremely fun game not only for my little sister but for me too! Easy enough for her to enjoy but it has some challenges that allows me to have fun as well.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127130838", "uniq_id": "342a7542-8347-5f47-a2a1-3210f50a807f", "scraped_at": "16/01/2022 16:17:59", "index_stringindexer_transform": 13.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 86.0, "review_title_stringindexer_transform": 121.0, "review_description_stringindexer_transform": 333.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 361.0, "uniq_id_stringindexer_transform": 72.0, "scraped_at_stringindexer_transform": 3.0}, {"index": "170", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Chrissy in ny", "review_title": "Oled 55in TV", "review_description": "Oled makes a big difference in the sharpness of the picture and it can be watched from an angle.  Very happy with my new TV", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "12 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227875021", "uniq_id": "7c0656aa-e5d5-5531-a479-c2da27eda948", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 48.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 262.0, "review_title_stringindexer_transform": 124.0, "review_description_stringindexer_transform": 28.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 15.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 147.0, "uniq_id_stringindexer_transform": 152.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "171", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Vman", "review_title": "Blown Away!!!!", "review_description": "\"I bought the 55\"\" for the bedroom and at this price you cant find a better Oled. Im was a Sony guy but now I dont have to pay the premium to be lol. Finally a company that is challenging the big dogs and winning!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 399.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 112.0, "review_title_stringindexer_transform": 177.0, "review_description_stringindexer_transform": 270.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The picture is beyond amazing!! OS is smooth and video games look so darn good! Im buying the 65\"\" for the front room next week!\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "5", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "227806298", "not_helpful_count": "c35409b8-9e25-5996-88e8-e3f1aa9e8065", "reviewed_at": "16/01/2022 16:18:00", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 219.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 5.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 17.0, "not_helpful_count_stringindexer_transform": 19.0, "reviewed_at_stringindexer_transform": 13.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "172", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "T. Lawson", "review_title": "Awesome picture, firmware need work", "review_description": "I realize Visio is new to OLED and this is their first go at them .., that being said, this tv has potential and I knew saving money over LG would come with some growing pains. I\u2019ve experienced several anomalies that required a power cycle to correct. Some of those issues were sound no video on all inputs (including OTA & web channels), syncing with true 120fps 4K sources. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 470.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 58.0, "review_title_stringindexer_transform": 165.0, "review_description_stringindexer_transform": 69.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "I\u2019d love to be able to recommend merely because of the picture and viewing angles alone", "name": " truth is because of the issues at present with the firmware", "brand": " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", "sku": "No: I don\u2019t recommend this product", "reviewer_name": "zachR", "review_title": "0", "review_description": "0", "recommended_review": "1 year ago", "verifed_purchaser": "3", "helpful_count": "4.2727", "not_helpful_count": "363", "reviewed_at": "227799226", "rating": "538c1919-dad5-54d8-89b1-619b8c7656e3", "average_rating": "16/01/2022 16:18:00", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 111.0, "name_stringindexer_transform": 16.0, "brand_stringindexer_transform": 14.0, "sku_stringindexer_transform": 10.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 3.0, "recommended_review_stringindexer_transform": 19.0, "verifed_purchaser_stringindexer_transform": 13.0, "helpful_count_stringindexer_transform": 9.0, "not_helpful_count_stringindexer_transform": 9.0, "reviewed_at_stringindexer_transform": 40.0, "rating_stringindexer_transform": 14.0, "average_rating_stringindexer_transform": 13.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "173", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "deshon", "review_title": "OK Updates would make it better", "review_description": "Some features are missing and broken but when it works its great!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227791669", "uniq_id": "6344ef26-f49a-5fe7-adf8-f78f0291da78", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 284.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 171.0, "review_title_stringindexer_transform": 113.0, "review_description_stringindexer_transform": 406.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 137.0, "uniq_id_stringindexer_transform": 132.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "174", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "MPock", "review_title": "Excellent Oled", "review_description": "I\u2019ve had this tv for almost 2 months and completely happy with the performance and picture", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227778090", "uniq_id": "9d8c6279-b9ad-5934-8270-e45b1a2514a7", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 136.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 94.0, "review_title_stringindexer_transform": 224.0, "review_description_stringindexer_transform": 185.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 264.0, "uniq_id_stringindexer_transform": 226.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "175", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "DaBurghLover", "review_title": "Super crisp picture quality", "review_description": "I\u2019m happy that I made this choice. I sincerely hope this product lasts more than 15 - 20 years", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227771273", "uniq_id": "bb1ba1ea-fdb3-5210-a1f0-c5dde357c6c5", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 52.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 385.0, "review_title_stringindexer_transform": 371.0, "review_description_stringindexer_transform": 403.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 62.0, "uniq_id_stringindexer_transform": 12.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "176", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Buck Bull Stallion", "review_title": "Okay", "review_description": "Great picture lack of updates. Need support for 1440p and Vrr 4K 120. Also android fully baked in", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227732223", "uniq_id": "59c37463-7e8e-5dac-b39d-25c12a73e452", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 495.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 299.0, "review_title_stringindexer_transform": 387.0, "review_description_stringindexer_transform": 427.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 54.0, "uniq_id_stringindexer_transform": 230.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "177", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "MrGregory2000", "review_title": "Vizio oled h1", "review_description": "This TV is my first oled.  The picture is breathtaking but the television itself has some problems.  Sometimes the television will not connect to the smart cast. Sometimes the TV will not even power on without having to pull the power plug and plugging it back in. But overall I am happy with this television. We have been promised all these things to be fixed and a future firmware update. Fingers crossed.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227730979", "uniq_id": "4336655c-bf54-5815-8b4c-c7257f8ee373", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 159.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 347.0, "review_title_stringindexer_transform": 31.0, "review_description_stringindexer_transform": 274.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 88.0, "uniq_id_stringindexer_transform": 9.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "178", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "cliff90", "review_title": "World Class Display OLED", "review_description": "I was a bit nervous buying this set being that Vizo just started making OLED's. I can tell you know after I have it in my house. IT IS BEAUTIFUL! I can not believe the qualitly of the picture. I have this set  in my main room and we have a gaming 4k TV on the same wall. Side by side this display makes the other 4k look cheap (btw... the other set is a high end display made for gaming).", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 357.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 28.0, "review_title_stringindexer_transform": 32.0, "review_description_stringindexer_transform": 354.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "I am so glad I gave it a chance!\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "5", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "227721000", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "16/01/2022 16:18:00", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 372.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 5.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 23.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 13.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "179", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Barry1226", "review_title": "Best Picture Ever", "review_description": "so glad I decided to spend more to get the OLED. Picture is the brst.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227715331", "uniq_id": "161d1563-a683-5027-9a7b-226dd83bacc9", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 430.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 332.0, "review_title_stringindexer_transform": 117.0, "review_description_stringindexer_transform": 287.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 58.0, "uniq_id_stringindexer_transform": 357.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "180", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Timbo88", "review_title": "Sticky R thumbstick Resistance.", "review_description": "This is my second series 2 elite controller. The first worked perfectly but this one looked so awesome that I had to have it! The only issue is that the R thumbstick is a little sticky when pushing to the L. No other direction, only the left. It is like there is a bit of resistance I have to push through before it releases and goes to the left. My first elite series 2 controller doesnt have this issue. It hampers FPS games a little, but not terribly. Otherwise a great controller and terrific looking product if your a Halo fan. I'm just a little bummed about the aiming thumbstick being slightly off.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191433462", "uniq_id": "a9ead4c5-5697-5920-8415-47091cdf9b62", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 286.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 409.0, "review_title_stringindexer_transform": 361.0, "review_description_stringindexer_transform": 173.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 129.0, "uniq_id_stringindexer_transform": 92.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "181", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Assassionator", "review_title": "Great controller now a little better", "review_description": "The Elite series 2 was already the best Xbox controller, now has an amazing look.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191432612", "uniq_id": "be7a52a7-154c-5468-83e5-ce5d947f712d", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 91.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 337.0, "review_title_stringindexer_transform": 341.0, "review_description_stringindexer_transform": 43.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 165.0, "uniq_id_stringindexer_transform": 117.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "182", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Brannon M", "review_title": "Y button doesnt work all the time.", "review_description": "controller is awesome. but my Y button doesnt work all the time. its very frustrating.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "1", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191432155", "uniq_id": "ee96d446-bfa0-5374-b74e-a26f96eab46d", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 24.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 313.0, "review_title_stringindexer_transform": 103.0, "review_description_stringindexer_transform": 337.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 117.0, "uniq_id_stringindexer_transform": 186.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "183", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Johnson1720", "review_title": "Xbox Halo Elite 2 Controller", "review_description": "Work as great as the original Series 2 Elite Controller but that Halo detail. It was great to find a code inside that gives you a weapon charm that look exactly like the controller.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191353081", "uniq_id": "79fbee79-80ae-5908-8cda-70f9293e272f", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 422.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 109.0, "review_title_stringindexer_transform": 66.0, "review_description_stringindexer_transform": 297.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 389.0, "uniq_id_stringindexer_transform": 97.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "184", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Halo LE Elite 2", "review_description": "Beautiful controller. If at all possible, why not buy the limited edition controller for a small amount more. Im a huge halo fan, so getting an extra controller in this caliber of beauty was an easy choice for me. Elite controllers are an amazing controller for sure, which is part of why there is too many reasons to get this controller, really.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191322300", "uniq_id": "7e71ba28-f137-5fdd-80ab-d91a69dcd9ad", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 326.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 54.0, "review_description_stringindexer_transform": 48.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 375.0, "uniq_id_stringindexer_transform": 36.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "185", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Disappointeddd", "review_title": "Faulty product with known issues", "review_description": "Like many Elite 2 controllers, this was totally unusable out of the box.  Stick drift was suuuuuuuuuuuuuuuuuuuuuper bad.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "1", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191322155", "uniq_id": "10273c14-150a-59ac-86f3-2040fae23777", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 251.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 366.0, "review_title_stringindexer_transform": 204.0, "review_description_stringindexer_transform": 391.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 136.0, "uniq_id_stringindexer_transform": 305.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "186", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "JLAxxSPARTAN", "review_title": "Xbox Elite Controller Series 2 Halo Edition", "review_description": "Love this controller. The attention to detail is out of this world.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191321523", "uniq_id": "1a5bd81d-12a7-5f67-b456-c557a1b6029b", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 115.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 111.0, "review_title_stringindexer_transform": 388.0, "review_description_stringindexer_transform": 101.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 320.0, "uniq_id_stringindexer_transform": 178.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "187", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Henroc", "review_title": "Elite controller", "review_description": "Great elite controller for a supa halo fan-very stylish too", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191169574", "uniq_id": "ce147da5-c01e-5a86-a357-f8d3ece4a123", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 397.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 29.0, "review_title_stringindexer_transform": 111.0, "review_description_stringindexer_transform": 276.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 111.0, "uniq_id_stringindexer_transform": 35.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "188", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "Halo Elite controller", "review_description": "Very cool and feels really nice and comfortable in hands", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190972289", "uniq_id": "df892d55-bd89-528b-8528-ebb70103f590", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 230.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 338.0, "review_description_stringindexer_transform": 90.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 10.0, "uniq_id_stringindexer_transform": 373.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "189", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Seena", "review_title": "Amazing!!", "review_description": "Its absolutely beautiful! Great controller", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190971178", "uniq_id": "5465f272-2a25-544e-a43e-a137e0899216", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 351.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 218.0, "review_title_stringindexer_transform": 347.0, "review_description_stringindexer_transform": 419.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 148.0, "uniq_id_stringindexer_transform": 66.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "190", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "RandiBeth", "review_title": "Not a good game", "review_description": "I loved Yoshi\u2019s Wooly World, but this game came across as very childish and no real goal that you are trying to reach.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "6", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127127997", "uniq_id": "9603729f-86c8-5e52-a9c4-aea8bc2c705e", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 318.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 78.0, "review_title_stringindexer_transform": 135.0, "review_description_stringindexer_transform": 306.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 4.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 229.0, "uniq_id_stringindexer_transform": 364.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "191", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Elope90", "review_title": "I love it!", "review_description": "There's so much replay value with this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 313.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 288.0, "review_title_stringindexer_transform": 104.0, "review_description_stringindexer_transform": 61.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Going back and forth between each level", "name": " finding every nook and cranny ", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 395.0, "name_stringindexer_transform": 29.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "in between each secret is so satisfying.\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "127127185", "not_helpful_count": "3adeb77d-d51a-53aa-9aa2-3908b384030d", "reviewed_at": "16/01/2022 16:18:00", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 417.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 8.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 2.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 3.0, "verifed_purchaser_stringindexer_transform": 3.0, "helpful_count_stringindexer_transform": 35.0, "not_helpful_count_stringindexer_transform": 33.0, "reviewed_at_stringindexer_transform": 13.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "192", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Cfm1985", "review_title": "Yoshi has never been better.", "review_description": "Awesome game.  Little less challenging but that doesn't take away from the enjoyment of the game.  Highly recommend if your into Yoshi island style games.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127125697", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 174.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 327.0, "review_title_stringindexer_transform": 154.0, "review_description_stringindexer_transform": 426.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 216.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "193", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "BubonicChronic", "review_title": "Easy but fun", "review_description": "Great game but kind of easy compared to Yoshi\u2019s island", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127123561", "uniq_id": "4af31d2f-d9c0-55f4-9083-3945e69aede0", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 15.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 387.0, "review_title_stringindexer_transform": 284.0, "review_description_stringindexer_transform": 80.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 37.0, "uniq_id_stringindexer_transform": 285.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "194", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Buttztallion", "review_title": "A fun single player game", "review_description": "Single player is tons of fun. Nothing sticks out as being bad other than being a little too easy for mature gamers. Co-Op is a jumbled mess of accidentally getting  stuck on people and losing your eggs unpredictably.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127120887", "uniq_id": "7be993e6-155e-5555-998b-cedcee64ef71", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 416.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 246.0, "review_title_stringindexer_transform": 181.0, "review_description_stringindexer_transform": 29.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 217.0, "uniq_id_stringindexer_transform": 32.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "195", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Digmyearth", "review_title": "It do like be so it be good", "review_description": "Pretty fun typical Yoshi game that offers more variety than usual, still not Yoshi\u2019s Island levels but pretty good nonetheless. Worth my money.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127117350", "uniq_id": "60e522b6-7f19-5e3f-8456-548142cd2603", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 343.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 22.0, "review_title_stringindexer_transform": 213.0, "review_description_stringindexer_transform": 35.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 189.0, "uniq_id_stringindexer_transform": 304.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "196", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JackB72", "review_title": "Cute, crafty fun!", "review_description": "Once you get past the cuteness factor of the game, you'll find a very fun gameplay experience. Controls seem very responsive, and the 2 player mode is loads of fun and laughs. Great game to introduce a young child to gaming. A great addition to the Yoshi themed game library.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127029556", "uniq_id": "00a29941-a023-5474-a4bb-3c28f9699a6c", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 210.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 403.0, "review_title_stringindexer_transform": 100.0, "review_description_stringindexer_transform": 227.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 102.0, "uniq_id_stringindexer_transform": 289.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "197", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "RobertKW", "review_title": "Surprisingly fun", "review_description": "I haven't been a huge fan of the series since it is a easier version A Mario title but this game has been surprisingly fun", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127014676", "uniq_id": "bc7017a3-b713-5c27-9b55-944deacc859b", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 102.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 38.0, "review_title_stringindexer_transform": 339.0, "review_description_stringindexer_transform": 421.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 152.0, "uniq_id_stringindexer_transform": 365.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "198", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Angelrose2", "review_title": "You won\u2019t be disappointed if you\u2019re a Yoshi fan!", "review_description": "It\u2019s so cute. I love Yoshi.  This version is built using craft materials and can get quite challenging!  I love how detailed the graphics are! Fun, fun, fun!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127012426", "uniq_id": "11ca20bc-d09d-5da2-9f77-75560a67b0f2", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 386.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 232.0, "review_title_stringindexer_transform": 326.0, "review_description_stringindexer_transform": 258.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 309.0, "uniq_id_stringindexer_transform": 347.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "199", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Noz 37", "review_title": "Great game and fun", "review_description": "Great game and fun but unlocking different types of Yoshi\u2019s with yarn in the last game was a lot better than the costumes concept.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126806434", "uniq_id": "4ca56a88-18eb-5e1a-af3e-f09fb8a295b1", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 198.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 407.0, "review_title_stringindexer_transform": 261.0, "review_description_stringindexer_transform": 100.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 38.0, "uniq_id_stringindexer_transform": 361.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "200", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "AikenAidan", "review_title": "So where is the GAME?", "review_description": "Got my package, installed it and got a STEAM POWERED program that starts itself every time I start my computer [no option to turn that off] and emediately takes me to thier online site with only options to buy games. The was NO GAME on the disk. No information saying that it is an Online game only [no information saying it is even an online game on thier site.] I tried to check out the Forums, registering for thier forum kept takeing me to other sites. These other sites required me to reister. This repedative nonsence went on for 4 diff registration that finnaly returned me to the STEAM forums. Unfortunately I still wasn't allowed to access thier forums.  No tech support, no contact information ,no game.. No reason to even consider getting this product.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "3", "not_helpful_count": "16", "reviewed_at": "11 years ago", "rating": "1", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250427", "uniq_id": "a9aaf6b6-d248-5257-81b4-4261997b6957", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 483.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 229.0, "review_title_stringindexer_transform": 65.0, "review_description_stringindexer_transform": 170.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 5.0, "not_helpful_count_stringindexer_transform": 27.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 55.0, "uniq_id_stringindexer_transform": 157.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "201", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Kyoungblood", "review_title": "This is the WORST SC game peroid!", "review_description": "I own both Supreme Commander and Forged Alliance and find both games superb. When i head there was a Supreme Commander 2 coming out of course I ran right out and got it. I can honestly say this is one of the worst war games period. My reasons include the fact you must unlock a LOT of stuff to even consider playing the quick battles. There's only 6 maps, yes i said 6. The fact you cant even choose what side you want to be on until you unlock the ability, and the WORST part is you cant even see a simple overview of the maps when you are selecting them your basically better off throwing darts at your comp screen to decide what your gonna do rather than actually getting to decide anything at all about the battle ahead. The point I'm making here is don't Waste your money... This game isn't even worth getting if it cost 2.50.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "1", "not_helpful_count": "9", "reviewed_at": "11 years ago", "rating": "1", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250430", "uniq_id": "43d68c51-de66-5084-bb9b-beb70dd04227", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 94.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 146.0, "review_title_stringindexer_transform": 90.0, "review_description_stringindexer_transform": 66.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 21.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 112.0, "uniq_id_stringindexer_transform": 45.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "202", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "TheGamerGalore", "review_title": "dont touch it? i think i will", "review_description": "played it today and i've never played a better RTS. im lovin it every step of the way and although its a little bit more 'cartoonish' than the last one, its still definatly a fun epic story lined game. it beats AoE, UaW, and matches EtW, and C&C. i really love playing it and my slightly old system can handle it perfectly. i was a little disappointed, i though the requirements would be a little higher and i definatly see a decrease in the quality. overall, 8 out of 10. AWESOME game. right now, im a little concerned with the new unit the cybranasourus rex (yeh, i probably spelled that wrong) it seemed a little like an out of place character to be put in the game. its still a pretty cool unit and theres so much more upgrade. the most important is the eco that they had. the last one sucked and was full of glitches. this one is MUCH more stable, its brings the good parts of halo wars and not the sucky parts (because seriously, halo wars sucked) buy NOW", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "5", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "4", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250425", "uniq_id": "74124d14-3a82-5efd-8d25-925413486048", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 246.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 3.0, "review_title_stringindexer_transform": 362.0, "review_description_stringindexer_transform": 401.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 6.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 101.0, "uniq_id_stringindexer_transform": 360.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "203", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "SumoSpike", "review_title": "Another Dissapointment of 2010 Gaming", "review_description": "The frist two games of this year that I was waiting for were Supreme Commander 2 and C&C4. Both are god awful. Supreme Commander 2 is missing the best elements and nuances of it's two predecessors. I actually think that TA was the best of them all. Sad that games just get worse and worse as they come out with new titles. What happened to the unit types??!! There is not nearly as many unit types as SC or TA. Plus, what happened to the recycling of plants and rocks... the environmental resources you could live off until you got your resource production up and running? And why are there so few multiplayer maps?  I have an idea. Take the Total Annihilation engine, give it some new graphics,new sound, a new story line and new unit types... and don't change anything else...", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "2", "not_helpful_count": "3", "reviewed_at": "11 years ago", "rating": "2", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250424", "uniq_id": "65a5e017-1707-51de-9fa4-f01bd77a9e1c", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 336.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 63.0, "review_title_stringindexer_transform": 216.0, "review_description_stringindexer_transform": 63.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 7.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 194.0, "uniq_id_stringindexer_transform": 27.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "204", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Deathsprophet", "review_title": "Sorry I'm having a hard time speaking its so Awesome!!", "review_description": "Don't know what the other guys here are talking about, the game is great, ya sure they took out some of the things the sup com pros loved, but the thing is, more people want to play RTS so you can't expect a newbie to grasp every concept of the game, unlike the pros. If they left some of the things from the old sup com in, it would be so unbalanced it wouldn't been as fun to play for the newbies.  Alright so lets get down to buisness, the storyline is great and the graphics blow sup com 1's out of the water, while supporting older computers that don't have as good of processors or graphics card. Win, Win situation. At least thats what I think, and that is why you're here isn't it ??   They added a new research screen to simplify it and added a whole bunch of new features like building add ons and new experimentals. FYI to all aion illuminate fans, they don't have naval anymore. I know, ouch right? Well I think we'll live.  On to sound. They did a really good job with the music this time, its about 10 times better than sup com 1 and the sound effects really match up and exceed what you think they will sound like, when lets say someone gets blown up by a nuke or someones commander goes into meltdown.  For all those hard core gamers out there, the 10 hour battles have gone away, I know, sad right? Well they replaced with a shorter even fiercer model of online game play, that really seems to fit, and when I mean shorter, I mean average of two hours. You can still build those big armies just faster. One thing I wanna finish up with is the Interface. They kept a lot of the interface from sup com 1 and FA, but also added the research screen which I talked about earlier. It works like this: You need research points to buy any sort of research upgrades and those research points automatically come along, but you can build research facilities that increase the speed at which you get them. You can spend research points on things like, personal shields for your units, or new buildings, sight upgrades, radar upgrades, and new schematics for buildings and units. Big FYI for all those 360 gamers lookin at this. The 360 version of this game is just as good if not better than the PC version.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "3", "not_helpful_count": "1", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250437", "uniq_id": "a6daf2c6-b2e0-56b6-942a-20ec613b3e8c", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 455.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 115.0, "review_title_stringindexer_transform": 280.0, "review_description_stringindexer_transform": 91.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 5.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 363.0, "uniq_id_stringindexer_transform": 29.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "205", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Bumzab", "review_title": "Do not touch this game with a 10-foot pole", "review_description": "\"Make no mistake - this IS Supreme Commander Lite. It almost feels like a very weak demo of SupCom 1, but worse. Even with the new research trees, you'll still end up with no where near the amount of units to choose from that you had with SupCom 1 and its tiers. Yeah, sometimes the tiers were annoying to work through and it took far too long in most instances to get anywhere close to maximizing your faction's potential in a single match in the first one - but this \"\"sequel\"\" has completely gutted it altogether. You'll likely end up mashing your mouse button or hotkey to churn out more of the exact same units.. over... and over... and over again because there's barely anything to choose from for unit diversity. The game requires the Steam client and an internet connection just to play. While it's true that most people these days have an internet connection", "recommended_review": " it's a rather unfortunate decision not only because you're excluding gamers but also because of potential happenstance scenarios. Steam goes down? Sorry", "verifed_purchaser": " you're out of luck. A few years down the road and something else happens(such as one of the companies going out of the business or whatnot) and you can't go back to play it for old times sake? Again", "helpful_count": " out of luck. Move to an area with limited connectivity? Same thing. I wish developers would stop going with this route", "not_helpful_count": " as it's very short-sighted. The graphics are significantly worse than the first one", "reviewed_at": " even on the highest settings. There are ONLY small maps", "rating": " and no larger maps to choose from. In the first version you had a large selection of maps", "average_rating": " in SupCom2 there are around 10-15", "reviews_count": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "comment_id": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "uniq_id": " don't make the same mistake I did. Do not buy this game.\"", "scraped_at": "No: I don\u2019t recommend this product", "index_stringindexer_transform": 1.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 203.0, "review_title_stringindexer_transform": 190.0, "review_description_stringindexer_transform": 422.0, "recommended_review_stringindexer_transform": 16.0, "verifed_purchaser_stringindexer_transform": 16.0, "helpful_count_stringindexer_transform": 27.0, "not_helpful_count_stringindexer_transform": 13.0, "reviewed_at_stringindexer_transform": 44.0, "rating_stringindexer_transform": 15.0, "average_rating_stringindexer_transform": 11.0, "reviews_count_stringindexer_transform": 7.0, "comment_id_stringindexer_transform": 312.0, "uniq_id_stringindexer_transform": 20.0, "scraped_at_stringindexer_transform": 13.0}, {"index": "206", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "nonxaznxboi", "review_title": "Tons of fun", "review_description": "If you like multiplayer or lan-parties add this on to the list because you get a lot of fun in that little box! There are many nay-sayers but i really don't know what the heck they are talking about. Graphics are great, simple neat menu, intense tug-of-war games because its hard to dominate players that are sneaky!... It runs great on both my desktops and even my laptop! So if you have a decent machine you can easily run this game because its not demanding at all. Very fun to play against you friends and the online is pretty intense. Single player story is good and easy to get into because you dont need to have played the originals to understand whats going on or anything. As of right now you can save $** if you buy it which makes it even more worth the money. 10/10! pick one up maybe ill play against ya!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250432", "uniq_id": "7d45dc21-cb6d-566e-829c-0b6a8f1fcb9d", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 153.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 226.0, "review_title_stringindexer_transform": 92.0, "review_description_stringindexer_transform": 215.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 198.0, "uniq_id_stringindexer_transform": 206.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "207", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Kerican", "review_title": "SC 2 - mediocre game.", "review_description": "There were so high hopes for this game, as SC 1 and FA had left me hungry for more games like TA, yet unfortunately the wait would lead to disappointment. For those who enjoyed the similarities between TA and SC1 will be the biggest disappointment here. The economy of the previously mention games is utterly gone. No worrying about balancing energy usage and mass income with building and firing weapons, its all been removed. Its now a simple straight up, build up army, build base defenses, go conqueror enemy. Also gone are the tech levels, and weaker starting units, and teching up. Instead its replaced by research points that gradually come in much like all the other resources.  Without that element nothing really stood out in the game. Without the challenging economy, the campaign portion of the game becomes simple, build defenses, build army, repair defenses occasionally, attack enemy. Musically nothing really stood out, there may of been a couple times when I stopped to notice it, but again nothing inspiring. Storyline it also seems kinda lacking, it comes off like a Final Fantasy storyline mashed into brief conversations between 18 missions. There just simply is not enough there to make a great story, which once again left me greatly disappointed. Graphically the game was nice, and the small scale compared to SC1, meant I could actually stay somewhat zoomed in, to actually see the units, and not just commanding by click on the small icons. The movies were decent, just way to few of em to tell a good story. The game controls fairly well, being rather simple game now, its easy to pick up and get right into. Those with SC1 knowledge will have no trouble picking it up, as the mechanics are still basically identical to the first. Those used to Starcraft or C&C type games might take a bit longer but overall its not a hard game to get into or to start playing. The game probably has some strengths in multiplayer, as the unit balance does seem good, but I have not done any of that yet. Overall SC2 is not a bad game, everything seems to work, the game loaded smoothly, the game had no noticle lag, or slowdowns, but there is just nothing in it that simply makes it stand out. The game itself was fun to play through, and I did enjoy the limited story, and I may still by the sequel when it comes out (of course the ending had a cliff hanger for a sequel... what game doesn't do that no a days) yet this probably won't be a game I will touch all to often again now that I have beaten it. My suggestion is wait for the price to drop on this one if you simply want to see the continued storyline from the first, as the game offers very little of anything else to draw players away from other games.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "11 years ago", "rating": "3", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250436", "uniq_id": "fe7d8b34-e569-5186-8dce-57c70a13d88c", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 437.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 56.0, "review_title_stringindexer_transform": 323.0, "review_description_stringindexer_transform": 92.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 266.0, "uniq_id_stringindexer_transform": 69.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "208", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Cycephenom", "review_title": "Way to destroy the best RTS series ever made!", "review_description": "\"First there was Total Annihilation; superb, deep, endless strategy, constantly evolving, hundreds of different units, quick to learn hard to master. Then Supreme Commander and Forged alliance; made Total Annihilation (TA) larger with a better AI, beautiful graphics and much of the same elements that made TA great.  Then Supreme Commander 2; What the hell happened here? You took almost everything that made the first two stand alone and dominate and tossed it out the window. My only guess is you tried to dumb this game down to the likes of a C&C or a Craft game so it could appeal to the zerg boys.... probably thanks to Square's involvement. Really Chris Taylor how much did it cost to convince you to kill your baby?! Graphics went from sci-fi futuristic to cartoonish. Threw out the unique resource allocation and made it a click and buy system with a \"\"Research\"\" resource which is another Craft game move that sucks. Took out almost 60% of the different units in the game an dumbed base creation and defense down to arrow towers CRAFT again!. All the maps appear to be zerg/rush maps. Threw out the tier system... Sheesh I can go on and on but I won't. Bottom line: If you loved what made Total Annihilation and Supreme Commander unique and fun", "recommended_review": " you will hate and loath this game as I did. However if you owned any Craft game or C&C and thought the above mention games were too complex", "verifed_purchaser": " strategic", "helpful_count": " and epic for you", "not_helpful_count": " then give Supreme Commander 2 a try!  You should feel right at home in this slop show.\"", "reviewed_at": "No: I don\u2019t recommend this product", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "0", "reviews_count": "0", "comment_id": "11 years ago", "uniq_id": "1", "scraped_at": "3.4091", "index_stringindexer_transform": 294.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 394.0, "review_title_stringindexer_transform": 319.0, "review_description_stringindexer_transform": 110.0, "recommended_review_stringindexer_transform": 6.0, "verifed_purchaser_stringindexer_transform": 9.0, "helpful_count_stringindexer_transform": 10.0, "not_helpful_count_stringindexer_transform": 11.0, "reviewed_at_stringindexer_transform": 25.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 15.0, "reviews_count_stringindexer_transform": 10.0, "comment_id_stringindexer_transform": 360.0, "uniq_id_stringindexer_transform": 190.0, "scraped_at_stringindexer_transform": 14.0}, {"index": "209", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "DemonWolfC6", "review_title": "Nothing like the first two!", "review_description": "\"Okay, so yeah, it's pretty much like the first two in the basics: the three factions, the basic units (Some of the basic units are straight out of SupCom 1 and Forged Alliance), and one big war. On almost everything else it's completely revamped. Upgrading has been replaced with \"\"Researching\"\"", "recommended_review": " which really adds more hassle to the game", "verifed_purchaser": " but also adds a new era of customization because instead of just going up levels 1", "helpful_count": " 2", "not_helpful_count": " 3", "reviewed_at": " and Experimental", "rating": " you can have multiple branches of different customizations", "average_rating": " depending on your favored style of play. You can even simply upgrade what units you have instead of the old \"\"send oldies to suicide to make room for the new guys\"\" strategy. Actually", "reviews_count": " it is BETTER to keep the oldies instead of suiciding them", "comment_id": " because the longer they stay on the battlefield", "uniq_id": " the deadlier they become thanks to experience now. The much-famed and even moreso whined-about economy that made SupCom 1 and Forged Alliance so famous (or infamous", "scraped_at": " lol) has been DRASTICALLY simplified", "index_stringindexer_transform": 162.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 100.0, "review_title_stringindexer_transform": 227.0, "review_description_stringindexer_transform": 252.0, "recommended_review_stringindexer_transform": 8.0, "verifed_purchaser_stringindexer_transform": 14.0, "helpful_count_stringindexer_transform": 18.0, "not_helpful_count_stringindexer_transform": 36.0, "reviewed_at_stringindexer_transform": 33.0, "rating_stringindexer_transform": 16.0, "average_rating_stringindexer_transform": 8.0, "reviews_count_stringindexer_transform": 11.0, "comment_id_stringindexer_transform": 167.0, "uniq_id_stringindexer_transform": 232.0, "scraped_at_stringindexer_transform": 12.0}, {"index": "210", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Gamerguy", "review_title": "Great picture quality", "review_description": "I bought this to play my ps5 and not only thengames look great but movies too", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227695298", "uniq_id": "6dbed12c-450d-541a-a190-c15f03c40aa6", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 366.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 141.0, "review_title_stringindexer_transform": 369.0, "review_description_stringindexer_transform": 360.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 300.0, "uniq_id_stringindexer_transform": 136.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "211", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Mkaz", "review_title": "Just short of 5", "review_description": "Waiting for the firmware update, then I can update to 5 stars", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227689648", "uniq_id": "ddd95f84-96b2-5c7d-bb7c-53c36e6df414", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 452.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 30.0, "review_title_stringindexer_transform": 281.0, "review_description_stringindexer_transform": 140.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 385.0, "uniq_id_stringindexer_transform": 139.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "212", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "MRDSIGN", "review_title": "Great Value For OLED", "review_description": "\"Great TV with all up to date technology. From Dolby Vision and Atmos, HDR10 + etc... Perfect for gaming HDMI 2.1. I trust in Vizio products I bought a 60\"\" in 2012 and still running (2021).\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227681843", "uniq_id": "c636381d-0229-527d-99a8-bff81d749a13", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 125.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 59.0, "review_title_stringindexer_transform": 50.0, "review_description_stringindexer_transform": 432.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 84.0, "uniq_id_stringindexer_transform": 14.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "213", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Rcmm", "review_title": "Beautiful Thing", "review_description": "I purchased the 65 inch OLED 1 week ago!  The TV is beautiful!  Deep blacks & colors are great right out of the box!  You will have to do nothing to get this TV to look great.  I wish they had offered a 75 inch OLED but I am sure this will come!  Picture processing is good as well!  I recommend this TV to my friends!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227672104", "uniq_id": "4d3e75a4-f345-5e58-bdec-b17eba6b54e8", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 241.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 312.0, "review_title_stringindexer_transform": 79.0, "review_description_stringindexer_transform": 358.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 241.0, "uniq_id_stringindexer_transform": 150.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "214", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Angela W", "review_title": "Incredibly Beautiful Display", "review_description": "I picked this OLED Vizio for the intensely beautiful picture and I have not been disappointed. It's incredible for gaming on my PlayStation, and watching vivid shows.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227658242", "uniq_id": "c434c843-886f-51ac-be66-1444953b1f34", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 333.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 381.0, "review_title_stringindexer_transform": 324.0, "review_description_stringindexer_transform": 123.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 70.0, "uniq_id_stringindexer_transform": 390.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "215", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Shaun7979", "review_title": "To many problems out the box.", "review_description": "Problems turning OLED tv on. So I returned it and got another one.  The screen had a green tint to it so I returned it and got my money back. Plus the VRR didn\u2019t work.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227639598", "uniq_id": "e98cc6f9-fb85-5bc5-8a5f-709d56e7a08a", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 419.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 368.0, "review_title_stringindexer_transform": 74.0, "review_description_stringindexer_transform": 362.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 369.0, "uniq_id_stringindexer_transform": 125.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "216", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Blurr60", "review_title": "Skinny", "review_description": "I love how skinny it is and how much cooler it runs, the picture is awesome!! Gorgeous unit !", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227614951", "uniq_id": "ab190533-6515-5e00-991f-36666c9cb8f4", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 31.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 69.0, "review_title_stringindexer_transform": 44.0, "review_description_stringindexer_transform": 198.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 228.0, "uniq_id_stringindexer_transform": 247.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "217", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Twan", "review_title": "Price to feature king!", "review_description": "Wonderful image, oodles of features and an asking price that\u2019s within  reach of the average consumer, what more Can you ask for.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227582245", "uniq_id": "b69b8ac8-89ff-5e89-9697-52a682ad0e76", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 148.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 248.0, "review_title_stringindexer_transform": 197.0, "review_description_stringindexer_transform": 378.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 86.0, "uniq_id_stringindexer_transform": 284.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "218", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Res136", "review_title": "Great picture", "review_description": "I\u2019ve always liked Visio. My first 50\u201d had one backlight diode burn out after 7yrs heavy use. Replaced with 50\u201d nano Visio. I was happy with the upgrade. Figured I could get a 55\u201d within the space constraint I had. Got this one as open box. And WOW! The picture POPS of vibrancy and consistent brightness.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227560725", "uniq_id": "b707b4b5-8acc-5c69-9279-f1029422274c", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 431.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 353.0, "review_title_stringindexer_transform": 3.0, "review_description_stringindexer_transform": 96.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 33.0, "uniq_id_stringindexer_transform": 272.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "219", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jcompu466", "review_title": "Great video!", "review_description": "I got this TV 3 weeks ago and so far I love it/ easy to operate/ easy to hook up other devices to it //Great TV", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227547589", "uniq_id": "ce132a16-19ad-5dc1-a222-9a18b7751770", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 255.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 9.0, "review_title_stringindexer_transform": 307.0, "review_description_stringindexer_transform": 216.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 164.0, "uniq_id_stringindexer_transform": 234.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "220", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Astraeus", "review_title": "Beautiful", "review_description": "Beautiful controller. I only changed the D-Pad and still calibrating but it is perfect.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190970117", "uniq_id": "51346905-fab9-5ddd-bdc0-a3e78448129b", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 421.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 189.0, "review_title_stringindexer_transform": 175.0, "review_description_stringindexer_transform": 251.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 247.0, "uniq_id_stringindexer_transform": 70.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "221", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "dRn00bies", "review_title": "Solid slaying ordanince", "review_description": "Glorious equipment for slaying all who oppose Spartan 117!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190958407", "uniq_id": "6f4b378a-4b78-5beb-bcc2-2aea05ea730a", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 290.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 314.0, "review_title_stringindexer_transform": 146.0, "review_description_stringindexer_transform": 214.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 13.0, "uniq_id_stringindexer_transform": 23.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "222", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Nicole F", "review_title": "GAME CHANGER.", "review_description": "I got this as a gift for my boyfriends birthday. I don\u2019t play Xbox and I\u2019ve never played halo but I was completely BLOWN AWAY by this controller. It feels amazing I think the way it was designed was incredible and totally worth the money. My bf LOVED it and made me consider becoming an Xbox gamer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190900156", "uniq_id": "15117320-4aa0-5f15-8d9f-44eb7891adfd", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 433.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 51.0, "review_title_stringindexer_transform": 86.0, "review_description_stringindexer_transform": 234.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 355.0, "uniq_id_stringindexer_transform": 65.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "223", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "David Armando", "review_title": "Very Good", "review_description": "This controller is amazing and beautiful I\u2019m glad to have it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190899558", "uniq_id": "7578b6e5-5098-5f49-b320-ee99268986f4", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 29.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 31.0, "review_title_stringindexer_transform": 49.0, "review_description_stringindexer_transform": 376.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 31.0, "uniq_id_stringindexer_transform": 392.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "224", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "spartan19", "review_title": "Weapon of choice for Halo Infinite", "review_description": "Love the elite series 2 controller and with a halo paintjob.... it's almost perfect. I kinda wish this would have included the updated series x/s share button but that's a minor complaint. With the latest xbox update, it's now able to quickly connect to 2 paired devices which is probably the best feature of the updated series x/s controllers so I'm happy with that. If you love Halo and were thinking about getting an elite controller, this is the one you want.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190826055", "uniq_id": "e19bd9fd-6c3b-596b-9014-d6d8e6238e37", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 129.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 376.0, "review_title_stringindexer_transform": 48.0, "review_description_stringindexer_transform": 158.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 159.0, "uniq_id_stringindexer_transform": 338.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "225", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "BxBNicX", "review_title": "Best controller ever", "review_description": "Its similar to the regular elite it just feels lighter quality feels slightly better and it looks so hecking cool in person so many details that the pictures dont do it justice", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190820482", "uniq_id": "31786614-0e1e-5a38-9e27-8f23084e6ee1", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 331.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 167.0, "review_title_stringindexer_transform": 125.0, "review_description_stringindexer_transform": 373.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 153.0, "uniq_id_stringindexer_transform": 317.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "226", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "The name John was taken", "review_title": "Sickest looking Halo Controller Ever", "review_description": "Performs like you expect the Elite Series 2 to do so, but with the added benefit of looking wicked. By far the coolest controller I\u2019ve owned. Hopefully it will keep nice and not develop rub marks from fingers.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190815305", "uniq_id": "3ae8c7e2-1f22-5cd8-9992-6d5f03e37b8b", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 463.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 212.0, "review_title_stringindexer_transform": 29.0, "review_description_stringindexer_transform": 133.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 335.0, "uniq_id_stringindexer_transform": 353.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "227", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Jrjbaj", "review_title": "Solid improvement over the Series 1", "review_description": "I had the series one which still works great, but decided to upgrade for the better paddles and internal battery. I am very pleased with this product not only because its Halo but it does feel like a substantial improvement over the previous generation. I'm still trash though...", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190807964", "uniq_id": "df9c8e11-c20e-5a8b-b090-975550d21a38", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 116.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 126.0, "review_title_stringindexer_transform": 187.0, "review_description_stringindexer_transform": 315.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 15.0, "uniq_id_stringindexer_transform": 194.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "228", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "PetLover62", "review_title": "Halo Fanatic Gift", "review_description": "Great for Halo fanatic.  It weighs a lot more than your standard controller.  Bought as Christmas present for the Halo fanatic.  Splurged on the 2 year warranty just in case too.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190805061", "uniq_id": "9d91f740-ff30-5f49-a9e7-32cf33d739c5", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 222.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 243.0, "review_title_stringindexer_transform": 390.0, "review_description_stringindexer_transform": 355.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 59.0, "uniq_id_stringindexer_transform": 311.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "229", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Gamer Man77", "review_title": "Getting what you want", "review_description": "It\u2019s a great looking controller but without the console to match, it will be lonely. Very hard to pick up the items you want unless you want to pay ridiculous prices from scalpers who seem to get these items with ease. But still a great looking controller.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190803084", "uniq_id": "fed5a40d-6b6a-5212-aab1-7d644fd4c0d0", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 482.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 305.0, "review_title_stringindexer_transform": 272.0, "review_description_stringindexer_transform": 291.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 3.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 245.0, "uniq_id_stringindexer_transform": 332.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "230", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Patrick Giles", "review_title": "Simple game for Beginning Gamers", "review_description": "Pretty simple game, great for younger games, way too many things to have to collect.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126755575", "uniq_id": "017d9f32-3702-5eb4-b1fb-7426864383c7", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 301.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 8.0, "review_title_stringindexer_transform": 350.0, "review_description_stringindexer_transform": 285.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 43.0, "uniq_id_stringindexer_transform": 176.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "231", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Blackfeather666", "review_title": "Yoshi's crafted world", "review_description": "Good game. kinda on the kid side of game, my kids like it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126755116", "uniq_id": "21945403-7c2d-5e53-bdec-30fc9caec384", "scraped_at": "16/01/2022 16:18:00", "index_stringindexer_transform": 183.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 96.0, "review_title_stringindexer_transform": 14.0, "review_description_stringindexer_transform": 253.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 199.0, "uniq_id_stringindexer_transform": 1.0, "scraped_at_stringindexer_transform": 1.0}, {"index": "232", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Dadadum", "review_title": "#1", "review_description": "Game is great for parents to play with their kids.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126754711", "uniq_id": "f9469cbd-8ad3-5f74-9b6d-3aefeaf073c7", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 453.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 384.0, "review_title_stringindexer_transform": 263.0, "review_description_stringindexer_transform": 244.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 281.0, "uniq_id_stringindexer_transform": 329.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "233", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Mr Dingus", "review_title": "Fun!", "review_description": "Very fun! As someone playing through sekiro, this was a nice pallet cleanser.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126754570", "uniq_id": "2c072257-f611-5e72-a1ab-5dc75ef88f59", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 170.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 399.0, "review_title_stringindexer_transform": 22.0, "review_description_stringindexer_transform": 257.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 123.0, "uniq_id_stringindexer_transform": 343.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "234", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "DarkEmpressAly", "review_title": "It's okay, but not the best Yoshi title.", "review_description": "I had an open mind when deciding to play this game and after clearing the first world, it just wasn't for me. Compared to Woolly World, this game was lacking in several departments; the music was repetitive, the skill level was far too low even for just the first world and the game doesn't reward you nearly as much as Woolly World did in terms of amiibo. I'd recommend this for die-hard Yoshi fans or kids age 5 through 9.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126746667", "uniq_id": "1fc8da0f-ab3c-5904-b6d7-e967083ec472", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 259.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 284.0, "review_title_stringindexer_transform": 380.0, "review_description_stringindexer_transform": 262.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 3.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 204.0, "uniq_id_stringindexer_transform": 61.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "235", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "mariofamily", "review_title": "Yoshi\u2019s crafted world", "review_description": "The kids (6 and 3) love it. And I love that they can play together. My 3 year old doesn\u2019t know what she\u2019s doing but my 6 year old helps her. Yoshi\u2019s crafted world game is also fun for parents :)", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126742656", "uniq_id": "3d6378f1-c8fb-53b7-9080-d2429741d858", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 402.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 325.0, "review_title_stringindexer_transform": 200.0, "review_description_stringindexer_transform": 273.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 325.0, "uniq_id_stringindexer_transform": 393.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "236", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "DaddyRay78", "review_title": "Yoshi's Crafted World Review", "review_description": "Simply amazing. My son and I are loving this game. It's so creative and well thought out.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126737441", "uniq_id": "2d87329c-fbd9-571f-981d-46ff995fd728", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 96.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 104.0, "review_title_stringindexer_transform": 301.0, "review_description_stringindexer_transform": 290.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 178.0, "uniq_id_stringindexer_transform": 188.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "237", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Amanda Cooper", "review_title": "Yoshis Crafted World", "review_description": "So much fun! For all ages! We have from age 4 to 34 who love to play.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126736040", "uniq_id": "d9d6ab84-c03e-5838-a724-e49e367d0fdd", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 205.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 215.0, "review_title_stringindexer_transform": 83.0, "review_description_stringindexer_transform": 213.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 141.0, "uniq_id_stringindexer_transform": 267.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "238", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JA II", "review_title": "Great", "review_description": "Bought this game for my son, but i enjoy playing it too.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126678115", "uniq_id": "03ef4326-bd0d-5d6d-8a82-673db2023dca", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 374.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 324.0, "review_title_stringindexer_transform": 131.0, "review_description_stringindexer_transform": 105.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 278.0, "uniq_id_stringindexer_transform": 220.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "239", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "MM213", "review_title": "One of the best games!", "review_description": "My family and I really enjoy using the Nintendo Switch and I must say this is by far one of the best games ever! Super cute yet challenging at times. There\u2019s a gum ball where you can insert coins and collect costumes. There\u2019s also a flip side to the game where you interact and catch little puppies. Just when you think you\u2019ve completely the level there\u2019s other mini challenges like a scavenger hunt. You should purchase this game you won\u2019t regret it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126641084", "uniq_id": "1892e4f2-a10d-5cbe-ae9e-af24f821912b", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 497.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 76.0, "review_title_stringindexer_transform": 304.0, "review_description_stringindexer_transform": 206.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 56.0, "uniq_id_stringindexer_transform": 98.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "240", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Anonymous", "review_title": "A fun RTS", "review_description": "So far I've enjoyed playing SC2. there are a handful of differences between it and its predecessors both good and bad, The battles aren't as big as the ones from Supreme commander, but they are still brilliant, the new research is fun, as well as expanding buildings with tactical add on pieces even if they are minor one's, and the fact you can replace your ACU without permanently losing it now, and the new upgrades for the ACU, and units. Most of the cons I've found so far are, requiring steam, the smaller battlefields, and other minor problems which may be fixed eventually in updates. It lacks the feeling of the original game but its still fun to play I'd recommend to everyone that they try the demo on steam first before deciding. Overall I rate this 7 out of 10.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "4", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250434", "uniq_id": "b773b1a6-5b9a-5f68-9670-3489f0334157", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 446.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 219.0, "review_description_stringindexer_transform": 369.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 34.0, "uniq_id_stringindexer_transform": 224.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "241", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Androl123", "review_title": "Sooooo disapointing", "review_description": "First off, you need to have Steam installed on your computer. Thanks for the heads-up on this Square. You buy a hard copy of the game but then have to log in to Steam to download it from their servers.....really? Some people are showing a 9 hour wait time to be able to play. Again, really? Second, they destroyed the economy and the basic gameplay of the original game and its expansion. None of it even matters any more. Its just a zerg fest. Most people think its due to the console being added to this title and thereby attempting to expand their market. They broke what made the first game such a huge hit. Gone are the days of epic battles for my 3rd point. Maps are now 5kmx5km. WAY too small. Fourth, you can't save/load in skirmish play. Soooo, if you have to leave in the middle of a longer lasting game (not real sure how this will happen being that everything is so small-but want to give them the benefit of the doubt for future content added updates), too bad. Can't save. Fifth, the voice acting and story line for the campaign is just plain stupid. I guess I could go on but I'm sure I've expressed my opinion enough for folks to understand where I'm coming from. This is just insulting to people who have been really looking forward to this title. There was a reason the first game was as much of a success as it was. Well, Square Enix effectively threw that out the window and scrapped it all. Good job.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "2", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250431", "uniq_id": "d0cf2335-6dea-596b-8480-460279c701a9", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 270.0, "name_stringindexer_transform": 5.0, "brand_stringindexer_transform": 5.0, "sku_stringindexer_transform": 4.0, "reviewer_name_stringindexer_transform": 307.0, "review_title_stringindexer_transform": 186.0, "review_description_stringindexer_transform": 116.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 7.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 5.0, "reviews_count_stringindexer_transform": 5.0, "comment_id_stringindexer_transform": 174.0, "uniq_id_stringindexer_transform": 112.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "242", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "RayMel5", "review_title": "Really nice Controller", "review_description": "I haven\u2019t used it yet but the unboxing was amazing. This is a really nice looking controller. It really feels right.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190795136", "uniq_id": "7597e0e9-5e76-5dde-8bf8-327904575e9f", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 143.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 249.0, "review_title_stringindexer_transform": 383.0, "review_description_stringindexer_transform": 177.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 67.0, "uniq_id_stringindexer_transform": 238.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "243", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "VALumiere", "review_title": "The best Xbox Controller for a Halo fan!!!", "review_description": "This controller is GAWGEOUS!!!!! I love the cosmetic design of it, the rubberized grips, the back paddles and the accessories! It comes with it's own wireless charger, interchangeable analog thumb sticks, and D-pad. The design is reflective of Master Chiefs armor. I LOVE IT!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190786135", "uniq_id": "269f8e2e-b3e2-54a2-af5b-504e0de18999", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 462.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 311.0, "review_title_stringindexer_transform": 115.0, "review_description_stringindexer_transform": 383.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 381.0, "uniq_id_stringindexer_transform": 358.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "244", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Mikeiceman", "review_title": "Halo infinite Elite Controller", "review_description": "Amazing controller well worth the money solid feel and looks fantastic i want to buy a second one already", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190783552", "uniq_id": "a2db9996-35e7-58d7-ada1-a48703f0843e", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 132.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 80.0, "review_title_stringindexer_transform": 120.0, "review_description_stringindexer_transform": 44.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 162.0, "uniq_id_stringindexer_transform": 255.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "245", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "PM117ER", "review_title": "Looks pretty - never worked", "review_description": "It came broken\u2026. Stick drift on the right thumb stick right out of the box.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "1", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190766977", "uniq_id": "c61a0a2e-6150-5816-827e-7d7fc7f7f94e", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 316.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 52.0, "review_title_stringindexer_transform": 236.0, "review_description_stringindexer_transform": 87.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 118.0, "uniq_id_stringindexer_transform": 24.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "246", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Patrick w7", "review_title": "Fast shipping. Awesome controller", "review_description": "Quality feel and looks awesome. Also arrived early on the 15th was shipped next day air.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190764517", "uniq_id": "2926a631-7fde-5f98-beff-434285a55c73", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 341.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 388.0, "review_title_stringindexer_transform": 342.0, "review_description_stringindexer_transform": 386.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 89.0, "uniq_id_stringindexer_transform": 381.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "247", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "JakeO62", "review_title": "Exactly what I was looking for", "review_description": "Exactly what I was looking for in a controller and the Halo fan in me loves the Halo theme on the controller", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190762148", "uniq_id": "c89c209b-87b7-51c6-b645-604bd2589c10", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 413.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 276.0, "review_title_stringindexer_transform": 141.0, "review_description_stringindexer_transform": 387.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 226.0, "uniq_id_stringindexer_transform": 180.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "248", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Rambo34", "review_title": "Bumpers", "review_description": "Its good just sucks how the bumpers dont like to work sometimes its vrandnew", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190763953", "uniq_id": "fa3daaef-6785-5e0d-a7a0-53a2605e5a60", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 247.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 202.0, "review_title_stringindexer_transform": 122.0, "review_description_stringindexer_transform": 129.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 156.0, "uniq_id_stringindexer_transform": 5.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "249", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "jws1025", "review_title": "Halo Elite Controller", "review_description": "Beautiful controller (just need the console to go with it). GameStop packaged it well and sent it super fast. It actually arrived prior to release date. Now I just need the console!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190763710", "uniq_id": "6ac96e96-d51b-5c49-8a2a-f21a298a2960", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 337.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 151.0, "review_title_stringindexer_transform": 162.0, "review_description_stringindexer_transform": 138.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 120.0, "uniq_id_stringindexer_transform": 81.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "250", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Mattoxbox", "review_title": "Great controller", "review_description": "Great controller that feels better than the standard ones. Paddles are useful in gameplay and the color scheme is great. You also recieve a code for the controller as an accessort in Halo Infinite.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190763007", "uniq_id": "d433a372-ec33-57de-af65-ddd03d8458ed", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 117.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 132.0, "review_title_stringindexer_transform": 4.0, "review_description_stringindexer_transform": 370.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 197.0, "uniq_id_stringindexer_transform": 256.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "251", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Ellie RA", "review_title": "High quality controller", "review_description": "High quality packaging, nice dock and very long usb-c cord. Even the packaging was superb. Everything was secure to make sure nothing would be damaged in shipping. It is very true to the pictures and works great!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190761169", "uniq_id": "be19f9b0-7d18-50c2-8f4f-d22f83fd1081", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 435.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 287.0, "review_title_stringindexer_transform": 130.0, "review_description_stringindexer_transform": 22.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 215.0, "uniq_id_stringindexer_transform": 90.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "252", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "mdfsandman", "review_title": "Great picture.  easy setup", "review_description": "I had no problems after mounting the TV and the set up was a breeze", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227514155", "uniq_id": "a56d9282-4860-5371-9f05-a9bd99c99914", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 260.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 222.0, "review_title_stringindexer_transform": 264.0, "review_description_stringindexer_transform": 36.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 103.0, "uniq_id_stringindexer_transform": 168.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "253", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "thearchie32", "review_title": "Worth the Money!!!", "review_description": "Had this TV for a month now and it's worth every penny. Don't listen to all the negative you've been hearing about Vizio. They have done a really good job with all their new high end televisions.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227512948", "uniq_id": "58a3cd56-3757-5683-bf5e-043f7dc92826", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 161.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 77.0, "review_title_stringindexer_transform": 367.0, "review_description_stringindexer_transform": 197.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 18.0, "uniq_id_stringindexer_transform": 210.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "254", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "boilerone", "review_title": "Great picture!", "review_description": "I just bought this item and am so excited to watch sports and movies on it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227493289", "uniq_id": "a9fd61c1-57e1-5036-8cf4-01149ac3e34d", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 451.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 54.0, "review_title_stringindexer_transform": 105.0, "review_description_stringindexer_transform": 160.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 17.0, "uniq_id_stringindexer_transform": 213.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "255", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Quando", "review_title": "No Slouch", "review_description": "Compared to the LG CX and Sony A8H the picture quality is way better than Sony's OLED.  THOSE Reviews online are biased and not accurate IMO.  Not a fan of smartcast yet over android TV. TV Has some firmware glitches.  Sound from TV speakers is OK not as nice as the Sony's; however this is a one Heck of An OLED with no black Crush....", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227489183", "uniq_id": "c3f3597b-51a8-5aec-a613-90242e40e8d8", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 154.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 282.0, "review_title_stringindexer_transform": 178.0, "review_description_stringindexer_transform": 93.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 39.0, "uniq_id_stringindexer_transform": 205.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "256", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "None, none", "review_title": "Wonderful Christmas present from the kids", "review_description": "We were looking at one but am the type of people who wi only purchase an item like this when the one we have goes bad. Now the old one will go into the basement.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227489075", "uniq_id": "cec310ca-6de1-5376-8bfb-8be08ffd1b87", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 207.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 156.0, "review_title_stringindexer_transform": 138.0, "review_description_stringindexer_transform": 56.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 382.0, "uniq_id_stringindexer_transform": 116.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "257", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jos\u00e9viera264", "review_title": "look out gamerz, here comez awsome", "review_description": "The best \u201cAmerican product 100% costumer satisfacci\u00f3n  guaranteed", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227469318", "uniq_id": "fe663898-37db-56ab-9d32-c3d52f93b4e5", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 329.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 142.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 293.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 45.0, "uniq_id_stringindexer_transform": 208.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "258", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "The truth", "review_title": "Bad picture", "review_description": "I bought this tv and set it up at home but it was quite obvious to me that the feed I was watching on this tv in the store was optimized for the tv for better picture. At home however, it was grainy and looked like motion flip art like the one you draw and flip through. The tv was so hot I thought I bought a hp laptop.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227466484", "uniq_id": "d95796b1-88cb-5c86-bc22-0bc9db290b2f", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 415.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 99.0, "review_title_stringindexer_transform": 76.0, "review_description_stringindexer_transform": 327.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 144.0, "uniq_id_stringindexer_transform": 294.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "259", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "A-bomb", "review_title": "Amazing TV", "review_description": "This was my wife\u2019s and my anniversary gift to each other. We regularly watch movies, and we are amazed at how the cinematographer\u2019s vision is articulated with this tv.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227455329", "uniq_id": "4a2b7da3-cc8e-59cd-9dc0-ffa2af5d19c6", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 245.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 219.0, "review_title_stringindexer_transform": 328.0, "review_description_stringindexer_transform": 202.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 22.0, "uniq_id_stringindexer_transform": 103.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "260", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "John26", "review_title": "Great features, awesome picture, and easy set up.", "review_description": "I\u2019ve had this TV for about a month of movies and gaming, couldn\u2019t be happier.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227437332", "uniq_id": "0790d8e1-1514-528a-8f1e-1e5dc035db8b", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 359.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 269.0, "review_title_stringindexer_transform": 229.0, "review_description_stringindexer_transform": 47.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 30.0, "uniq_id_stringindexer_transform": 263.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "261", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "dmartinez097", "review_title": "Pristine Image!", "review_description": "The image on the tv is fantastic and the sleek slim design gives it that pop aesthetic that the \u201cworld\u201d within the TVs borders is almost life-like to the touch.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227433603", "uniq_id": "4984011a-1fca-57b5-89a6-e76c780daaf7", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 410.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 118.0, "review_title_stringindexer_transform": 384.0, "review_description_stringindexer_transform": 316.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 48.0, "uniq_id_stringindexer_transform": 52.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "262", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "JPez1", "review_title": "Amazing controller", "review_description": "Great controller! Only wish I had the halo Xbox to go with it", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190758968", "uniq_id": "7ca99b13-422b-5892-a441-b2dd7bf7a000", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 113.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 149.0, "review_title_stringindexer_transform": 23.0, "review_description_stringindexer_transform": 277.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 29.0, "uniq_id_stringindexer_transform": 38.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "263", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Luccon7", "review_title": "Amazing", "review_description": "This is the elite series 2 but they did an excellent job with the halo theme. The best controller with now an awesome new paint job.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190758657", "uniq_id": "f5f793cc-dd08-5247-9ace-2498e78f061d", "scraped_at": "16/01/2022 16:18:01", "index_stringindexer_transform": 206.0, "name_stringindexer_transform": 2.0, "brand_stringindexer_transform": 2.0, "sku_stringindexer_transform": 2.0, "reviewer_name_stringindexer_transform": 233.0, "review_title_stringindexer_transform": 21.0, "review_description_stringindexer_transform": 339.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 3.0, "reviews_count_stringindexer_transform": 3.0, "comment_id_stringindexer_transform": 100.0, "uniq_id_stringindexer_transform": 143.0, "scraped_at_stringindexer_transform": 7.0}, {"index": "264", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "xTheSandman72", "review_title": "Fun game!", "review_description": "Fun game, really nice visuals. It's an easier platform so more people can enjoy it, but seasoned gamers will like the collectables available, which give replay value to the game and a bit more challenge.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126629986", "uniq_id": "d8b5b07f-b13b-58cc-b896-615b9ad105d5", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 327.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 285.0, "review_title_stringindexer_transform": 160.0, "review_description_stringindexer_transform": 233.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 71.0, "uniq_id_stringindexer_transform": 307.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "265", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Doomcrew", "review_title": "Green mean Machine.", "review_description": "One of must fun Nintendo games I've played in a long time.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126619345", "uniq_id": "de0956d4-0d06-55f1-afce-9551324185ce", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 56.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 359.0, "review_title_stringindexer_transform": 126.0, "review_description_stringindexer_transform": 222.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 28.0, "uniq_id_stringindexer_transform": 133.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "266", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Da1trueS4nch3Z", "review_title": "Yoshi is awesome", "review_description": "Nintendo does it again with sweet crisp graphics and my kids love yoshi", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126599299", "uniq_id": "2dc7e561-ee75-5e53-ad76-2859903df7c3", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 368.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 42.0, "review_title_stringindexer_transform": 225.0, "review_description_stringindexer_transform": 50.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 108.0, "uniq_id_stringindexer_transform": 235.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "267", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "NexusWolf", "review_title": "A wonderful addition to the Yoshi game series", "review_description": "If you enjoyed Wooly World, you'll love Crafted world. This game is a great addition to the Yoshi series and adds fun mechanics unique to this game. It does have a 2 player mode and would be fun to play with a less experienced game. Overall presentation is great, control is simple, and platforming is fun. Nintendo game prices hardly comes down, so if price is a factor, pre-owned with PowerUp Rewards discount really helps mitigate the cost, and maybe invest those points. Either way, top notch Yoshi game and a must play for Yoshi fans.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126597316", "uniq_id": "f255781b-e9a0-57c1-a451-7a35a3332573", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 287.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 290.0, "review_title_stringindexer_transform": 373.0, "review_description_stringindexer_transform": 150.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 362.0, "uniq_id_stringindexer_transform": 335.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "268", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "The1stAv3ng3r", "review_title": "Great game", "review_description": "Great fun, reminds me of Yoshi's World from when I was a kid", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126588300", "uniq_id": "aaaaa9b0-6933-56cd-982c-9093972c44ea", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 191.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 150.0, "review_title_stringindexer_transform": 10.0, "review_description_stringindexer_transform": 279.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 40.0, "uniq_id_stringindexer_transform": 42.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "269", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JCMB", "review_title": "Love Yoshi!!", "review_description": "Love the extras each level has. Not a fan of yoshi smash level but in general love the game!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126586642", "uniq_id": "173c87ef-e2a6-5ad3-89a4-432c8c9b8d3b", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 83.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 32.0, "review_title_stringindexer_transform": 170.0, "review_description_stringindexer_transform": 402.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 146.0, "uniq_id_stringindexer_transform": 88.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "270", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "cheeseman585", "review_title": "A Modern Take on Yoshi's Story", "review_description": "This is a proper modern evolution of the Yoshi formula.  Giving you access to the fore- and background when throwing eggs adds an extra dimension of exploration and the collectibles are definitely worth getting.  The flower requirement to progress to new areas is rarely difficult to fulfill, but it emphasizes the collection aspect in a game that gives you a lot of tools to do so and is chock-full of stuff to see.  If you've ever loved playing a platformer, you need to play this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126576266", "uniq_id": "a5a4fa33-a821-53a1-82a9-e28573bb422f", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 224.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 162.0, "review_title_stringindexer_transform": 287.0, "review_description_stringindexer_transform": 256.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 209.0, "uniq_id_stringindexer_transform": 19.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "271", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Sixkids", "review_title": "Good investment", "review_description": "A few weeks before the game came out I downloaded the demo just to see if my six year old son was going to play it and he and when the game came out I got it for his bday and he have not put it down", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126565334", "uniq_id": "5cb903ed-3a8c-5949-adae-8c1573defb6d", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 380.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 159.0, "review_title_stringindexer_transform": 348.0, "review_description_stringindexer_transform": 310.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 301.0, "uniq_id_stringindexer_transform": 202.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "272", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jerk unit", "review_title": "A definitely must pickup", "review_description": "Great game! Side scrolling puzzle solver better than I anticipated and can\u2019t put it down. There is a gum ball machine for different costumes ADDICTING haha", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126559156", "uniq_id": "0458081f-b0d0-51c3-a5bf-819b1d1ea16b", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 434.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 191.0, "review_title_stringindexer_transform": 232.0, "review_description_stringindexer_transform": 9.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 314.0, "uniq_id_stringindexer_transform": 124.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "273", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "TheArgyleWizard", "review_title": "Fun, Beautiful, and Appropriately Challenging", "review_description": "Yoshi\u2019s Crafted World is an amazing game! It is beautifully designed and appropriately challenging. The ability to play two players is also great as my wife and I like to game together. I would definitely recommend it to anyone who owns a switch, especially those who want to play some couch co-op.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126552237", "uniq_id": "0370dddc-2aae-508a-b44d-122e6d641c33", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 101.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 275.0, "review_title_stringindexer_transform": 238.0, "review_description_stringindexer_transform": 269.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 348.0, "uniq_id_stringindexer_transform": 354.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "274", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "CampM", "review_title": "Love it.", "review_description": "Bought this for a Christmas Gift for my husband and myself. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 196.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 272.0, "review_title_stringindexer_transform": 332.0, "review_description_stringindexer_transform": 390.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "It's great...color", "name": " sound and price. We have had Visos in the past and have been very pleased.\"", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "5", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "227425437", "reviewed_at": "2903b4fb-38c1-5b18-86e4-223040292dc1", "rating": "16/01/2022 16:18:02", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 256.0, "name_stringindexer_transform": 27.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 4.0, "recommended_review_stringindexer_transform": 4.0, "verifed_purchaser_stringindexer_transform": 4.0, "helpful_count_stringindexer_transform": 4.0, "not_helpful_count_stringindexer_transform": 25.0, "reviewed_at_stringindexer_transform": 32.0, "rating_stringindexer_transform": 17.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "275", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Carebear43055", "review_title": "Great picture Quality", "review_description": "Got this in time to have it up on the wall Christmas day. The family loved it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227368178", "uniq_id": "3b4eb371-c531-5ab8-ac2b-889dd0e24cfd", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 344.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 308.0, "review_title_stringindexer_transform": 364.0, "review_description_stringindexer_transform": 167.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 183.0, "uniq_id_stringindexer_transform": 49.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "276", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Anonymous", "review_title": "Need better smart app!", "review_description": "The app sometimes glitches green and I need to power cycle yhr TV to work right. Also, I can't seem to download other apps that seems to be essential. Example Crunchyroll.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227336919", "uniq_id": "11982b37-c606-5a12-a2fe-1999da7e9a6a", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 46.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 67.0, "review_description_stringindexer_transform": 120.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 372.0, "uniq_id_stringindexer_transform": 26.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "277", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "CWB!", "review_title": "Great features & Amazing color and clarity", "review_description": "Bought the TV right before Christmas - just amazing clarity and color", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227333306", "uniq_id": "049e260f-a2e3-5ee2-8422-c0b928f66317", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 387.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 326.0, "review_title_stringindexer_transform": 107.0, "review_description_stringindexer_transform": 211.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 90.0, "uniq_id_stringindexer_transform": 319.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "278", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "RickZ", "review_title": "Great so far!", "review_description": "Excellent picture quality and very easy to set up!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227330788", "uniq_id": "5542b8bf-ac17-55f6-937a-1d90f91b9677", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 312.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 391.0, "review_title_stringindexer_transform": 245.0, "review_description_stringindexer_transform": 241.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 223.0, "uniq_id_stringindexer_transform": 44.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "279", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "The Doctor", "review_title": "Stunning Picture", "review_description": "\"About 10 years ago I purchased my first Vizio 54\"\" just months after its release.  It held up well until one day it just didnt turn on.  Lights on", "recommended_review": " but no one is home", "verifed_purchaser": " type of.  So in the spirit of the shopping season i jumped at a another brand new Vizio product", "helpful_count": " this OLED 55\"\".  ", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 177.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 367.0, "review_title_stringindexer_transform": 201.0, "review_description_stringindexer_transform": 380.0, "recommended_review_stringindexer_transform": 7.0, "verifed_purchaser_stringindexer_transform": 15.0, "helpful_count_stringindexer_transform": 11.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "With its easy to mount", "name": " easy setup", "brand": " the show just begins with its amazing ink black levels", "sku": " beautiful imagery from its 1080P to its upscaling to 4k", "reviewer_name": " to its true 4K Glory. ", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 409.0, "name_stringindexer_transform": 12.0, "brand_stringindexer_transform": 16.0, "sku_stringindexer_transform": 11.0, "reviewer_name_stringindexer_transform": 228.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Out of the box it had a firmware update. and then a week later another.  the 2nd was a bit rude", "name": " as it occurred in the middle of a show without warning.", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 391.0, "name_stringindexer_transform": 33.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "I am using the amazing OLED with a brand new 4k reciever with eARC.  So everying goes through the Amplifiter through a high end HDMI ARC certified cable to the TV's HDMI 1 (eArc).  Most days its running fantastic and smooth as expected.  Although", "name": " the TV has 2 behaviors that need adjusting", "brand": " not sure if its me or a firmware update.  They are: the screen goes blank when new input isnt supplied", "sku": " ie your movie is paused. And you need to press the OK on the remote to wake it up.  Having your show resume", "reviewer_name": " doesnt do it.  and the 2nd is that a few times now", "review_title": " the TV just doesnt see any input on HDMI 1", "review_description": " when clearly the Amplifier is sending signal.  Looking forward to a future firmware to make this TV absolutely perfect!\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227308429", "uniq_id": "9bd8d11d-12c7-5078-8ffd-a76aad22839c", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 377.0, "name_stringindexer_transform": 28.0, "brand_stringindexer_transform": 21.0, "sku_stringindexer_transform": 12.0, "reviewer_name_stringindexer_transform": 301.0, "review_title_stringindexer_transform": 33.0, "review_description_stringindexer_transform": 405.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 8.0, "uniq_id_stringindexer_transform": 89.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "280", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TOGA Sarge", "review_title": "Mr", "review_description": "Very nice picture, nice sound, but, the OLED effect can cause severe headaches in certain people.  There should be some form of medical warning and available solutions.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "2", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227300137", "uniq_id": "deb423a5-9af3-5ba2-b788-afb7f1433960", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 104.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 41.0, "review_title_stringindexer_transform": 82.0, "review_description_stringindexer_transform": 67.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 151.0, "uniq_id_stringindexer_transform": 367.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "281", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "JMCH", "review_title": "look out gamerz, here comez awsome", "review_description": "I purchased this 3 weeks ago and I love the picture quality. After contacting the boae surround  system its like you your in the movies! Great job vizio.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227299158", "uniq_id": "27f54783-5943-5768-8473-f46535b7d205", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 214.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 57.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 172.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 97.0, "uniq_id_stringindexer_transform": 298.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "282", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Margot", "review_title": "Color", "review_description": "I just bought this TV, did not plan on spending this much. This TV is worth every penny. The color is so vivid. Model is sleek and so much thinner than LED.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227277590", "uniq_id": "984c0a44-286b-5f5c-a04b-21f0ec500bb6", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 385.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 257.0, "review_title_stringindexer_transform": 340.0, "review_description_stringindexer_transform": 352.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 311.0, "uniq_id_stringindexer_transform": 237.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "283", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Skeet96", "review_title": "Great picture", "review_description": "I bought this one month ago and I'm glad I did this model.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227277469", "uniq_id": "6ba4d664-9c8a-50a0-80af-696a0a693e1f", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 389.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 239.0, "review_title_stringindexer_transform": 3.0, "review_description_stringindexer_transform": 192.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 16.0, "uniq_id_stringindexer_transform": 382.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "284", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "Anonymous", "review_title": "Fun!!", "review_description": "My son loves this game. Like Super Smash Bros with Kung Fu Panda characters.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "160658457", "uniq_id": "1e939271-deb9-5fe8-a1c4-aa8dbdf78342", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 79.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 2.0, "review_title_stringindexer_transform": 376.0, "review_description_stringindexer_transform": 57.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 2.0, "uniq_id_stringindexer_transform": 362.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "285", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "MikeOxlong69", "review_title": "Fun With Friends", "review_description": "I got the game through PS Plus, and I was skeptical at first. However, after playing it with my friends for a little bit, it was some of the most fun I'd had playing a game ever. It's no Citizen Kane, but it does its job as a fun, simple fighting game well.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "157919507", "uniq_id": "23d9c3da-b664-52b4-bf69-0f8a7d077f90", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 242.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 227.0, "review_title_stringindexer_transform": 282.0, "review_description_stringindexer_transform": 329.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 11.0, "uniq_id_stringindexer_transform": 383.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "286", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "TimB76", "review_title": "Super fun", "review_description": "We Bridges this for Christmas for my nephew everyone had a good time playing", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "123364925", "uniq_id": "9bd2d34a-5e61-57c4-9d29-646e5cf6ba26", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 279.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 62.0, "review_title_stringindexer_transform": 223.0, "review_description_stringindexer_transform": 420.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 329.0, "uniq_id_stringindexer_transform": 142.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "287", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "LivinLow", "review_title": "look out gamerz, here comez awsome", "review_description": "I bought this game for my grandson and he absolutely no loves this game...", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "6", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "118294186", "uniq_id": "b1f8541f-3d73-58d4-8fd2-91efc595fc96", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 105.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 358.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 156.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 7.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 255.0, "uniq_id_stringindexer_transform": 198.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "288", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "Neco46", "review_title": "Very Hard to Play!", "review_description": "I bought this game for my daughter because she\u2019s very competitive. We thought it was family friendly but it\u2019s very hard to learn different moves. I had a hard time playing it also and I\u2019m good at playing games.  It\u2019s not the easiest game to play and in my opinion its not for kids either.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "6", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "116746823", "uniq_id": "88ef6fb7-c95f-5675-9d98-c4a50cfd519a", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 438.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 363.0, "review_title_stringindexer_transform": 207.0, "review_description_stringindexer_transform": 30.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 4.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 339.0, "uniq_id_stringindexer_transform": 331.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "289", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "Cbj4892", "review_title": "Nice casual game", "review_description": "My 5 ear old loves this game.  Controls are simple and each fight location has their own challenges.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "116634709", "uniq_id": "b337caff-962c-5242-b3d0-8abebb580064", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 280.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 145.0, "review_title_stringindexer_transform": 286.0, "review_description_stringindexer_transform": 321.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 284.0, "uniq_id_stringindexer_transform": 174.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "290", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "Shaqcool", "review_title": "Game of the year", "review_description": "This game deserves 10 stars but I was only allowed to give 5. It is definitely better than smash. I think it should win game of the year.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "5", "not_helpful_count": "3", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "109093076", "uniq_id": "e04f8d1a-9267-530b-b5c0-10346dd373e0", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 289.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 386.0, "review_title_stringindexer_transform": 235.0, "review_description_stringindexer_transform": 157.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 6.0, "not_helpful_count_stringindexer_transform": 7.0, "reviewed_at_stringindexer_transform": 11.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 263.0, "uniq_id_stringindexer_transform": 242.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "291", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "Unlockable51", "review_title": "It ok", "review_description": "I sew the trailer and it was ok not the best and characters were alright. I heard that there was a lag in the game  but over all i give it 2 stars", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "4", "reviewed_at": "4 years ago", "rating": "2", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "108515660", "uniq_id": "df5a7b8a-f709-59f5-b49d-dc724ec76b61", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 110.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 185.0, "review_title_stringindexer_transform": 222.0, "review_description_stringindexer_transform": 146.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 5.0, "reviewed_at_stringindexer_transform": 11.0, "rating_stringindexer_transform": 5.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 371.0, "uniq_id_stringindexer_transform": 108.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "292", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "AceZero17X", "review_title": "HORRENDOUS!!!!", "review_description": "another super smash clone but horrible one at that", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "3", "not_helpful_count": "6", "reviewed_at": "4 years ago", "rating": "1", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "95223899", "uniq_id": "859ac623-c5af-5604-91d5-8a99eb2504d5", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 243.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 319.0, "review_title_stringindexer_transform": 109.0, "review_description_stringindexer_transform": 135.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 5.0, "not_helpful_count_stringindexer_transform": 4.0, "reviewed_at_stringindexer_transform": 11.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 245.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "293", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "DumbMarsupial", "review_title": "horrible", "review_description": "i wouldn't buy this game if it was free. i dislike the game's audio and lasting appeal. so bad my children couldn't even bear it", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "2", "not_helpful_count": "8", "reviewed_at": "5 years ago", "rating": "1", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "75707639", "uniq_id": "5f3917ab-9dd6-5929-9744-e3a2e874d7b4", "scraped_at": "16/01/2022 16:18:02", "index_stringindexer_transform": 349.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 48.0, "review_title_stringindexer_transform": 45.0, "review_description_stringindexer_transform": 409.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 3.0, "not_helpful_count_stringindexer_transform": 8.0, "reviewed_at_stringindexer_transform": 19.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 3.0, "uniq_id_stringindexer_transform": 337.0, "scraped_at_stringindexer_transform": 8.0}, {"index": "294", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "mn1meii", "review_title": "Great picture", "review_description": "I have a LG OLED TV and I wish I waited for this TV. I'm very pleased. I hope the update will fix the power issues. I have to turn on multiple time before the picture would stay on.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227271113", "uniq_id": "a99d570c-bdbd-5227-8609-ece8f499ebb5", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 393.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 415.0, "review_title_stringindexer_transform": 3.0, "review_description_stringindexer_transform": 304.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 95.0, "uniq_id_stringindexer_transform": 71.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "295", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Greg11", "review_title": "Great price", "review_description": "I\u2019ve had my VIZIO 55\u201d OLED for about 3 weeks. Clear picture from any place in the room. Color is so much better than the TV I replaced which was a VIZIO LED 55\u201d TV.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227216898", "uniq_id": "587a3ddd-1619-5729-88bf-61b91642d4c9", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 80.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 70.0, "review_title_stringindexer_transform": 106.0, "review_description_stringindexer_transform": 271.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 305.0, "uniq_id_stringindexer_transform": 377.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "296", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Drew6977", "review_title": "Crystal clear 4k", "review_description": "Other than the Smartcast being a bit buggy, the picture is spot on!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227212033", "uniq_id": "33f65eb0-1f44-526d-9319-c906125ee5c6", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 156.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 120.0, "review_title_stringindexer_transform": 273.0, "review_description_stringindexer_transform": 305.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 261.0, "uniq_id_stringindexer_transform": 93.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "297", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Shafi", "review_title": "Lot of issues with new OLED TV", "review_description": "i have been facing multiple issues from the time i got this TV.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 253.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 331.0, "review_title_stringindexer_transform": 116.0, "review_description_stringindexer_transform": 86.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "1) airplay doesnt work 90% of the times unless i go into admin & privacy and reboot the TV.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 481.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "2) even after reboot it doesnt work 50% of the times", "name": " i will have to reboot more than once", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 182.0, "name_stringindexer_transform": 34.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "3) same issue with chrome cast as well", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 18.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "4) TV screen turns off while mirroring screen via my Ipad every 10-15 minutes.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 252.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "5) while connected to HDMI port when im in zoom meeting using TV as external monitor", "name": " it throws message no signal detected and turns off TV after few minutes", "brand": " while im still in between the meeting.", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 194.0, "name_stringindexer_transform": 18.0, "brand_stringindexer_transform": 20.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "6) Home button doesnt work 50% of the times", "name": " unless TV is rebooted\"", "brand": "No: I don\u2019t recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "1", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "227210950", "reviewed_at": "9aefa298-d085-5f90-b930-00b20da59e72", "rating": "16/01/2022 16:18:03", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 163.0, "name_stringindexer_transform": 23.0, "brand_stringindexer_transform": 9.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 4.0, "recommended_review_stringindexer_transform": 10.0, "verifed_purchaser_stringindexer_transform": 4.0, "helpful_count_stringindexer_transform": 4.0, "not_helpful_count_stringindexer_transform": 34.0, "reviewed_at_stringindexer_transform": 34.0, "rating_stringindexer_transform": 9.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "298", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "RedRaider", "review_title": "Great OLED TV", "review_description": "Have had it for two weeks, perfect picture and great design. Loving it so far, great price for all the features and crystal clear picture. Just wish it had a HBO Max app preloaded in the main menu, but very easy to cast from my smart phone or iPad to the TV", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227210524", "uniq_id": "da0393de-bb8b-55f8-86de-58d92cfe4241", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 114.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 344.0, "review_title_stringindexer_transform": 378.0, "review_description_stringindexer_transform": 131.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 298.0, "uniq_id_stringindexer_transform": 207.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "299", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "cccmak126", "review_title": "Perfect.", "review_description": "Vizio has stepped up their game, going head to head with the LG and Samsung on this one.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227187244", "uniq_id": "2f7efb29-de97-5904-833a-c9a78dcb9212", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 444.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 329.0, "review_title_stringindexer_transform": 59.0, "review_description_stringindexer_transform": 94.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 289.0, "uniq_id_stringindexer_transform": 56.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "300", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "RomS", "review_title": "Affordable OLED", "review_description": "Finally, someone has made an OLED TV that I could afford!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227186461", "uniq_id": "7615eeb0-1644-5875-856a-08aeefb4355c", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 274.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 87.0, "review_title_stringindexer_transform": 311.0, "review_description_stringindexer_transform": 317.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 262.0, "uniq_id_stringindexer_transform": 110.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "301", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Fivonefivo", "review_title": "Excellent picture! Very crisp and defined", "review_description": "Well worth the price. I was sold on the fact that you can see definition anytime there is a night scene and it\u2019s not just blurry.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227165525", "uniq_id": "77d0486c-c3fa-55ce-a778-25a9ff85e1d6", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 488.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 168.0, "review_title_stringindexer_transform": 295.0, "review_description_stringindexer_transform": 10.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 386.0, "uniq_id_stringindexer_transform": 127.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "302", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Imagine1959", "review_title": "Great tv", "review_description": "The colors are incredibly vivid, even with a standard HD signal. I also love that it has screen mirroring for my iPhone along with a bunch of other viewing options.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227162981", "uniq_id": "821dde30-9ad1-59e3-b367-e0a36dc2691b", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 16.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 379.0, "review_title_stringindexer_transform": 253.0, "review_description_stringindexer_transform": 237.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 374.0, "uniq_id_stringindexer_transform": 385.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "303", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TomDawg1", "review_title": "Amazing picture", "review_description": "Just had this installed yesterday the BestBuy's Geek Squad. Also installed a new sound bar. The picture is amazing and we are looking forward to seeing many of our favorite shows in a whole new light. The remote will take getting used to, but we'll learn. I wish there was an app for PBS installed. We'll have to see it by AirPlay.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227149188", "uniq_id": "584ee887-b8e9-5831-b34c-9054af211b2e", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 130.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 134.0, "review_title_stringindexer_transform": 71.0, "review_description_stringindexer_transform": 40.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 49.0, "uniq_id_stringindexer_transform": 243.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "304", "name": "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", "brand": "Little Orbit", "sku": "119061", "reviewer_name": "KarateBear", "review_title": "Bad Trailer, Horrible Game", "review_description": "When the game trailer is a rip off of super smash bros, you know its going to flop. the chrachter selection is poor and the gameplay is choppy. I need my 20$ back...", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "7", "not_helpful_count": "15", "reviewed_at": "5 years ago", "rating": "1", "average_rating": "3.3125", "reviews_count": "32", "comment_id": "74341808", "uniq_id": "83fda476-c6ad-5de0-beb9-24a7cd48fdd2", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 381.0, "name_stringindexer_transform": 6.0, "brand_stringindexer_transform": 6.0, "sku_stringindexer_transform": 7.0, "reviewer_name_stringindexer_transform": 410.0, "review_title_stringindexer_transform": 325.0, "review_description_stringindexer_transform": 11.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 28.0, "not_helpful_count_stringindexer_transform": 18.0, "reviewed_at_stringindexer_transform": 19.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 6.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 343.0, "uniq_id_stringindexer_transform": 216.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "305", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "ChristyJay", "review_title": "Fun", "review_description": "I really enjoy playing this game. It is fun and enjoyable for all ages.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126539613", "uniq_id": "9a3be338-8648-50e4-a0f5-805fd576c024", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 466.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 173.0, "review_title_stringindexer_transform": 392.0, "review_description_stringindexer_transform": 356.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 114.0, "uniq_id_stringindexer_transform": 184.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "306", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "AnnB", "review_title": "Couldn\u2019t hold interest", "review_description": "The game is cute but hasn\u2019t held my 6-year-old son\u2019s attention. He has beat Donkey Kong Country, Super Mario Odyssey, and SupernMario Deluxe. He only played a couple of levels of Yoshi and hasn\u2019t went back to it, over a week later.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126536245", "uniq_id": "b79f70f4-fd02-53b5-8027-838f4073ed73", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 171.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 236.0, "review_title_stringindexer_transform": 279.0, "review_description_stringindexer_transform": 249.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 236.0, "uniq_id_stringindexer_transform": 279.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "307", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Sleepy Ninja", "review_title": "Fun for all ages", "review_description": "This game is similar to Yoshi's Woolly World.  The levels are made of things like cardboard, ribbon, straws, and construction paper.  Each level can be played in a normal mode or a reverse mode.  There are cute costumes you can unlock using coins that you collect throughout the levels.  It's a perfect game for parents to play with their kids.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126530828", "uniq_id": "123e30f0-b2b1-5458-8d8a-faee417f379a", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 45.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 34.0, "review_title_stringindexer_transform": 218.0, "review_description_stringindexer_transform": 20.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 5.0, "uniq_id_stringindexer_transform": 171.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "308", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "SD Dad", "review_title": "Yoshi is great", "review_description": "Got this for my 2 sons they love & have a lot of fun playing it together", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126528004", "uniq_id": "27ea1f05-cdda-5466-ba89-1578af352018", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 347.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 341.0, "review_title_stringindexer_transform": 288.0, "review_description_stringindexer_transform": 60.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 94.0, "uniq_id_stringindexer_transform": 265.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "309", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Nyxian", "review_title": "Great for playing, nightmare for completing", "review_description": "The game is wonderful to play through. Fun levels, extras, cute outfits, and even an easy mode for younger players. Just dont try to get everything, or you wont have a good time.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126526950", "uniq_id": "71a0a99a-e767-5285-ad31-aabfed1b91d7", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 302.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 375.0, "review_title_stringindexer_transform": 171.0, "review_description_stringindexer_transform": 31.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 202.0, "uniq_id_stringindexer_transform": 233.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "310", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Izzy28", "review_title": "Yoshi Crafted World", "review_description": "This game is super fun and adorable. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 12.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 316.0, "review_title_stringindexer_transform": 137.0, "review_description_stringindexer_transform": 351.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Love how everything looks like crafts. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 262.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "As a Yoshi/Poochy fan I enjoy the Yoshi games.\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "126525025", "not_helpful_count": "33722e22-472c-5b56-a877-599999791231", "reviewed_at": "16/01/2022 16:18:03", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 464.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 8.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 2.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 3.0, "verifed_purchaser_stringindexer_transform": 3.0, "helpful_count_stringindexer_transform": 25.0, "not_helpful_count_stringindexer_transform": 38.0, "reviewed_at_stringindexer_transform": 14.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "311", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "lenosaurio", "review_title": "Super cute and relaxing", "review_description": "This seems more like a kids game but everyone will enjoy. It\u2019s very entertaining but not very stressful. It looks so cheerful and colorful. And who doesn\u2019t like Yoshi with wings.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126518100", "uniq_id": "05ca2650-238f-588e-a873-7007194759d7", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 361.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 177.0, "review_title_stringindexer_transform": 144.0, "review_description_stringindexer_transform": 282.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 161.0, "uniq_id_stringindexer_transform": 169.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "312", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Kelchyd", "review_title": "Great game", "review_description": "Fun to play while letting those who want a challenge to be able to spend time to complete the game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126506130", "uniq_id": "dbb361d8-d468-5822-a0a8-10bbb1e5c348", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 498.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 295.0, "review_title_stringindexer_transform": 10.0, "review_description_stringindexer_transform": 148.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 116.0, "uniq_id_stringindexer_transform": 325.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "313", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Mipsie", "review_title": "Absolute gem", "review_description": "While it's easy enough for children to play, that doesn't take away from how fun it is for the whole family. Levels have a decent amount of replayability, and it's decently challenging in a casual way.  Would recommend to anyone.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126498760", "uniq_id": "bb53d5c0-348a-5800-87a7-d4eb984ca544", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 54.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 210.0, "review_title_stringindexer_transform": 337.0, "review_description_stringindexer_transform": 32.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 131.0, "uniq_id_stringindexer_transform": 39.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "314", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Heather0101", "review_title": "Kids will love it!!", "review_description": "Fun game for kids and adults. More relaxed then Mario and very kid friendly!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126495952", "uniq_id": "89c9e45b-2b49-5be2-9e62-52634bc7fad7", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 169.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 306.0, "review_title_stringindexer_transform": 356.0, "review_description_stringindexer_transform": 81.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 145.0, "uniq_id_stringindexer_transform": 41.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "315", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Hutchworld", "review_title": "Stunning picture", "review_description": "Bought this on Black Friday after reviewing 4-5 other LED TV's.  I'm so glad that I did.  The OLED experience is simply stunning.  My previous TV was a Panasonic plasma which I held onto as long as I could because I didn't want to give up those deep blacks and contrast.  This TV has such great contrast - for example when you watch a dark scene with isolated bright spots (like lamps, office windows, etc) it will blow you away how bright those spots are against the deep black surroundings.  The panel is made by LG and you can get the same performance for a lot less money.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227144955", "uniq_id": "11338a10-215e-5f67-a575-5237fef59b16", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 325.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 199.0, "review_title_stringindexer_transform": 84.0, "review_description_stringindexer_transform": 196.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 328.0, "uniq_id_stringindexer_transform": 249.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "316", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Stude", "review_title": "Fantastic TV", "review_description": "I bought this a couple of weeks ago.  Easy to install and set up.  Fantastic picture!  We love the smart cast and look forward to our elderly relatives coming over.  We can FaceTime our loved ones and airplay it on the TV and everyone will be able to see.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227115495", "uniq_id": "ece4609f-bd97-5a47-82b3-c1f5352598f3", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 473.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 336.0, "review_title_stringindexer_transform": 156.0, "review_description_stringindexer_transform": 434.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 51.0, "uniq_id_stringindexer_transform": 295.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "317", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ybreeze5", "review_title": "Great tv but needs patches as soon as possible", "review_description": "I love the tv but am on the fence on returning it or not. Fix everything people are complaining about. Also 1440p needs to be 120hz. Theres no reason why it shouldn't be. Get it together please", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227099195", "uniq_id": "f3a80eb1-718b-5c8d-b318-b18bc83fb20e", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 209.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 164.0, "review_title_stringindexer_transform": 208.0, "review_description_stringindexer_transform": 145.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 282.0, "uniq_id_stringindexer_transform": 128.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "318", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Kenny H", "review_title": "Love the cost and love the quality overall", "review_description": "I have a long time history of purchasing Vizio Television and each time of purchase I have upgraded having said that Vizio has shifted in the best way. Awesomeness!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227073234", "uniq_id": "a77123ba-ba04-5c96-9775-f7933c733a37", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 73.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 264.0, "review_title_stringindexer_transform": 93.0, "review_description_stringindexer_transform": 411.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 179.0, "uniq_id_stringindexer_transform": 351.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "319", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "StevieC", "review_title": "Amazing how far TV has come in just a few years", "review_description": "\"I had a Vizio 65\"\" LED TV that I thought was still pretty good but I was intrigued by OLED. The set I bought looked great in the store and even better at home. And that's on everything", "recommended_review": " not just 4K streams and DVD's.\"", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "0", "reviewed_at": "0", "rating": "1 year ago", "average_rating": "5", "reviews_count": "4.2727", "comment_id": "363", "uniq_id": "227010137", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 414.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 12.0, "review_title_stringindexer_transform": 150.0, "review_description_stringindexer_transform": 341.0, "recommended_review_stringindexer_transform": 15.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 20.0, "rating_stringindexer_transform": 18.0, "average_rating_stringindexer_transform": 12.0, "reviews_count_stringindexer_transform": 12.0, "comment_id_stringindexer_transform": 323.0, "uniq_id_stringindexer_transform": 91.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "320", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jethro2312", "review_title": "EXCELLANT OLED UHD TV", "review_description": "Great picture quality and very easy to set up. Would highly recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226961718", "uniq_id": "93e6fc6f-7bf6-5a2e-b4a0-834fc2475980", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 81.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 343.0, "review_title_stringindexer_transform": 242.0, "review_description_stringindexer_transform": 130.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 143.0, "uniq_id_stringindexer_transform": 342.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "321", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "ACyberPoet", "review_title": "Absolutely love this TV!", "review_description": "This is the best tv I've ever owned! The picture quality is amazing! I don't have enough words to express how happy I am with this TV.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226957452", "uniq_id": "7b9af1f2-7b3d-5164-80f0-800133b61ce4", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 60.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 360.0, "review_title_stringindexer_transform": 258.0, "review_description_stringindexer_transform": 217.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 297.0, "uniq_id_stringindexer_transform": 179.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "322", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jojo2414", "review_title": "Awesome", "review_description": "Bought the oled Visio over the Samsung q series. Very happy except sometimes the input switches from one to another happen 2 times", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226923078", "uniq_id": "f864ba04-27e1-5673-875f-6fd69443fb3e", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 319.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 21.0, "review_title_stringindexer_transform": 8.0, "review_description_stringindexer_transform": 219.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 119.0, "uniq_id_stringindexer_transform": 283.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "323", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Chasd", "review_title": "So many features", "review_description": "I set this TV up less than a month ago and still going through all the apps and everything it can do.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226915139", "uniq_id": "922e0d7d-c3f4-5b50-a543-e756033d3a1c", "scraped_at": "16/01/2022 16:18:03", "index_stringindexer_transform": 460.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 406.0, "review_title_stringindexer_transform": 68.0, "review_description_stringindexer_transform": 417.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 61.0, "uniq_id_stringindexer_transform": 166.0, "scraped_at_stringindexer_transform": 9.0}, {"index": "324", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "McFang", "review_title": "Troublesome TV with amazing potential", "review_description": "I really want to love this TV. The picture quality is amazing. The smart cast interface is solid, and it's all packeged under an beatable price. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 50.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 277.0, "review_title_stringindexer_transform": 336.0, "review_description_stringindexer_transform": 39.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "HOWEVER", "name": " there are a few headaches that is keeping me from recommending it", "brand": " the first is the HDMI 2.1 port. The OLED h-1 has 4 HDMI ports", "sku": " #1 is eARC (awesome)", "reviewer_name": " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "review_title": " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "review_description": " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "recommended_review": " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", "verifed_purchaser": " and to get 4K", "helpful_count": " I have to manually switch the input from Auto to 1.4", "not_helpful_count": " then back to 2.1. This is very frustrating. ", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 263.0, "name_stringindexer_transform": 13.0, "brand_stringindexer_transform": 11.0, "sku_stringindexer_transform": 13.0, "reviewer_name_stringindexer_transform": 413.0, "review_title_stringindexer_transform": 243.0, "review_description_stringindexer_transform": 361.0, "recommended_review_stringindexer_transform": 18.0, "verifed_purchaser_stringindexer_transform": 7.0, "helpful_count_stringindexer_transform": 24.0, "not_helpful_count_stringindexer_transform": 46.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "This is still a really good TV. But the growing pains right now would keep me from recommending it to others. (I'm coming from a 2018 Vizio P series)\"", "name": "No: I don\u2019t recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "3", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "226910861", "not_helpful_count": "02481162-152d-5b33-ba5a-5136b0686613", "reviewed_at": "16/01/2022 16:18:03", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 78.0, "name_stringindexer_transform": 8.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 5.0, "review_description_stringindexer_transform": 6.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 29.0, "not_helpful_count_stringindexer_transform": 45.0, "reviewed_at_stringindexer_transform": 14.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "325", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "phyra", "review_title": "Fun 2 player", "review_description": "Really fun 2 player game that seems well balanced. It looks great and feels rewarding to go collect stuff. It's really nice that the game seems to avoid many the co-op deaths that I'm used to in new super mario bros u deluxe and yoshis woolly world (we jump or egg each other and fall to our deaths).", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126476050", "uniq_id": "4773a39c-0194-5088-af97-1597830af3cb", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 155.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 123.0, "review_title_stringindexer_transform": 159.0, "review_description_stringindexer_transform": 65.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 239.0, "uniq_id_stringindexer_transform": 290.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "326", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Anthony87", "review_title": "Nintendo impressed me again.", "review_description": "Its a deep 2D game with an interesting spin on yoshi island. Nintendo always amazes me with the great graphics with thier titles. Gameplay is smooth and overall fun is better with my wife.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126473103", "uniq_id": "23759918-be89-5c65-9bf4-80ffb801cdff", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 356.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 83.0, "review_title_stringindexer_transform": 134.0, "review_description_stringindexer_transform": 364.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 203.0, "uniq_id_stringindexer_transform": 67.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "327", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Richard947", "review_title": "Nintendo fun for everyone!", "review_description": "Simple, super fun platformer that\u2019s perfect for kids or couples to play!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126440879", "uniq_id": "378bfa7c-9e8d-5d24-9947-c0515f458a2c", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 484.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 265.0, "review_title_stringindexer_transform": 269.0, "review_description_stringindexer_transform": 62.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 69.0, "uniq_id_stringindexer_transform": 248.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "328", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jon bc", "review_title": "Perfect for the little ones", "review_description": "Great game for small children and entertaining for adults as well", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126432204", "uniq_id": "bc495ea9-fc64-52df-a68f-c177f7c045d4", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 150.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 172.0, "review_title_stringindexer_transform": 164.0, "review_description_stringindexer_transform": 34.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 367.0, "uniq_id_stringindexer_transform": 30.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "329", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Justmeow0417", "review_title": "Family game", "review_description": "Great games for kids and parents to play together.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126430601", "uniq_id": "9d54e2ee-64d7-501b-adbe-31c0969dbe17", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 123.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 113.0, "review_title_stringindexer_transform": 271.0, "review_description_stringindexer_transform": 54.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 378.0, "uniq_id_stringindexer_transform": 221.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "330", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "halfjew22", "review_title": "Great graphics, 2 player gameplay awesome", "review_description": "Amazing game. Graphics are too cool. They're made out of cardboard, bottles, etc and the two player is fantastic. Highly recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126410978", "uniq_id": "1babf017-7fdf-5c87-8652-1407fa60eb90", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 197.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 298.0, "review_title_stringindexer_transform": 26.0, "review_description_stringindexer_transform": 12.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 344.0, "uniq_id_stringindexer_transform": 260.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "331", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Eglandon", "review_title": "Awesome game", "review_description": "I bought this game for my 8 yr old autistic daughter and she absolutely loves this game. It is her first video game bought soley for her and she just took right to it with no issues at all. For other games she has played it has been difficult for her to grasp what goes on on the screen and how that associates with what she is doing on the controller such as constantly running into walls on mario kart because it was difficult to for her to figure out how to steer but no such issues with this game and she absolutely loves it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126386211", "uniq_id": "d7029cd7-b7f2-5db5-8963-596a04b78acd", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 428.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 255.0, "review_title_stringindexer_transform": 41.0, "review_description_stringindexer_transform": 345.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 233.0, "uniq_id_stringindexer_transform": 254.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "332", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Kittencakes", "review_title": "Sooo cute~ <3", "review_description": "It's sooo cute!! The levels are adorable but still challenging enough if you want to get 100%. My new go-to game for destressing~ <3", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126374385", "uniq_id": "e1f7d79c-f4a9-505d-9273-c1de69d35bda", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 51.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 187.0, "review_title_stringindexer_transform": 234.0, "review_description_stringindexer_transform": 264.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 188.0, "uniq_id_stringindexer_transform": 46.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "333", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "FireWife", "review_title": "Brings out the kid in a 33 year old.", "review_description": "This game is super fun and brings out the kid in me. Each level has multiple challenges, making the game seem like neverending fun. The voices are adorable and the choices are plentiful. Great game, highly recommended.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126350389", "uniq_id": "8e92998d-0da9-5f08-b431-fcde798123c9", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 383.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 130.0, "review_title_stringindexer_transform": 230.0, "review_description_stringindexer_transform": 433.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 212.0, "uniq_id_stringindexer_transform": 204.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "334", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Brennan91", "review_title": "Unique and colorful world", "review_description": "It\u2019s a really relaxed game that you can pick up and play anytime. The graphics are amazing and unique. Overall, I\u2019d definitely recommend this game for anyone who is a Yoshi fan.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126348541", "uniq_id": "7f06208f-0a2b-54ba-94ea-112a39a0c52e", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 477.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 114.0, "review_title_stringindexer_transform": 212.0, "review_description_stringindexer_transform": 220.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 391.0, "uniq_id_stringindexer_transform": 280.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "335", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Josr85", "review_title": "Great game for all ages", "review_description": "Me and my 5 year old really enjoy this game, if you enjoy the Mario games this is one you can add to that list.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126347731", "uniq_id": "a4ae2322-89b3-504a-b7e0-9fa33a9ca17e", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 19.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 37.0, "review_title_stringindexer_transform": 233.0, "review_description_stringindexer_transform": 176.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 125.0, "uniq_id_stringindexer_transform": 4.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "336", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Yoshi Fan1", "review_title": "Fun!", "review_description": "An incredibly fun sequel to Yoshi's Woolly World.  Amazing graphics!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126346918", "uniq_id": "138dec55-89dd-5a19-b289-861f05404137", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 149.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 389.0, "review_title_stringindexer_transform": 22.0, "review_description_stringindexer_transform": 112.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 21.0, "uniq_id_stringindexer_transform": 322.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "337", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "ShadowKnight92", "review_title": "Overall Gameplay", "review_description": "The game is fun, and the graphics look great, some levels are hard for a children\u2019s game, but over the game is great.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126344921", "uniq_id": "1df8ba9d-c4b7-5f94-ac1b-796c510d5a5e", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 277.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 310.0, "review_title_stringindexer_transform": 374.0, "review_description_stringindexer_transform": 225.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 254.0, "uniq_id_stringindexer_transform": 3.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "338", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "R00T666", "review_title": "Yoshi at his best!", "review_description": "This game is a crafted masterpiece! The level of detail is gorgeous. Gameplay is a throwback to the classics while maintaining a modern feel. The two player mode is unique and available right at the start. The game is great for all ages and incredible for a good time or a family game night. I highly recommend this game!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126343579", "uniq_id": "46be1ec8-0af4-56f1-89c5-a57e8a345971", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 390.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 148.0, "review_title_stringindexer_transform": 185.0, "review_description_stringindexer_transform": 284.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 338.0, "uniq_id_stringindexer_transform": 60.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "339", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Mr Eric", "review_title": "Great game for the family", "review_description": "Entertaining game for all ages.  The levels are relatively easy to pass but become challenging if you are the type of gamer who goes for 100% completion.  The colorful graphics also help add to the fun nature of the game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126337946", "uniq_id": "1704cd22-d544-5d71-9815-f5eb2372a044", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 236.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 320.0, "review_title_stringindexer_transform": 19.0, "review_description_stringindexer_transform": 174.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 313.0, "uniq_id_stringindexer_transform": 212.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "340", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Dadgames", "review_title": "Great game for the family", "review_description": "Great game for me and my kids ages 6, 4 and 1. They can actually play it on their own and love it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126325080", "uniq_id": "bd6cd803-2b83-5424-9c1e-5d536f889b79", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 208.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 192.0, "review_title_stringindexer_transform": 19.0, "review_description_stringindexer_transform": 38.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 57.0, "uniq_id_stringindexer_transform": 18.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "341", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Weasel771q", "review_title": "Good", "review_description": "Cute game. Just as fun if not more than Wooly World was.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126323055", "uniq_id": "a8cb85ec-1fb1-592d-86dd-ad1977d95f62", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 179.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 16.0, "review_title_stringindexer_transform": 13.0, "review_description_stringindexer_transform": 389.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 272.0, "uniq_id_stringindexer_transform": 164.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "342", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Anthony Nussbaum", "review_title": "Another Great Nintendo Game", "review_description": "\"Whimsical, light-hearted platformer. Densely packed stages filled with collectibles, secrets, and uniquely beautiful art designs.  Tons of content adds replay value to keep you playing long after finishing the six to eight hour \"\"main\"\" adventure. Definitely a worthwhile purchase", "recommended_review": " especially if you plan to play the often chaotic but always entertaining simultaneous two player co-op mode.\"", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "1", "reviewed_at": "0", "rating": "2 years ago", "average_rating": "4", "reviews_count": "4.6556", "comment_id": "2390", "uniq_id": "126319104", "scraped_at": "2bb7b6b6-1b88-5903-a898-0a754ac687d8", "index_stringindexer_transform": 458.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 108.0, "review_title_stringindexer_transform": 195.0, "review_description_stringindexer_transform": 326.0, "recommended_review_stringindexer_transform": 14.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 20.0, "rating_stringindexer_transform": 13.0, "average_rating_stringindexer_transform": 10.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 294.0, "uniq_id_stringindexer_transform": 321.0, "scraped_at_stringindexer_transform": 16.0}, {"index": "343", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "kschneider1231", "review_title": "Yoshi\u2019s Crafted World", "review_description": "If you like the gameplay of Yoshi\u2019s Island, the art style of Yoshi\u2019s Woolly World, then Yoshi\u2019s Crafted World is the gamefor you... and the family!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126315942", "uniq_id": "aac40f5b-5309-54ee-b48f-8cef2b574aa1", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 66.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 23.0, "review_title_stringindexer_transform": 17.0, "review_description_stringindexer_transform": 349.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 107.0, "uniq_id_stringindexer_transform": 153.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "344", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Rwarmander", "review_title": "Fun to relax with", "review_description": "Sort of short, aimed more towards kids...but if you love Yoshi and want something to sit back before bed and relax and play, this is your game.  So charming, so chill, so Yoshi.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126302586", "uniq_id": "48d6e2a3-a18e-56d1-a6c2-3f3d10c0238f", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 311.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 242.0, "review_title_stringindexer_transform": 265.0, "review_description_stringindexer_transform": 109.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 275.0, "uniq_id_stringindexer_transform": 111.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "345", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Randy cox", "review_title": "Won't turn on", "review_description": "Just bought tv a while back moved to the new house and now it won't turn on", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226900312", "uniq_id": "9b0e9798-1104-51bb-bb02-c4791677f066", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 400.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 339.0, "review_title_stringindexer_transform": 320.0, "review_description_stringindexer_transform": 191.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 87.0, "uniq_id_stringindexer_transform": 203.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "346", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "IrishRunner", "review_title": "Love this thing", "review_description": "This TV replaced a smaller, older VIZIO I bought back in 2011/12. Was not looking for an OLED, but went with it since the price was so good. I could not be happier. The picture is GREAT. Everything we watch has looked amazing on it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226893604", "uniq_id": "ab53e60a-a8f5-514d-b991-35bb8c11d5b5", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 103.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 24.0, "review_title_stringindexer_transform": 377.0, "review_description_stringindexer_transform": 141.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 24.0, "uniq_id_stringindexer_transform": 84.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "347", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ray T", "review_title": "The picture!", "review_description": "The picture is exceptionally light and bright where it needs to be but the infinite dark reminds you it is an Oled, this tv IS IN a class of it's own!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226870200", "uniq_id": "07271c3d-9b17-5d98-8c25-bdd77055b420", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 225.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 216.0, "review_title_stringindexer_transform": 101.0, "review_description_stringindexer_transform": 154.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 201.0, "uniq_id_stringindexer_transform": 201.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "348", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "SDotRinney", "review_title": "Great picture great sound overall a great TV", "review_description": "About my TV last month I love it love everything about it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226863307", "uniq_id": "213d7265-2a67-5a82-8be4-aedcc9d26874", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 275.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 302.0, "review_title_stringindexer_transform": 119.0, "review_description_stringindexer_transform": 365.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 265.0, "uniq_id_stringindexer_transform": 115.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "349", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Prakers", "review_title": "Beyond excellent", "review_description": "I am pleased with the quality of this unit. Best tv I have ever owned. Oled is off the charts, the colors pop and deep rich blacks. I'm creeping up on retirement and I didn't want to buy a quality tv on a fixed budget.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226855621", "uniq_id": "6a01d10d-880f-5927-a855-9877f163f764", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 485.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 133.0, "review_title_stringindexer_transform": 96.0, "review_description_stringindexer_transform": 323.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 351.0, "uniq_id_stringindexer_transform": 217.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "350", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "PaulS", "review_title": "Beautiful picture and sound.  Sluggish controls", "review_description": "The picture and the Vizio surround surround speakers are excellent.  Response to the remote for adjusting sound level is sluggish and remote has few features compared to other systems.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226844023", "uniq_id": "ccbc3319-a7f8-55cd-99c4-8df80b9f986e", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 186.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 237.0, "review_title_stringindexer_transform": 391.0, "review_description_stringindexer_transform": 289.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 238.0, "uniq_id_stringindexer_transform": 8.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "351", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Whydoihavetohaveanickname", "review_title": "Great picture but OS is a bit slow", "review_description": "For the picture this has been great for the price. The reason I give it 3 stars though is because I am very critical of when the operating system is not \u201csnappy\u201d.  For a modern TV, losing of apps and maneuvering through the UI should be quick. While this is better than my old Samsung TV OS, I still expected it to be quicker.   I also hate h to r banner style at the top. My first choice should be to pick an App rather than some curated selection when so turn on the TV. I haven\u2019t been able to find a feature to turn it off.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226834410", "uniq_id": "653adbc8-2641-556e-95bb-4e98b787d90b", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 108.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 266.0, "review_title_stringindexer_transform": 310.0, "review_description_stringindexer_transform": 188.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 211.0, "uniq_id_stringindexer_transform": 320.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "352", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Britan91", "review_title": "look out gamerz, here comez awsome", "review_description": "It's better quality than I imagined! Amazing TV!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 425.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 184.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 245.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "My only critique is that I wish it performed @ a 1440p resolution. Everything else is great!\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "5", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "226824012", "not_helpful_count": "8a3401f7-4865-5764-904a-6f8cb7b42edd", "reviewed_at": "16/01/2022 16:18:04", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 411.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 5.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 15.0, "not_helpful_count_stringindexer_transform": 35.0, "reviewed_at_stringindexer_transform": 17.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "353", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ezirkle", "review_title": "look out gamerz, here comez awsome", "review_description": "So far I love it! The new tech for video games is awesome!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226813954", "uniq_id": "090663b7-8c74-501b-8c5c-ad3a2534b71f", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 201.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 322.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 46.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 235.0, "uniq_id_stringindexer_transform": 10.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "354", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Carlos G.", "review_title": "Excellent picture quality!", "review_description": "This is my first OLED tv and I am loving it. I\u2019ve been using Vizio TVs for years and have never disappointed me. This one is super fast and there\u2019s no lag when selecting through the apps. The lag is something I hated on my previous Vizio TVs bu that\u2019s gone now. Now just bring HBO Max! One thing I don\u2019t like and hope that it\u2019s fixed in a future software update is that currently, 4K/120hz HDMI ports don\u2019t work on the PS5. Fix that and this TV will be perfect.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226754257", "uniq_id": "8a8d8b55-7214-5e92-b9ed-733d6bf7071a", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 354.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 68.0, "review_title_stringindexer_transform": 381.0, "review_description_stringindexer_transform": 52.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 169.0, "uniq_id_stringindexer_transform": 239.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "355", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Radwithab", "review_title": "Great controller", "review_description": "It's comfortable and works great. My only frustration is that it doesn't seem to allow button remapping. I can set it up on the switch, and the buttons are changed on the switch paddles, but this controller doesn't allow the changes. Not sure if this is a switch issue or the controller. Otherwise it is great", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "4", "average_rating": "4.875", "reviews_count": "32", "comment_id": "190364463", "uniq_id": "8625e7a7-4e27-5d30-a05b-fe5bf7c2cadd", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 472.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 147.0, "review_title_stringindexer_transform": 4.0, "review_description_stringindexer_transform": 83.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 6.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 135.0, "uniq_id_stringindexer_transform": 261.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "356", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Meadow", "review_title": "Enhances Game Play and Fits Perfectly in Hands", "review_description": "[This review was collected as part of a promotion.] This controller was bought for the intent to enhance the Switch Experience, and to add some more skill to certain games. The case did arrive slightly damaged, the inside plastic was torn. but the product remained in perfect condition. It is light, but doesn't mean it isn't quality. It brought a different set of skills to games that required more then a small handheld joystick. A little throwback to the classic design of a controller.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122923657", "uniq_id": "9bf14046-e0c5-500a-9dcf-e9c0e6afb859", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 147.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 374.0, "review_title_stringindexer_transform": 329.0, "review_description_stringindexer_transform": 320.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 394.0, "uniq_id_stringindexer_transform": 270.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "357", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Jess2274", "review_title": "Wirelesa Nintendo Switch Controller", "review_description": "[This review was collected as part of a promotion.] Received to try out on our gaming system and definitely enjoy it way better then the cord controller. Having wireless is more convient as you can move better and no worries about pulling a cord out of the system. The Over all grip is very comfortable and nice fitting. Not only is it convient, comfortable but also comes designed with Mario which is many favorites of alot of people. Alot of my family complement us on our new controller for the design and now wants one or something similar.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122567098", "uniq_id": "814c2ff9-f939-5b24-8c3e-41e751846aa3", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 358.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 256.0, "review_title_stringindexer_transform": 366.0, "review_description_stringindexer_transform": 396.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 176.0, "uniq_id_stringindexer_transform": 85.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "358", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "MandM", "review_title": "Eaysy to Use", "review_description": "[This review was collected as part of a promotion.] This controller was so eay to use, and dits just right in my hand. I love the colors it comes in and connects very easily.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122446616", "uniq_id": "89ff972f-705a-50a7-8f9d-f001de728a39", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 496.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 303.0, "review_title_stringindexer_transform": 268.0, "review_description_stringindexer_transform": 25.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 170.0, "uniq_id_stringindexer_transform": 359.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "359", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Cheeks784", "review_title": "excellent value for the cost", "review_description": "[This review was collected as part of a promotion.] I like having a controller to hold onto with the switch and this one gets the job done.  Set up was easy.  The only downside is no rumble, but the added buttons make up for it.  The retro mario theme is an added bonus and loved by husband and son alike.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122436959", "uniq_id": "a881b3e6-56f2-5ed3-99fb-dc2394c9a4eb", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 436.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 244.0, "review_title_stringindexer_transform": 110.0, "review_description_stringindexer_transform": 114.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 185.0, "uniq_id_stringindexer_transform": 296.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "360", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "cwinniebear24", "review_title": "Such a great design", "review_description": "[This review was collected as part of a promotion.] The design on this remote is so cool. The batteries are the only drawback but that can be remedied by just buying rechargeable batteries, which I would highly recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122339952", "uniq_id": "6ffa7acb-1ab2-53b2-b96c-7d8ffc9cad47", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 257.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 196.0, "review_title_stringindexer_transform": 127.0, "review_description_stringindexer_transform": 261.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 157.0, "uniq_id_stringindexer_transform": 340.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "361", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Mommyof2boyz", "review_title": "Great controller", "review_description": "[This review was collected as part of a promotion.] This is a great controller for the Nintendo switch. It has a great Mario design that my kids loved! It was easy to set up and it being wireless was even better. It seems to be very durable as well. And good thing because my kids are super rough on things aspect controllers. I will be purchasing a second one, so both my kids have them to play with.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122182335", "uniq_id": "11608ce6-435a-5fa7-8361-78c102e07aa6", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 138.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 176.0, "review_title_stringindexer_transform": 4.0, "review_description_stringindexer_transform": 410.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 150.0, "uniq_id_stringindexer_transform": 378.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "362", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "DiamondAries999", "review_title": "Enhanced Wireless!!!", "review_description": "[This review was collected as part of a promotion.] This is a review for the Nintendo Switch wireless game controller. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 55.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 297.0, "review_title_stringindexer_transform": 251.0, "review_description_stringindexer_transform": 88.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "I like that this is wireless with sensors ", "name": " so I'm not tied down with a cord.  ", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 328.0, "name_stringindexer_transform": 21.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "This controller has Bluetooth", "name": " mappable buttons", "brand": " fully programmable", "sku": " and more.  ", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 237.0, "name_stringindexer_transform": 32.0, "brand_stringindexer_transform": 13.0, "sku_stringindexer_transform": 15.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The motion controls are awesome", "name": " this is a smart product!", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 392.0, "name_stringindexer_transform": 9.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "This has a design that feels good in the hands", "name": " it is not bulky or hard to work.  ", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 475.0, "name_stringindexer_transform": 37.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "My nephews prefer this over the other wireless controller we have", "name": " and they kind of fight over it.  They really like the retro Mario on the controller", "brand": " and make fun of me because it was brand new \"\"in my day\"\".  This is fun", "sku": " so I'd definitely recommend this product.\"", "reviewer_name": "yes: I recommend this product", "review_title": "look out gamerz, here comez awsome", "review_description": "0", "recommended_review": "0", "verifed_purchaser": "3 years ago", "helpful_count": "5", "not_helpful_count": "4.875", "reviewed_at": "32", "rating": "122158646", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "16/01/2022 16:18:04", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 33.0, "name_stringindexer_transform": 10.0, "brand_stringindexer_transform": 15.0, "sku_stringindexer_transform": 14.0, "reviewer_name_stringindexer_transform": 335.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 3.0, "recommended_review_stringindexer_transform": 12.0, "verifed_purchaser_stringindexer_transform": 6.0, "helpful_count_stringindexer_transform": 6.0, "not_helpful_count_stringindexer_transform": 37.0, "reviewed_at_stringindexer_transform": 35.0, "rating_stringindexer_transform": 11.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 9.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "363", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "RachelA1020", "review_title": "Very good but not perfect.", "review_description": "[This review was collected as part of a promotion.] The pros: *feels almost identical to the official Nintendo pro controller.  ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 408.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 188.0, "review_title_stringindexer_transform": 331.0, "review_description_stringindexer_transform": 164.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 441.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "*the added mappable buttons could come in handy even though I haven't used those yet.", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 106.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "*the cost is much less than the Nintendo pro controller. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 229.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The cons:", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 35.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "*slightly unconventional setup. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 442.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "It's not a problem though if you read the instructions. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 44.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "*its lighter in weight which makes me wonder about durability. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 21.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Makes a perfect 2nd controller for kids.\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "3 years ago", "review_description": "4", "recommended_review": "4.875", "verifed_purchaser": "32", "helpful_count": "122140626", "not_helpful_count": "0b338d34-27a3-56a0-9787-1d3b437f1ba9", "reviewed_at": "16/01/2022 16:18:04", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 324.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 27.0, "review_description_stringindexer_transform": 2.0, "recommended_review_stringindexer_transform": 11.0, "verifed_purchaser_stringindexer_transform": 10.0, "helpful_count_stringindexer_transform": 22.0, "not_helpful_count_stringindexer_transform": 39.0, "reviewed_at_stringindexer_transform": 17.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "364", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Court the Sport", "review_title": "Amazing Controller!", "review_description": "[This review was collected as part of a promotion.] I have been using this controller for my Nintendo Switch for a couple of weeks now and am very happy with the overall performance of it! It is very comfortable to hold and the buttons are set up perfectly.  It being a Bluetooth Wireless Controller is a huge plus! The Super Mario Bros. design is my favorite though! It's very attractive and I've received so many compliments on it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122102991", "uniq_id": "330fc9b1-4297-500d-b450-59e0c113c0c8", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 249.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 26.0, "review_title_stringindexer_transform": 38.0, "review_description_stringindexer_transform": 260.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 7.0, "uniq_id_stringindexer_transform": 105.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "365", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "NSU_Ant", "review_title": "Like DarkSouls but with Cars! :) Love it!!!!", "review_description": "It\u2019s not entry level friendly but can be very rewarding.. I struggled at first, boy it was challenging but with lots of practice and doing tutorials/training I managed to not come in 12th or 10th place.. I now place at about 6th or 4th.. Boy does not wining  a race hurt but it\u2019s the grind and constant improvement.. Could lower the difficult and turn assist on but that would take the fun out of the challenge..I then went to YouTube to see pro gamers struggling or flipping cars as well so that made me feel a little better too..", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "154204652", "uniq_id": "29596331-f93b-5f15-b930-ea33a3c3da35", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 360.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 154.0, "review_title_stringindexer_transform": 148.0, "review_description_stringindexer_transform": 142.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 68.0, "uniq_id_stringindexer_transform": 7.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "366", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "IAMTHEWHEELMAN", "review_title": "Skip it.", "review_description": "If your looking for a real rally experience buy Dirt. The handling on this game is cartoonish. You cut and you get penalties. Total garbage.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "141605618", "uniq_id": "e77e4e5f-c996-51ef-bb79-6354405c211b", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 465.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 84.0, "review_title_stringindexer_transform": 180.0, "review_description_stringindexer_transform": 288.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 2.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 321.0, "uniq_id_stringindexer_transform": 240.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "367", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "Alllly", "review_title": "Lots of Fun", "review_description": "Very detailed graphics, challenging driving, and numerous course selections. A lot of fun for multiplayer. The only semi con is that it is difficult to select changes to your driving car... but overall a must have.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "138719704", "uniq_id": "f2fad2ce-ed9a-598f-9e5a-a3ad7ea6a717", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 184.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 178.0, "review_title_stringindexer_transform": 294.0, "review_description_stringindexer_transform": 275.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 98.0, "uniq_id_stringindexer_transform": 287.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "368", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "The monumental", "review_title": "Let the dirt fly and the motor cry", "review_description": "Simply gorgous to look at and play.  It says pure simulator on the box for a reason.  If you go in expecting anything less you will get plastasized.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "137193968", "uniq_id": "6b553447-1f16-512b-b18d-81f6ffac6d98", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 322.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 380.0, "review_title_stringindexer_transform": 118.0, "review_description_stringindexer_transform": 187.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 122.0, "uniq_id_stringindexer_transform": 158.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "369", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "Sarge97502", "review_title": "Wrc8", "review_description": "Good game, need to spend some more time playing it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "136798584", "uniq_id": "0cf0d647-5307-585d-8435-a37e7f419aa3", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 457.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 43.0, "review_title_stringindexer_transform": 189.0, "review_description_stringindexer_transform": 236.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 4.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 64.0, "uniq_id_stringindexer_transform": 181.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "370", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "Holden Macaque", "review_title": "Crazy good WRC game.\\m/", "review_description": "This is a good one. One of the best driving games I've played. The career mode is a bit of a pain but still pretty cool.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "136465444", "uniq_id": "4fd68a13-9df5-5e86-b0a8-836bae43d243", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 486.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 135.0, "review_title_stringindexer_transform": 152.0, "review_description_stringindexer_transform": 324.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 41.0, "uniq_id_stringindexer_transform": 134.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "371", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "Christow", "review_title": "WRC 8 FIA World Rally Championship is great game.", "review_description": "The WRC 8 FIA World Rally Championship is a great game to play. The cars are awesome and the scenery is breathtaking. There's so much to do! I really have lots of fun playing it. Much improvement over the WRC 7 World Rally Championship. They did a really nice job in putting this game together.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "136365231", "uniq_id": "36b7fb9b-c0eb-5073-b128-5bd4c7d72748", "scraped_at": "16/01/2022 16:18:04", "index_stringindexer_transform": 375.0, "name_stringindexer_transform": 7.0, "brand_stringindexer_transform": 7.0, "sku_stringindexer_transform": 8.0, "reviewer_name_stringindexer_transform": 201.0, "review_title_stringindexer_transform": 196.0, "review_description_stringindexer_transform": 37.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 7.0, "reviews_count_stringindexer_transform": 6.0, "comment_id_stringindexer_transform": 218.0, "uniq_id_stringindexer_transform": 391.0, "scraped_at_stringindexer_transform": 6.0}, {"index": "372", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "ghostdph", "review_title": "Yoshi\u2019s crafted world game", "review_description": "Great game. Easy to pick up and play, at home or on the go.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126301922", "uniq_id": "3f2027c9-d810-5e8b-b6ea-5a2af73af35f", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 223.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 79.0, "review_title_stringindexer_transform": 102.0, "review_description_stringindexer_transform": 199.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 224.0, "uniq_id_stringindexer_transform": 236.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "373", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "carauza", "review_title": "GET THIS GAME!", "review_description": "ONE OF THE ABSOLUTE BEST IN THE YOSHI FRANCHISE, WELL WORTH THE WAIT.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126301717", "uniq_id": "dc10d9ff-527d-5235-8da4-213d2422ccc5", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 76.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 251.0, "review_title_stringindexer_transform": 112.0, "review_description_stringindexer_transform": 303.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 270.0, "uniq_id_stringindexer_transform": 252.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "374", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Charlie from VA", "review_title": "Its yoshi!", "review_description": "Cant go wrong with Yoshi. Cute, detailed and fun. You get what you see with this game. I love it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 403.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 254.0, "review_title_stringindexer_transform": 129.0, "review_description_stringindexer_transform": 307.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Great sequel to Wooly World\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "126297513", "not_helpful_count": "1962b25e-379f-515a-a961-26950bbd081d", "reviewed_at": "16/01/2022 16:18:05", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 26.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 8.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 2.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 3.0, "verifed_purchaser_stringindexer_transform": 3.0, "helpful_count_stringindexer_transform": 21.0, "not_helpful_count_stringindexer_transform": 32.0, "reviewed_at_stringindexer_transform": 12.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "375", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "emperordesslok", "review_title": "Another quality Switch release", "review_description": "Super fun game that can be as easy or as challenging as you want it to be, depending on if your thing is to 100% a game or not. Another quality release on the Switch, highly recommended.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126291693", "uniq_id": "fd6bea00-05a9-5cd4-98f9-5f0d4ed43eb0", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 211.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 138.0, "review_title_stringindexer_transform": 389.0, "review_description_stringindexer_transform": 189.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 47.0, "uniq_id_stringindexer_transform": 162.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "376", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Jack Badgerlord Fox", "review_title": "Weaponized Cuteness at it's Finest", "review_description": "Not a heck of a lot wrong with this game. I like to say this is the epitome of Weaponized Cuteness. The designers did a fantastic job with level design. It feels like they actually built every level in the game with cardboard and construction paper in reality and then put it into the game, and they stick with that through the entire game. The controls are tight and the yoshis are as adorable as ever.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 345.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 121.0, "review_title_stringindexer_transform": 199.0, "review_description_stringindexer_transform": 122.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The addition of being allowed to manually aim your eggs removes some of the frustration that earlier titles had and there are collectible items in abundance for completionists. That all said", "name": " the game is not meant for those looking for a challenge. I don't need dark souls levels of difficulty", "brand": " but at least some sort of resistance would have been nice. Levels can basically be run through rather blind if you're not hunting for every red coin or flower. Even the challenge levels at the end of the game don't really have much bite to them.", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 367.0, "name_stringindexer_transform": 17.0, "brand_stringindexer_transform": 19.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The biggest hiccup in the game I think is the mini quests you get. Each level has multiple different set pieces that a robot will want you to collect. The issue is you can only do one at a time so the game asks you to play through one level at least 6 or 7 times and it can get rather tedious at times. My suggestion is that if you are collecting everything", "name": " don't try to get it all at once because I assure you you will be back through that level multiple times.", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 314.0, "name_stringindexer_transform": 31.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "In the end the game is a relaxing adventure through a handcrafted (Almost literally) world that never fails to charm. Perfect for players of all ages", "name": " but if you're looking for a challenge I would look elsewhere.\"", "brand": "yes: I recommend this product", "sku": "Verified Purchaser", "reviewer_name": "1", "review_title": "0", "review_description": "2 years ago", "recommended_review": "4", "verifed_purchaser": "4.6556", "helpful_count": "2390", "not_helpful_count": "126289526", "reviewed_at": "512efb41-f0b9-5a8b-ac21-e6f988f04a2d", "rating": "16/01/2022 16:18:05", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 445.0, "name_stringindexer_transform": 26.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 9.0, "reviewer_name_stringindexer_transform": 4.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 5.0, "recommended_review_stringindexer_transform": 5.0, "verifed_purchaser_stringindexer_transform": 5.0, "helpful_count_stringindexer_transform": 8.0, "not_helpful_count_stringindexer_transform": 15.0, "reviewed_at_stringindexer_transform": 42.0, "rating_stringindexer_transform": 6.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "377", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "SusieK", "review_title": "Cute stuff", "review_description": "Very cute! And the right amount of challenges. Great game for all ages", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126283489", "uniq_id": "29337594-2061-52d7-9c1a-b31c9022a6b3", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 476.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 93.0, "review_title_stringindexer_transform": 274.0, "review_description_stringindexer_transform": 243.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 50.0, "uniq_id_stringindexer_transform": 306.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "378", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Mebunny", "review_title": "Love love love", "review_description": "We love Yoshi!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 74.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 53.0, "review_title_stringindexer_transform": 70.0, "review_description_stringindexer_transform": 55.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "It's a great game for kids and adults!\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "126279514", "not_helpful_count": "95bf4328-d8c9-52b1-9074-0e246e0f9fe2", "reviewed_at": "16/01/2022 16:18:05", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 190.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 8.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 2.0, "review_description_stringindexer_transform": 1.0, "recommended_review_stringindexer_transform": 3.0, "verifed_purchaser_stringindexer_transform": 3.0, "helpful_count_stringindexer_transform": 34.0, "not_helpful_count_stringindexer_transform": 24.0, "reviewed_at_stringindexer_transform": 12.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "379", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Drumfreak117", "review_title": "Awesome game for all", "review_description": "Excellent game especially for kids and new gamers looking to learn, but still complicated and fun enough for an experienced vet.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126279116", "uniq_id": "c0601d16-e5fe-5975-a114-e857b25aef61", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 173.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 390.0, "review_title_stringindexer_transform": 39.0, "review_description_stringindexer_transform": 348.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 138.0, "uniq_id_stringindexer_transform": 264.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "380", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "TitusJ99", "review_title": "Yoshi's Flabby World", "review_description": "Really boring and lackluster. Fun platforming but not much else. Good for kids, not for adults.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "7", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126277361", "uniq_id": "c2e549f2-3344-5ca7-9e6a-2b4bd5a25504", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 474.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 6.0, "review_title_stringindexer_transform": 382.0, "review_description_stringindexer_transform": 18.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 10.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 149.0, "uniq_id_stringindexer_transform": 257.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "381", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "MotherMayI", "review_title": "Crafty Business", "review_description": "Cute game I can play with the family. I love how interactive it is. You can knock over things in the foreground and background.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126273657", "uniq_id": "ea57e9d3-97b4-56a0-b046-1b7024e7f67a", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 9.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 351.0, "review_title_stringindexer_transform": 241.0, "review_description_stringindexer_transform": 385.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 219.0, "uniq_id_stringindexer_transform": 273.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "382", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "LaBestia", "review_title": "Great tv quality - could use a microphone remote", "review_description": "This tv has been fantastic and especially since we recently purchased a 5.1 Dolby surround system. Mandalorian looks, and sounds amazing now after getting this tv. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 139.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 259.0, "review_title_stringindexer_transform": 239.0, "review_description_stringindexer_transform": 171.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "The one thing that would truly be the cherry on top", "name": " would be to have a microphone on the remote control to search for a program like the roku\u2019s do. ", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 227.0, "name_stringindexer_transform": 22.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Overall", "name": " it is a good sized tv with an amazing picture. Well worth it.\"", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "5", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "226749057", "reviewed_at": "4b63751b-d4c0-5c5f-9138-59a473a7daaa", "rating": "16/01/2022 16:18:05", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 0.0, "name_stringindexer_transform": 30.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 1.0, "review_description_stringindexer_transform": 4.0, "recommended_review_stringindexer_transform": 4.0, "verifed_purchaser_stringindexer_transform": 4.0, "helpful_count_stringindexer_transform": 4.0, "not_helpful_count_stringindexer_transform": 29.0, "reviewed_at_stringindexer_transform": 30.0, "rating_stringindexer_transform": 6.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "383", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Lauri49", "review_title": "Beautiful color!", "review_description": "Super impressed with the clarity and color of the picture.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226733824", "uniq_id": "7c5e8e10-dca1-528f-875b-96f7b995033a", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 269.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 124.0, "review_title_stringindexer_transform": 256.0, "review_description_stringindexer_transform": 64.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 252.0, "uniq_id_stringindexer_transform": 269.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "384", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "jmrichard427", "review_title": "Fantastic picture", "review_description": "Great picture and easy to use enjoy it very much!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226732965", "uniq_id": "60bdb40e-e15c-5bfa-967b-9aa559482629", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 447.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 209.0, "review_title_stringindexer_transform": 114.0, "review_description_stringindexer_transform": 221.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 303.0, "uniq_id_stringindexer_transform": 197.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "385", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Tom42", "review_title": "Great picture", "review_description": "Bought for picture quality and I am not disappointed. It is fabulous. I am actually surprised at how wonderful the display is in my home. Very satisfied and would buy again. If it goes on sale anytime soon I will buy another one for another room in my home.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226732331", "uniq_id": "23656563-b23a-5a13-b5c5-5ab4eaabf6e9", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 97.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 393.0, "review_title_stringindexer_transform": 3.0, "review_description_stringindexer_transform": 235.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 180.0, "uniq_id_stringindexer_transform": 183.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "386", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Cowboy101084", "review_title": "Great picture", "review_description": "I am really happy with my purchase. Visio knocked it out of the park with this one.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226732189", "uniq_id": "74c08633-86e1-5e62-a815-f443ab052ecd", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 272.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 71.0, "review_title_stringindexer_transform": 3.0, "review_description_stringindexer_transform": 178.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 65.0, "uniq_id_stringindexer_transform": 48.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "387", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Mugen", "review_title": "Great but...", "review_description": "It's a great tv. This is my first oled and it works great with my xbox series x. My only issue is that it keeps putting itself back on warm color temp very often.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226723463", "uniq_id": "3ff9d937-f377-5e4e-b3a8-ba7eb733ad07", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 192.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 234.0, "review_title_stringindexer_transform": 145.0, "review_description_stringindexer_transform": 115.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 81.0, "uniq_id_stringindexer_transform": 118.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "388", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Suzey", "review_title": "What a picture!", "review_description": "Bought this TV a couple of weeks ago to replace a five year old Visio.  Our previous TV was top of the line back then.(240 refresh rate, etc.)  This new TV is fantastic!  What a picture!  Well worth it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226718702", "uniq_id": "2620434c-3ae6-501e-ae0e-15e040f9a198", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 11.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 279.0, "review_title_stringindexer_transform": 270.0, "review_description_stringindexer_transform": 103.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 73.0, "uniq_id_stringindexer_transform": 147.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "389", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Concerned vizio tv owner.", "review_title": "Terrible software", "review_description": "I bought the tv about a month ago and have never had as many problems with a tv in my life. Vizio has a reputable name so of course I wanted to give the oled a try. Day one when I got the tv home it wouldn\u2019t power up. So after plugging the tv up and unplugging it a few times I got it to power up. The oled does have a beautiful picture but now every morning when I want to turn on the tv it won\u2019t power up again. I have to unplug the tv for 30 minutes EVERY morning for it to come on now. While I\u2019m watching tv the sound just goes away at times and I have to reboot the tv sometimes 3 times before the sound comes back on. At times the hdmi won\u2019t recognize it has the cable or game system connected so I have to turn it off and on again when that happens. This is just unacceptable from vizio. I hear there will be firmware updates but how long will that take?  I don\u2019t know what to do should I return the tv and try another vizio oled or just stay clear of vizio because this is the beat quality they can produce right now", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226704721", "uniq_id": "2cd61b63-9d87-5b31-a9f0-29eb39dc6df2", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 335.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 225.0, "review_title_stringindexer_transform": 267.0, "review_description_stringindexer_transform": 242.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 290.0, "uniq_id_stringindexer_transform": 281.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "390", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "mh061", "review_title": "Beautiful Picture", "review_description": "I bought this TV several weeks ago and I couldn't be happier. The difference between OLED and anything else is astonishing. Highly recommended!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226700717", "uniq_id": "3dab1ab5-cb69-58f7-819d-dff2b315d6af", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 135.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 64.0, "review_title_stringindexer_transform": 275.0, "review_description_stringindexer_transform": 75.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 163.0, "uniq_id_stringindexer_transform": 161.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "391", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Golam41", "review_title": "look out gamerz, here comez awsome", "review_description": "I\u2019m having multiple issues with it. Tried to set it up with my Xbox X series too play in 4K resolution but the screen goes black. When I did change some settings to get the TV too play my Xbox in 4K it wouldn\u2019t turn back on after I had turned it off from playing. I had to physically unplug and plug it back into the wall too got it too come back on.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226700432", "uniq_id": "8592ca19-f069-5470-92be-ef5503f7df48", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 299.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 98.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 19.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 36.0, "uniq_id_stringindexer_transform": 146.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "392", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "KLP26", "review_title": "Great Features!", "review_description": "[This review was collected as part of a promotion.] This controller works great with our Nintendo Switch! I love the fact that it is wireless and vibrates while we play. It is also easy to use and handle! We are a family of 4 so I will be buying 3 more of these soon! Highly recommend for anyone who has a Nintendo Switch!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122087294", "uniq_id": "3add2868-0cfc-5f48-8791-d926b2dbded2", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 120.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 50.0, "review_title_stringindexer_transform": 352.0, "review_description_stringindexer_transform": 346.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 80.0, "uniq_id_stringindexer_transform": 300.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "393", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Mdcsooc7", "review_title": "Great controller", "review_description": "[This review was collected as part of a promotion.] I love the fact that it is wireless and I don't have to deal with wires being all tangled up. It's easy to hold, perfect size and weight for my hands. Very pleased with it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122023762", "uniq_id": "ad9b54e3-4762-590b-a852-63af3528cbbd", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 126.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 190.0, "review_title_stringindexer_transform": 4.0, "review_description_stringindexer_transform": 77.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 158.0, "uniq_id_stringindexer_transform": 341.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "394", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Joedtip", "review_title": "Great Features", "review_description": "[This review was collected as part of a promotion.] The Enhanced Wireless Controller for Nintendo Switch is easy to set up and use.  I love the Mario on it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "122010486", "uniq_id": "385e416e-b857-55ee-ac2a-0576072e6373", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 288.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 315.0, "review_title_stringindexer_transform": 157.0, "review_description_stringindexer_transform": 118.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 232.0, "uniq_id_stringindexer_transform": 58.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "395", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Cvoshell4", "review_title": "Great product!", "review_description": "[This review was collected as part of a promotion.] Power A Enchanted Wireless Controller for Nintendo Switch works great! Love this item, it is easy to hold, and very easy to use and connect to console. Seems like it is very sturdy as well.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121995492", "uniq_id": "e052cd77-4a49-532c-879f-d46458da984a", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 398.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 35.0, "review_title_stringindexer_transform": 72.0, "review_description_stringindexer_transform": 33.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 206.0, "uniq_id_stringindexer_transform": 262.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "396", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Missy23", "review_title": "Love", "review_description": "[This review was collected as part of a promotion.] This item came in no time after ordering it which was a plus. It was easy to set up with the game system my boys were super excited and love it.. Now I\u2019m forced to buy another one so both of them can play together.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121974894", "uniq_id": "afd78dcb-1b2b-5967-bdaf-e82cc7a64652", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 86.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 241.0, "review_title_stringindexer_transform": 64.0, "review_description_stringindexer_transform": 73.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 23.0, "uniq_id_stringindexer_transform": 79.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "397", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Kiki2014", "review_title": "Amazing controller", "review_description": "[This review was collected as part of a promotion.] I just got the Enhanced Wireless Controller for Nintendo Switch and I must say I was surprised with the quality of it . It definitely makes playing so much easier especially when it comes to certain games.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121930697", "uniq_id": "db126a54-89c7-5ad8-ba95-641b8c223538", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 293.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 200.0, "review_title_stringindexer_transform": 23.0, "review_description_stringindexer_transform": 132.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 130.0, "uniq_id_stringindexer_transform": 74.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "398", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Mama", "review_title": "Great product!!", "review_description": "[This review was collected as part of a promotion.] This is a wonderful remote it\u2019s make playing the Nintendo switch so much easier. I love the remote it fits perfect in my hand as well my child\u2019s hand! This is so easy to use and much more better for the switch! I highly recommend this remote for anybody that has a Nintendo switch!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121884814", "uniq_id": "19ee363b-60a8-5ded-96af-6f28febe3495", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 176.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 247.0, "review_title_stringindexer_transform": 56.0, "review_description_stringindexer_transform": 312.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 308.0, "uniq_id_stringindexer_transform": 175.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "399", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "M3WILKERSON", "review_title": "So retro!", "review_description": "[This review was collected as part of a promotion.] This works perfectly and has alot of extra controls and features.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121884636", "uniq_id": "2d355f38-1266-5775-9058-b21faddb6072", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 118.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 396.0, "review_title_stringindexer_transform": 89.0, "review_description_stringindexer_transform": 106.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 99.0, "uniq_id_stringindexer_transform": 370.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "400", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Beau C", "review_title": "Works great", "review_description": "[This review was collected as part of a promotion.] I love this remote. It is easy to connect and use. The remote itself is well made and comfortable to hold. The fact that it is wireless is great and makes gaming more enjoyable. It does take batteries, but battery life is long. It is a perfect remote for any gamer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121868056", "uniq_id": "bef4412d-50fc-579b-a749-e67a52661770", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 40.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 369.0, "review_title_stringindexer_transform": 289.0, "review_description_stringindexer_transform": 272.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 376.0, "uniq_id_stringindexer_transform": 28.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "401", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Lisalou5150", "review_title": "Love it!", "review_description": "[This review was collected as part of a promotion.] I received this controller to test out and review. I suprised my 12 year old with it and he just loved it! He loves that it's wireless. He said it was so cool that he wanted to get his friend one for Christmas! So this is definitely kid approved. Thank you for this opportunity you made one kid very happy!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121864917", "uniq_id": "7b82a6a3-87e7-5cfe-876f-56a53ab2eecd", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 479.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 260.0, "review_title_stringindexer_transform": 184.0, "review_description_stringindexer_transform": 119.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 60.0, "uniq_id_stringindexer_transform": 51.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "402", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Videogamegente", "review_title": "Great for younger kids", "review_description": "This game is perfect for my first grader.  She can play alone, or we can add a Yoshi for a level and I can play with her.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126268175", "uniq_id": "fd975a90-b8e3-5159-8130-c50c5ac945eb", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 370.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 361.0, "review_title_stringindexer_transform": 94.0, "review_description_stringindexer_transform": 248.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 142.0, "uniq_id_stringindexer_transform": 315.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "403", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JJ77GB", "review_title": "Fun game, awesome graphics", "review_description": "Awesome game.  Amateur to intermediate skill level with a few hard levels but once you get to the end you\u2019ll play like a pro.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126265497", "uniq_id": "bd4d2b81-94df-5627-889b-21872c0e777d", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 215.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 238.0, "review_title_stringindexer_transform": 299.0, "review_description_stringindexer_transform": 429.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 277.0, "uniq_id_stringindexer_transform": 346.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "404", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JDHarsh", "review_title": "Cute and fun!", "review_description": "This game is so cute, easy and mellow. This game can be played with up to two players. My husband and I took turns playing with our 5yr old, he loved it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126261158", "uniq_id": "ef5055a5-a02c-5472-87a9-158244c487f6", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 67.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 268.0, "review_title_stringindexer_transform": 179.0, "review_description_stringindexer_transform": 331.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 214.0, "uniq_id_stringindexer_transform": 6.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "405", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Greenender23", "review_title": "Needs a better soundtrack.", "review_description": "Fun and easy. Though the sound track sounds very uninspired. If only Crafted worlds soundtrack could take note from Yoshi Story.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126253606", "uniq_id": "86d8bb86-c5df-535b-9e95-d709cf4b5922", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 320.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 55.0, "review_title_stringindexer_transform": 77.0, "review_description_stringindexer_transform": 74.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 19.0, "uniq_id_stringindexer_transform": 379.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "406", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Arjei Lynne", "review_title": "Just my thoughts", "review_description": "It\u2019s a real fun and easy game to play. I\u2019m not sure if there\u2019s a way to do increase difficulty since it only comes with two modes and I play classic. Regardless, the battles are fun, and if you want a game where you don\u2019t have to think way to hard this is it. I love the graphics and I love the creativity that goes into it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126259865", "uniq_id": "17905c2b-6d32-56c8-b6eb-5d4ab9f2f219", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 471.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 7.0, "review_title_stringindexer_transform": 360.0, "review_description_stringindexer_transform": 350.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 258.0, "uniq_id_stringindexer_transform": 121.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "407", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Abish", "review_title": "Short and sweet", "review_description": "A charming easy to play title that's perfect for young  kids.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126258810", "uniq_id": "19a05085-2d6f-5a53-9fe9-8dc9942c7879", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 109.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 292.0, "review_title_stringindexer_transform": 220.0, "review_description_stringindexer_transform": 139.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 126.0, "uniq_id_stringindexer_transform": 185.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "408", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Simi90", "review_title": "Great game", "review_description": "Overall great game. Interesting and has different elements than other Yoshi games to date. My son absolutely loves it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126258784", "uniq_id": "e5c8c18d-9848-59fe-9d4a-12c604a675b0", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 232.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 161.0, "review_title_stringindexer_transform": 10.0, "review_description_stringindexer_transform": 238.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 106.0, "uniq_id_stringindexer_transform": 231.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "409", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Davebasura", "review_title": "Yoshi", "review_description": "They should know that it\u2019s fun & cute & for all ages.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126256170", "uniq_id": "e6a73770-f7cd-564e-bf77-367069bbcb04", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 282.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 91.0, "review_title_stringindexer_transform": 15.0, "review_description_stringindexer_transform": 23.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 78.0, "uniq_id_stringindexer_transform": 253.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "410", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "JCMA", "review_title": "Beautifully Developed!", "review_description": "Beautifully developed with great music. It appears as only for kids but don\u2019t be fooled. This game has enough puzzles and the replay value is definatley there!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126249716", "uniq_id": "fee58b67-3483-5b70-bcb6-74e5f0e93fdb", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 137.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 348.0, "review_title_stringindexer_transform": 309.0, "review_description_stringindexer_transform": 95.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 349.0, "uniq_id_stringindexer_transform": 64.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "411", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Pappabear03187", "review_title": "My Yoshi Experience", "review_description": "At first glance you would think this is a kid game and has no entertainment value for adults. I will tell you first hand, that is not the case with this game. The visuals are stunning and there is plenty of action packed platforming for everyone.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126252644", "uniq_id": "f882a003-351a-5ef7-b7b7-757d81ef4495", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 43.0, "name_stringindexer_transform": 0.0, "brand_stringindexer_transform": 0.0, "sku_stringindexer_transform": 1.0, "reviewer_name_stringindexer_transform": 65.0, "review_title_stringindexer_transform": 368.0, "review_description_stringindexer_transform": 397.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 1.0, "helpful_count_stringindexer_transform": 2.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 0.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 0.0, "reviews_count_stringindexer_transform": 0.0, "comment_id_stringindexer_transform": 140.0, "uniq_id_stringindexer_transform": 380.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "412", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Liberty25", "review_title": "OLED55H-1 Sucks!", "review_description": "Where to start... do not buy this tv for a next gen console. You have to manually change the input setting from HDMI AUTO to HDMI 2.1 for the Xbox to recognize the 4K @ 120hz. If that wasn\u2019t annoying enough the specs said ALLM, HDR, and VRR. When you go to the TV info screen says no to HDR and VRR. Then proceeded to give the TV another chance by using the apps it offers. What a joke! The screen went green and kept flashing the picture. I tried five to six apps. All the same outcome. Finally on day three of owning it... it quit showing the picture for the Xbox. To confirm it wasn\u2019t the Xbox Series X I switched back to my Samsung Q70R TV which has a better picture and does everything, but 4K @ 120hz abs is still to this day running fine. Needless to say I shouldn\u2019t have bought a VIZIO in the first place like my gut told me. I wasted my gas and time on this TV.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226679986", "uniq_id": "d736627e-a587-5ffc-b505-49e31c8867f4", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 405.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 300.0, "review_title_stringindexer_transform": 255.0, "review_description_stringindexer_transform": 266.0, "recommended_review_stringindexer_transform": 1.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 3.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 105.0, "uniq_id_stringindexer_transform": 293.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "413", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ghost Dylan", "review_title": "Has everything you want for an Oled Tv", "review_description": "I bought this almost two weeks ago and next to my brothers LG Oled it holds its own for the price. As a pure Oled screen this is the way to go but It\u2019s not perfect which is to be expected for the price as a budget Oled. It\u2019s native apps that don\u2019t support the tv\u2019s high resolution will have noticeable pixels and it\u2019s already showing signs of Oled burn in if you keep the same image on for more than one minute, you should allow rest mode after 15 sec of inactivity, I\u2019m serious! Just be gentle with the tv and don\u2019t forget to turn it off and you will get an amazing tv.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226677148", "uniq_id": "995d0ca0-de0d-58fa-90d5-7d9799b0e36d", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 267.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 402.0, "review_title_stringindexer_transform": 316.0, "review_description_stringindexer_transform": 121.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 373.0, "uniq_id_stringindexer_transform": 246.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "414", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jasper L.", "review_title": "All the bells and whistles!", "review_description": "No other brand Tv can compete with the quality and price of this TV!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226674137", "uniq_id": "29f3ac3e-d2fb-5187-a780-1670136e97a0", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 167.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 291.0, "review_title_stringindexer_transform": 257.0, "review_description_stringindexer_transform": 149.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 234.0, "uniq_id_stringindexer_transform": 34.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "415", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "VinnyD", "review_title": "Awesome!", "review_description": "For those having trouble gaming in 120hz, you have to change the settings to 2.1 on your hdmi 2. I almost didn't buy because the reviews on gaming saying it wouldn't do 120hz at 4k but it absolutely will and the Xbox verified that. Just change your settings to 2.1. The best picture quality on any TV I've ever owned. Truly amazing!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226672941", "uniq_id": "206cfb0b-c2bd-5c16-8699-f8f01d670f44", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 71.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 330.0, "review_title_stringindexer_transform": 18.0, "review_description_stringindexer_transform": 68.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 271.0, "uniq_id_stringindexer_transform": 53.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "416", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "adrianiii", "review_title": "Great picture! Great sound!", "review_description": "I've been looking at the new OLED model tvs for a while and I'm so glad I finally purchased my very own OLED 4K tv.  The picture is incredible even if what you're watching isn't in High Def.  High def channels and movies look so good but the 4K programming is insanely sharp. It looks as if you're actually there", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226663884", "uniq_id": "268a103b-4fb8-5479-8872-9cb3d3383705", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 384.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 27.0, "review_title_stringindexer_transform": 46.0, "review_description_stringindexer_transform": 13.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 220.0, "uniq_id_stringindexer_transform": 187.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "417", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bgerald", "review_title": "Great picture", "review_description": "This was a great purchase. Perfect blacks and beautiful color reproduction. I am impressed with the build quality and the attention to detailed such as the the wiring placement. Also the apps that\u2019s included are amazing. It also has Apple TV!! The only thing missing is a voice search on the remote. Other than that great purchase and extremely happy.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226662940", "uniq_id": "8cceda67-4c9c-5187-8a0e-fae36799ed85", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 491.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 47.0, "review_title_stringindexer_transform": 3.0, "review_description_stringindexer_transform": 186.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 2.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 330.0, "uniq_id_stringindexer_transform": 107.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "418", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "JON205", "review_title": "Great Choice", "review_description": "So far so good.  Enjoying the difference that OLED offers.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226662747", "uniq_id": "bef97385-8ff8-50e6-940f-f0f05b81a9c4", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 75.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 340.0, "review_title_stringindexer_transform": 308.0, "review_description_stringindexer_transform": 340.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 285.0, "uniq_id_stringindexer_transform": 309.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "419", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Joey D215", "review_title": "Awesome TV for the PS5 !", "review_description": "Just picked this TV up a couple weeks ago did a lot of research thanks to YouTube and saw that this was the TV to get for gaming A++", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226661973", "uniq_id": "53298df5-7dec-51dc-b18f-29b2a7165011", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 221.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 33.0, "review_title_stringindexer_transform": 276.0, "review_description_stringindexer_transform": 26.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 83.0, "uniq_id_stringindexer_transform": 170.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "420", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TomsVizio", "review_title": "Almost great for gaming", "review_description": "120hrz, VRR, VRR+HDR, black screen but at 60htz it looks great! Vizio please fix.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 459.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 355.0, "review_title_stringindexer_transform": 354.0, "review_description_stringindexer_transform": 357.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Thx", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 42.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "Xbox Series x\"", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "3", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "226623767", "not_helpful_count": "6e496bf1-e93c-58ac-8889-a3a9b9b69afa", "reviewed_at": "16/01/2022 16:18:05", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 231.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 6.0, "reviewer_name_stringindexer_transform": 1.0, "review_title_stringindexer_transform": 5.0, "review_description_stringindexer_transform": 6.0, "recommended_review_stringindexer_transform": 2.0, "verifed_purchaser_stringindexer_transform": 2.0, "helpful_count_stringindexer_transform": 26.0, "not_helpful_count_stringindexer_transform": 23.0, "reviewed_at_stringindexer_transform": 12.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "421", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ricw", "review_title": "look out gamerz, here comez awsome", "review_description": "Excellent TV! Beautiful.picture. Easy to use, with enough extras .", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226608892", "uniq_id": "47719f17-1a09-557b-a952-c2ed310910b1", "scraped_at": "16/01/2022 16:18:05", "index_stringindexer_transform": 69.0, "name_stringindexer_transform": 1.0, "brand_stringindexer_transform": 1.0, "sku_stringindexer_transform": 0.0, "reviewer_name_stringindexer_transform": 321.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 102.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 1.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 1.0, "reviews_count_stringindexer_transform": 1.0, "comment_id_stringindexer_transform": 113.0, "uniq_id_stringindexer_transform": 96.0, "scraped_at_stringindexer_transform": 5.0}, {"index": "422", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "JustJess76", "review_title": "Great controller!!", "review_description": "[This review was collected as part of a promotion.] This is a great addition to our Nintendo Switch. Easy to set up and easy to use. I highly recommend!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121860312", "uniq_id": "a0548af2-8959-52a2-ab05-c73a838d9145", "scraped_at": "16/01/2022 16:18:06", "index_stringindexer_transform": 216.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 140.0, "review_title_stringindexer_transform": 182.0, "review_description_stringindexer_transform": 296.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 0.0, "not_helpful_count_stringindexer_transform": 0.0, "reviewed_at_stringindexer_transform": 5.0, "rating_stringindexer_transform": 0.0, "average_rating_stringindexer_transform": 4.0, "reviews_count_stringindexer_transform": 4.0, "comment_id_stringindexer_transform": 243.0, "uniq_id_stringindexer_transform": 182.0, "scraped_at_stringindexer_transform": 11.0}, {"index": "423", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Pvtcarlswife", "review_title": "Great bonus features and love graphics", "review_description": "[This review was collected as part of a promotion.] I got this for my son and grandson who play the switch together. My son is an old school Nintendo fan so when I saw this with the old graphics I got it immediately. ", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 379.0, "name_stringindexer_transform": 4.0, "brand_stringindexer_transform": 4.0, "sku_stringindexer_transform": 5.0, "reviewer_name_stringindexer_transform": 103.0, "review_title_stringindexer_transform": 262.0, "review_description_stringindexer_transform": 152.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "He absolutely loves it. It linked up easily and is user friendly. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 338.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}, {"index": "He loves the two on the fly buttons he can map to Make his play more custom. ", "name": "yes: I recommend this product", "brand": "yes: I recommend this product", "sku": "yes: I recommend this product", "reviewer_name": "zachR", "review_title": "look out gamerz, here comez awsome", "review_description": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "yes: I recommend this product", "helpful_count": "Verified Purchaser", "not_helpful_count": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "reviewed_at": "fa660933-1130-5c66-9010-24d641f70bc7", "rating": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "average_rating": "ef72459e-8f5c-57dc-af42-0127d2903498", "reviews_count": "4.6556", "comment_id": "95223899", "uniq_id": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "scraped_at": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "index_stringindexer_transform": 98.0, "name_stringindexer_transform": 3.0, "brand_stringindexer_transform": 3.0, "sku_stringindexer_transform": 3.0, "reviewer_name_stringindexer_transform": 0.0, "review_title_stringindexer_transform": 0.0, "review_description_stringindexer_transform": 0.0, "recommended_review_stringindexer_transform": 0.0, "verifed_purchaser_stringindexer_transform": 0.0, "helpful_count_stringindexer_transform": 1.0, "not_helpful_count_stringindexer_transform": 1.0, "reviewed_at_stringindexer_transform": 2.0, "rating_stringindexer_transform": 1.0, "average_rating_stringindexer_transform": 2.0, "reviews_count_stringindexer_transform": 2.0, "comment_id_stringindexer_transform": 0.0, "uniq_id_stringindexer_transform": 0.0, "scraped_at_stringindexer_transform": 0.0}], "FE": [{"transformationsData": [{"feature_label": "index", "transformation_label": "String Indexer"}], "feature": "index", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "211.5", "stddev": "122.54", "min": "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "max": "in between each secret is so satisfying.\"", "missing": "0", "distinct": "499"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "index"}, {"transformationsData": [{"feature_label": "name", "transformation_label": "String Indexer"}], "feature": "name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "469", "mean": "", "stddev": "", "min": " and they kind of fight over it.  They really like the retro Mario on the controller", "max": "yes: I recommend this product", "missing": "31", "distinct": "38"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "name"}, {"transformationsData": [{"feature_label": "brand", "transformation_label": "String Indexer"}], "feature": "brand", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "451", "mean": "", "stddev": "", "min": " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", "max": "yes: I recommend this product", "missing": "49", "distinct": "22"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "brand"}, {"transformationsData": [{"feature_label": "sku", "transformation_label": "String Indexer"}], "feature": "sku", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "451", "mean": "266631.73", "stddev": "99207.12", "min": " #1 is eARC (awesome)", "max": "yes: I recommend this product", "missing": "49", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "sku"}, {"transformationsData": [{"feature_label": "reviewer_name", "transformation_label": "String Indexer"}], "feature": "reviewer_name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "453", "mean": "19.92", "stddev": "101.18", "min": " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "max": "zachR", "missing": "47", "distinct": "416"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviewer_name"}, {"transformationsData": [{"feature_label": "review_title", "transformation_label": "String Indexer"}], "feature": "review_title", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "445", "mean": "0.0", "stddev": "0.0", "min": " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "max": "look out gamerz, here comez awsome", "missing": "55", "distinct": "393"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "review_title"}, {"transformationsData": [{"feature_label": "review_description", "transformation_label": "String Indexer"}], "feature": "review_description", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "454", "mean": "3.84", "stddev": "1.83", "min": " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "max": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "missing": "46", "distinct": "435"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "review_description"}, {"transformationsData": [{"feature_label": "recommended_review", "transformation_label": "String Indexer"}], "feature": "recommended_review", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "425", "mean": "4.09", "stddev": "1.21", "min": " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", "max": "yes: I recommend this product", "missing": "75", "distinct": "20"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "recommended_review"}, {"transformationsData": [{"feature_label": "verifed_purchaser", "transformation_label": "String Indexer"}], "feature": "verifed_purchaser", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "258", "mean": "655.06", "stddev": "958.24", "min": " and to get 4K", "max": "yes: I recommend this product", "missing": "242", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "verifed_purchaser"}, {"transformationsData": [{"feature_label": "helpful_count", "transformation_label": "String Indexer"}], "feature": "helpful_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "424", "mean": "7017251.36", "stddev": "36576741.04", "min": " 2", "max": "Verified Purchaser", "missing": "76", "distinct": "36"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "helpful_count"}, {"transformationsData": [{"feature_label": "not_helpful_count", "transformation_label": "String Indexer"}], "feature": "not_helpful_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "424", "mean": "4495646.89", "stddev": "30454540.27", "min": " 3", "max": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "missing": "76", "distinct": "47"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "not_helpful_count"}, {"transformationsData": [{"feature_label": "reviewed_at", "transformation_label": "String Indexer"}], "feature": "reviewed_at", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "423", "mean": "91221663.0", "stddev": "124910521.85", "min": " and Experimental", "max": "fa660933-1130-5c66-9010-24d641f70bc7", "missing": "77", "distinct": "46"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviewed_at"}, {"transformationsData": [{"feature_label": "rating", "transformation_label": "String Indexer"}], "feature": "rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "406", "mean": "313231.79", "stddev": "6185743.26", "min": " and no larger maps to choose from. In the first version you had a large selection of maps", "max": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "missing": "94", "distinct": "19"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "rating"}, {"transformationsData": [{"feature_label": "average_rating", "transformation_label": "String Indexer"}], "feature": "average_rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "398", "mean": "4.44", "stddev": "0.43", "min": " and experimental units are really not that great", "max": "ef72459e-8f5c-57dc-af42-0127d2903498", "missing": "102", "distinct": "16"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "average_rating"}, {"transformationsData": [{"feature_label": "reviews_count", "transformation_label": "String Indexer"}], "feature": "reviews_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "396", "mean": "978.9", "stddev": "1006.83", "min": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "max": "4.6556", "missing": "104", "distinct": "13"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviews_count"}, {"transformationsData": [{"feature_label": "comment_id", "transformation_label": "String Indexer"}], "feature": "comment_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "165972981.36", "stddev": "56535283.62", "min": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "max": "95223899", "missing": "105", "distinct": "395"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "comment_id"}, {"transformationsData": [{"feature_label": "uniq_id", "transformation_label": "String Indexer"}], "feature": "uniq_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "117776414.0", "stddev": "113745916.96", "min": " don't make the same mistake I did. Do not buy this game.\"", "max": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "missing": "105", "distinct": "395"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "uniq_id"}, {"transformationsData": [{"feature_label": "scraped_at", "transformation_label": "String Indexer"}], "feature": "scraped_at", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "3.41", "stddev": "nan", "min": " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "max": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "missing": "105", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "scraped_at"}, {"feature": "index_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "248.5", "stddev": "144.48", "min": "0.0", "max": "498.0", "missing": "0"}, "updatedLabel": "index_stringindexer_trans..."}, {"feature": "name_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.87", "stddev": "5.64", "min": "0.0", "max": "37.0", "missing": "0"}, "updatedLabel": "name_stringindexer_transf..."}, {"feature": "brand_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.07", "stddev": "2.84", "min": "0.0", "max": "21.0", "missing": "0"}, "updatedLabel": "brand_stringindexer_trans..."}, {"feature": "sku_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.0", "stddev": "2.39", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "sku_stringindexer_transfo..."}, {"feature": "reviewer_name_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "172.75", "stddev": "134.22", "min": "0.0", "max": "415.0", "missing": "0"}, "updatedLabel": "reviewer_name_stringindex..."}, {"feature": "review_title_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "154.81", "stddev": "128.01", "min": "0.0", "max": "392.0", "missing": "0"}, "updatedLabel": "review_title_stringindexe..."}, {"feature": "review_description_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "188.88", "stddev": "138.02", "min": "0.0", "max": "434.0", "missing": "0"}, "updatedLabel": "review_description_string..."}, {"feature": "recommended_review_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.67", "stddev": "2.24", "min": "0.0", "max": "19.0", "missing": "0"}, "updatedLabel": "recommended_review_string..."}, {"feature": "verifed_purchaser_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.83", "stddev": "1.77", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "verifed_purchaser_stringi..."}, {"feature": "helpful_count_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.82", "stddev": "5.31", "min": "0.0", "max": "35.0", "missing": "0"}, "updatedLabel": "helpful_count_stringindex..."}, {"feature": "not_helpful_count_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.58", "stddev": "7.87", "min": "0.0", "max": "46.0", "missing": "0"}, "updatedLabel": "not_helpful_count_stringi..."}, {"feature": "reviewed_at_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "4.37", "stddev": "7.76", "min": "0.0", "max": "45.0", "missing": "0"}, "updatedLabel": "reviewed_at_stringindexer..."}, {"feature": "rating_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.11", "stddev": "2.26", "min": "0.0", "max": "18.0", "missing": "0"}, "updatedLabel": "rating_stringindexer_tran..."}, {"feature": "average_rating_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.89", "stddev": "2.04", "min": "0.0", "max": "15.0", "missing": "0"}, "updatedLabel": "average_rating_stringinde..."}, {"feature": "reviews_count_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.77", "stddev": "1.7", "min": "0.0", "max": "12.0", "missing": "0"}, "updatedLabel": "reviews_count_stringindex..."}, {"feature": "comment_id_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "155.63", "stddev": "129.4", "min": "0.0", "max": "394.0", "missing": "0"}, "updatedLabel": "comment_id_stringindexer_..."}, {"feature": "uniq_id_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "155.63", "stddev": "129.4", "min": "0.0", "max": "394.0", "missing": "0"}, "updatedLabel": "uniq_id_stringindexer_tra..."}, {"feature": "scraped_at_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "3.75", "stddev": "3.19", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "scraped_at_stringindexer_..."}], "samplecount": 500, "message": "Successfully executed", "status": 1, "userid": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "FEGraph": [{"values": {"label": ["0", "1", "2", "3", "FYI...the 65\u201d HD television I had to replace was a Samsung that was about 4 or 5 years old that stopped working after some loud cracking and popping noises that sounded like the transformer on an overhead power line blowing out. However", "4", "5", "6", "7", "8", "I am so happy to have this wonderful big one for my first OLED TV", "9", "10", "11", "12", "13", "14", "15", "16", "17", "This thing is only $20 more than the ES2", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "The \u201ccrafted world\u201d is exceptionally detailed", "The gameplay is tight", "Most importantly", "28", "29", "30", "31", "32", "He agreed this morning while watching NASCAR that I was right. Yeah for me.\"", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "Wonderful OLED TV\"", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "More color Yoshi\u2019s to choose from and a forward and backwards game in every course. It\u2019s a lovable game to play!\"", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "Pros:", "1. The picture is absolutely gorgeous and you can tune it further to your choice.", "2. The Smartcast interface is decent.", "3. The remote is also not bad at all.", "4. Very quick to connect apple play. ", "5. There are ample connection options for my bedroom", "Cons:", "1. Cast is buggy. I can never get it to run first time. This is where I would focus most of the development time if I were Vizio.", "2. Smart Cast does not have a browser app that is accessible easily.", "3. There is no easy way to add more apps that are not already in the Vizio library.", "4. The detail picture quality will not go up to the level you get out of a top line OLED. ", "5. The bezel is still not near zero bezel size. It is sizable to be noticeable.", "Overall", "95", "The Good: Smart casting features. ", "The Bad: Pre-calibrations could improve", "THE UGLY: Very Very buggy software. Doesn't start a lot of times and have to re-plug many times. Brings me Anxiety.\"", "96", "A few quirks with the PS5 too. Sometimes when I power on the TV it also turns on the PS5. Sometimes when I power on the PS5 the TV turns on too. Neither seems to be consistent. ", "Needs and HBO Max app. Also needs to be able to disable inputs from the list like in previous Vizio models. ", "All minor issues and possibly handled via software or firmware updates. The hardware is solid though.\"", "97", "98", "99", "100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "120", "121", "122", "123", "124", "125", "126", "127", "128", "129", "130", "131", "132", "133", "134", "Make", "Stuff in your house.\"", "135", "136", "137", "138", "139", "140", "The important thing you might not first look for in a TV is how black the blacks are", "The only issue I have is the speakers leave a bit to be desired. They\u2019re ok", "141", "142", "143", "144", "145", "146", "147", "148", "149", "150", "151", "152", "153", "154", "155", "156", "157", "158", "159", "160", "161", "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "The picture is beyond amazing!! OS is smooth and video games look so darn good! Im buying the 65\"\" for the front room next week!\"", "172", "I\u2019d love to be able to recommend merely because of the picture and viewing angles alone", "173", "174", "175", "176", "177", "178", "I am so glad I gave it a chance!\"", "179", "180", "181", "182", "183", "184", "185", "186", "187", "188", "189", "190", "191", "Going back and forth between each level", "in between each secret is so satisfying.\"", "192", "193", "194", "195", "196", "197", "198", "199", "200", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "212", "213", "214", "215", "216", "217", "218", "219", "220", "221", "222", "223", "224", "225", "226", "227", "228", "229", "230", "231", "232", "233", "234", "235", "236", "237", "238", "239", "240", "241", "242", "243", "244", "245", "246", "247", "248", "249", "250", "251", "252", "253", "254", "255", "256", "257", "258", "259", "260", "261", "262", "263", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "It's great...color", "275", "276", "277", "278", "279", "With its easy to mount", "Out of the box it had a firmware update. and then a week later another.  the 2nd was a bit rude", "I am using the amazing OLED with a brand new 4k reciever with eARC.  So everying goes through the Amplifiter through a high end HDMI ARC certified cable to the TV's HDMI 1 (eArc).  Most days its running fantastic and smooth as expected.  Although", "280", "281", "282", "283", "284", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "1) airplay doesnt work 90% of the times unless i go into admin & privacy and reboot the TV.", "2) even after reboot it doesnt work 50% of the times", "3) same issue with chrome cast as well", "4) TV screen turns off while mirroring screen via my Ipad every 10-15 minutes.", "5) while connected to HDMI port when im in zoom meeting using TV as external monitor", "6) Home button doesnt work 50% of the times", "298", "299", "300", "301", "302", "303", "304", "305", "306", "307", "308", "309", "310", "Love how everything looks like crafts. ", "As a Yoshi/Poochy fan I enjoy the Yoshi games.\"", "311", "312", "313", "314", "315", "316", "317", "318", "319", "320", "321", "322", "323", "324", "HOWEVER", "This is still a really good TV. But the growing pains right now would keep me from recommending it to others. (I'm coming from a 2018 Vizio P series)\"", "325", "326", "327", "328", "329", "330", "331", "332", "333", "334", "335", "336", "337", "338", "339", "340", "341", "342", "343", "344", "345", "346", "347", "348", "349", "350", "351", "352", "My only critique is that I wish it performed @ a 1440p resolution. Everything else is great!\"", "353", "354", "355", "356", "357", "358", "359", "360", "361", "362", "I like that this is wireless with sensors ", "This controller has Bluetooth", "The motion controls are awesome", "This has a design that feels good in the hands", "My nephews prefer this over the other wireless controller we have", "363", "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "*the added mappable buttons could come in handy even though I haven't used those yet.", "*the cost is much less than the Nintendo pro controller. ", "The cons:", "*slightly unconventional setup. ", "It's not a problem though if you read the instructions. ", "*its lighter in weight which makes me wonder about durability. ", "Makes a perfect 2nd controller for kids.\"", "364", "365", "366", "367", "368", "369", "370", "371", "372", "373", "374", "Great sequel to Wooly World\"", "375", "376", "The addition of being allowed to manually aim your eggs removes some of the frustration that earlier titles had and there are collectible items in abundance for completionists. That all said", "The biggest hiccup in the game I think is the mini quests you get. Each level has multiple different set pieces that a robot will want you to collect. The issue is you can only do one at a time so the game asks you to play through one level at least 6 or 7 times and it can get rather tedious at times. My suggestion is that if you are collecting everything", "In the end the game is a relaxing adventure through a handcrafted (Almost literally) world that never fails to charm. Perfect for players of all ages", "377", "378", "It's a great game for kids and adults!\"", "379", "380", "381", "382", "The one thing that would truly be the cherry on top", "383", "384", "385", "386", "387", "388", "389", "390", "391", "392", "393", "394", "395", "396", "397", "398", "399", "400", "401", "402", "403", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417", "418", "419", "420", "Thx", "Xbox Series x\"", "421", "422", "423", "He absolutely loves it. It linked up easily and is user friendly. ", "He loves the two on the fly buttons he can map to Make his play more custom. "], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "index", "count": 499, "min": "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "max": "in between each secret is so satisfying.\""}, {"values": {"label": ["VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", " my 42\u201d VIZIO that I bought in \u201808 doesn\u2019t even have a single bad pixel. Food for thought.\"", " of which screen is fantastic and very light compared to my previous one indeed.\"", "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", " and you know they could\u2019ve easier made it $100 more and still sold out. Amazing.\"", "Yoshi's Crafted World - Nintendo Switch", " with cardboard cutouts", " with seamless reaction times and plenty of opportunities to save yourself from mistakes.  Easy enough for kids to pick up", " this game is fun!\"", "yes: I recommend this product", "No: I don\u2019t recommend this product", " for the price it is a good deal.\"", "Supreme Commander 2", " followed by how light the screen can be without a terrible contrast. This TV fit the bill for both. Also", " but if you want a theater experience", " truth is because of the issues at present with the firmware", " finding every nook and cranny ", " sound and price. We have had Visos in the past and have been very pleased.\"", " easy setup", " as it occurred in the middle of a show without warning.", " the TV has 2 behaviors that need adjusting", "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", " i will have to reboot more than once", " it throws message no signal detected and turns off TV after few minutes", " unless TV is rebooted\"", " there are a few headaches that is keeping me from recommending it", "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", " so I'm not tied down with a cord.  ", " mappable buttons", " this is a smart product!", " it is not bulky or hard to work.  ", " and they kind of fight over it.  They really like the retro Mario on the controller", "WRC 8 FIA World Rally Championship - PlayStation 4", " the game is not meant for those looking for a challenge. I don't need dark souls levels of difficulty", " don't try to get it all at once because I assure you you will be back through that level multiple times.", " but if you're looking for a challenge I would look elsewhere.\"", " would be to have a microphone on the remote control to search for a program like the roku\u2019s do. ", " it is a good sized tv with an amazing picture. Well worth it.\""], "data": [140, 1, 1, 82, 1, 140, 1, 1, 1, 45, 2, 1, 22, 1, 1, 1, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 22, 1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 1]}, "label": "name", "count": 38, "min": " and they kind of fight over it.  They really like the retro Mario on the controller", "max": "yes: I recommend this product"}, {"values": {"label": ["VIZIO", "yes: I recommend this product", "Microsoft", "Nintendo", " Pinterest worth constructions", " but easily enjoyed by gamers of all ages", "No: I don\u2019t recommend this product", "Verified Purchaser", "Square Enix", " this TV is fully ready for the Max features of the Series X and PS5.", " buy a sound bar or speakers.\"", " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", " the show just begins with its amazing ink black levels", " not sure if its me or a firmware update.  They are: the screen goes blank when new input isnt supplied", "Little Orbit", " while im still in between the meeting.", " the first is the HDMI 2.1 port. The OLED h-1 has 4 HDMI ports", "PowerA", " fully programmable", " and make fun of me because it was brand new \"\"in my day\"\".  This is fun", "Maximum Games", " but at least some sort of resistance would have been nice. Levels can basically be run through rather blind if you're not hunting for every red coin or flower. Even the challenge levels at the end of the game don't really have much bite to them."], "data": [140, 56, 82, 140, 1, 1, 2, 6, 22, 1, 1, 1, 1, 1, 11, 1, 1, 22, 1, 1, 7, 1]}, "label": "brand", "count": 22, "min": " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", "max": "yes: I recommend this product"}, {"values": {"label": ["328244", "yes: I recommend this product", "307392", "Verified Purchaser", "191609", " and vibrant colors that pop on everything from the tiny Switch screen to a 70\u201d flatscreen TV.", "0", "522023", "No: I don\u2019t recommend this product", " beautiful imagery from its 1080P to its upscaling to 4k", " ie your movie is paused. And you need to press the OK on the remote to wake it up.  Having your show resume", "119061", " #1 is eARC (awesome)", "231963", " and more.  ", " so I'd definitely recommend this product.\"", "205005"], "data": [140, 50, 82, 3, 140, 1, 16, 22, 1, 1, 1, 11, 1, 22, 1, 1, 7]}, "label": "sku", "count": 17, "min": " #1 is eARC (awesome)", "max": "yes: I recommend this product"}, {"values": {"label": ["Leeford", "DJM7", "EC82", "Weeto", "0", "LexusSC400", "Ninjaafro", "von R", "Ohio Erik", "jonck", "Bob279", "NuggetsOne", "AJ V", "Always a fool", "RootM0d", "Ozlas", "Odium Prius", "Ryan CIN3MATIX", "Punkwaste", "CosmicOwl", "Skyturtle97", "Pitbull91101", "Mykd", "Chigg", "Prieto56", "Iz B", "Angel Marred", "Derrick Evans", "Jeremy Green", "zachR", "1", "Carl78", "Alejandro Rivera", "Pixle101", "Sillypajamas", "John4", "Mike1921", "Bmitch20", "karena", "Babes70", "Koky87", "Dcm388", "SunnyS", "Spenceleoz", "Rich190", "DrKillem", "Areria", "eyesayahh", "Animehipster", "Moi93", "Geo R", "JohnHalo117", "GrabAzzery", "Chaz54", "Jukeman79", "dfint", "SamuraiMatt", "DKCBatch", "VileMKII", "LRoberto", "Philliptate7", "Toxicbug", "Bardot", "tackomoto", "Bob81", "Porkchop76", "Bino7899", "Doblado98", "Super Awesome!", "jpc3", "Terry T.", "Canothegreat", "shane19", "R Robles", "IanMan141", "Anonymous", "Gaming reviews6", "twojoesf", "Marco AP", "I own this", "Fa crediblenick", "516", "M4lmx81", "NicoleD90", "MDB3", "Bigbadbarry", "Scott79rod", "BubbaHero4All", "Diana finley", "HeliosExe", "platygirl", "2-Apr", "Candice S", "Woodbine23", "Maximus", "Pat23", "woodbine23", "Rajib", "KristovM", "goobs150", "sftaylor614", "Johnboi781", "Harbinger86", "King TJ 09", "Biobroly24", "Killerxxx08", "Parker86", "PUGLOVERRG", "Kamna", "Natees", "Nate Corneliusen", "Racheljay11", "D3vonator", "Vegas momma", "Henrio", "Jeefly", "BoJackson87", "tankgod1", "16nflp", "Joey3245", "chiknwingding", "GeneralM99", "fiddlegammer11", "Commando38", "CoD4 Veteran 13", "TheGamerGalore", "agent00aa", "jonso", "KingEdd", "Ems C", "Leon81", "Kids love i", "Marshmilo", "makeshift SP", "Marc reed", "Kwoodky", "Marieleisele", "Jb2827", "TCTV", "Mofa", "Cat711", "FXDLS110", "GASMAN", "ectaylo", "Melony", "Slair", "ll1cool1", "DK4345", "Hothroy", "Zanderspike", "N Zero", "daSurge", "James0023", "Adyn Evans", "glumee", "Azucarmamacita", "dahc", "killer_kenne", "JustWill1982", "Theraven16", "Penutt2", "TheMonty", "Drdrums", "Midwestmikey", "Chrissy in ny", "Vman", "T. Lawson", "deshon", "MPock", "DaBurghLover", "Buck Bull Stallion", "MrGregory2000", "cliff90", "Barry1226", "Timbo88", "Assassionator", "Brannon M", "Johnson1720", "Disappointeddd", "JLAxxSPARTAN", "Henroc", "Seena", "RandiBeth", "Elope90", "Cfm1985", "BubonicChronic", "Buttztallion", "Digmyearth", "JackB72", "RobertKW", "Angelrose2", "Noz 37", "AikenAidan", "Kyoungblood", "SumoSpike", "Deathsprophet", "Bumzab", "nonxaznxboi", "Kerican", "Cycephenom", "DemonWolfC6", "Gamerguy", "Mkaz", "MRDSIGN", "Rcmm", "Angela W", "Shaun7979", "Blurr60", "Twan", "Res136", "Jcompu466", "Astraeus", "dRn00bies", "Nicole F", "David Armando", "spartan19", "BxBNicX", "The name John was taken", "Jrjbaj", "PetLover62", "Gamer Man77", "Patrick Giles", "Blackfeather666", "Dadadum", "Mr Dingus", "DarkEmpressAly", "mariofamily", "DaddyRay78", "Amanda Cooper", "JA II", "MM213", "Androl123", "RayMel5", "VALumiere", "Mikeiceman", "PM117ER", "Patrick w7", "JakeO62", "Rambo34", "jws1025", "Mattoxbox", "Ellie RA", "mdfsandman", "thearchie32", "boilerone", "Quando", "None, none", "Jos\u00e9viera264", "The truth", "A-bomb", "John26", "dmartinez097", "JPez1", "Luccon7", "xTheSandman72", "Doomcrew", "Da1trueS4nch3Z", "NexusWolf", "The1stAv3ng3r", "JCMB", "cheeseman585", "Sixkids", "Jerk unit", "TheArgyleWizard", "CampM", "Carebear43055", "CWB!", "RickZ", "The Doctor", " to its true 4K Glory. ", " doesnt do it.  and the 2nd is that a few times now", "TOGA Sarge", "JMCH", "Margot", "Skeet96", "MikeOxlong69", "TimB76", "LivinLow", "Neco46", "Cbj4892", "Shaqcool", "Unlockable51", "AceZero17X", "DumbMarsupial", "mn1meii", "Greg11", "Drew6977", "Shafi", "RedRaider", "cccmak126", "RomS", "Fivonefivo", "Imagine1959", "TomDawg1", "KarateBear", "ChristyJay", "AnnB", "Sleepy Ninja", "SD Dad", "Nyxian", "Izzy28", "lenosaurio", "Kelchyd", "Mipsie", "Heather0101", "Hutchworld", "Stude", "Ybreeze5", "Kenny H", "StevieC", "Jethro2312", "ACyberPoet", "Jojo2414", "Chasd", "McFang", " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "phyra", "Anthony87", "Richard947", "Jon bc", "Justmeow0417", "halfjew22", "Eglandon", "Kittencakes", "FireWife", "Brennan91", "Josr85", "Yoshi Fan1", "ShadowKnight92", "R00T666", "Mr Eric", "Dadgames", "Weasel771q", "Anthony Nussbaum", "kschneider1231", "Rwarmander", "Randy cox", "IrishRunner", "Ray T", "SDotRinney", "Prakers", "PaulS", "Whydoihavetohaveanickname", "Britan91", "Ezirkle", "Carlos G.", "Radwithab", "Meadow", "Jess2274", "MandM", "Cheeks784", "cwinniebear24", "Mommyof2boyz", "DiamondAries999", "yes: I recommend this product", "RachelA1020", "Court the Sport", "NSU_Ant", "IAMTHEWHEELMAN", "Alllly", "The monumental", "Sarge97502", "Holden Macaque", "Christow", "ghostdph", "carauza", "Charlie from VA", "emperordesslok", "Jack Badgerlord Fox", "SusieK", "Mebunny", "Drumfreak117", "TitusJ99", "MotherMayI", "LaBestia", "Lauri49", "jmrichard427", "Tom42", "Cowboy101084", "Mugen", "Suzey", "Concerned vizio tv owner.", "mh061", "Golam41", "KLP26", "Mdcsooc7", "Joedtip", "Cvoshell4", "Missy23", "Kiki2014", "Mama", "M3WILKERSON", "Beau C", "Lisalou5150", "Videogamegente", "JJ77GB", "JDHarsh", "Greenender23", "Arjei Lynne", "Abish", "Simi90", "Davebasura", "JCMA", "Pappabear03187", "Liberty25", "Ghost Dylan", "Jasper L.", "VinnyD", "adrianiii", "Bgerald", "JON205", "Joey D215", "TomsVizio", "Ricw", "JustJess76", "Pvtcarlswife"], "data": [1, 1, 1, 1, 23, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 14, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "reviewer_name", "count": 416, "min": " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "max": "zachR"}, {"values": {"label": ["look out gamerz, here comez awsome", "Great looking screen!", "Quality", "Unbelievable picture quality!", "0", "Vizio OLED", "Bugs", "Glass like screen", "Amazing 4k picture", "Great features", "Great picture and a good price", "Awesomeness!", "Fantastic product", "Not all as it seems", "Beautiful design - Awesome feel - Must get one!", "Simply amazing", "Limited Edition Halo Controller", "Beautiful Elite Series 2", "Firing on all cylinders.", "Rad sauce", "Excellent purchase.", "Yoshi switch game", "Awesome game if you like the Mario brothers games.", "Awsome game...", "Awesome Game for Children!", "Poochy", "Not bad", "Opinion on Yoshi Crafted World", "Another Win-tendo Jewel!!", "Good game", "Best Nintendo game I ever played!", "Brilliant picture", "Absolutely amazing picture quality", "This tv is vibrant", "10 months ago", "Great picture, confusing to turn on", "Nice tv", "Gorgeous picture!", "Love this TV!!", "Great tv for value", "Best tv for the price", "TV is awesome!!", "Xbox Elite Controller 2 - Halo Edition", "Premium Halo Xbox Elite Controller", "Amazing!", "Great controller but late shipping", "Best Controller", "Great controller", "Halo Elite Series 2 Controller", "Buy one if you can find it!", "Halo Infinite Controller:)", "A High Quality Masterpiece", "Yoshi party", "BUY IT", "Tank Yoshi and the layered egg aiming", "Yoshi's Crafted World", "Good", "Super awesome", "1 or 2 player fun!", "Game play", "Love It", "Fun repeat play factor", "Outstanding!", "Deep blacks", "Great TV for the price", "Amazing tv", "11 months ago", "Great features!", "Great price, Vizio is a reliable brand", "Good TV for the Price but has some issues", "Beautiful oled screen", "Looks great!", "Best Controller!", "Elite  Series 2 Halo Wireless Controller", "Amazing", "Great looking controller!", "Buttons don\u2019t register", "Excellent controller", "Awesome controller", "Solid controller", "This is awesome design", "Awesome!", "Family time", "Yoshi Fun!", "2 years ago", "Awesome", "Great game!", "Yoshi's crafted world", "gud", "Yoshi's Crafted World... Buy it TODAY", "Classic", "Yoshi's crafted world is fun", "Excellent product", "Awesome Features!", "Buggy like no tomorrow", "Almost but not quite", "Great Clarity, Very Very buggy software.", "Gorgeous screen with a few quirks", "Vizio OLED TV", "Love / Hate Relationship", "Excellent tv great picture", "Love it", "Incredible controller!", "Halo Infinite Elite Series 2 Controller", "Halo lovers & competitive players dream", "Xbox elite series 2", "Microsoft Elite 2 Pro Controller Halo Edition", "Beautiful controller", "Worth every penny.", "It's alright", "Easy to pick up, hard to master", "Fun new twist on a Yoshi", "It\u2019s okay", "A Unique 3D Adventure that's hard to resist", "Cute Yoshi game", "A wonderful game", "Yoshi", "Great Game!", "Great game.", "Not as good as it looks", "I don't see how people can't like it", "Great...but...", "Best RTS game made so far", "good, but a little disappointed", "SC2? or sometihng completely  different?", "Crafted Family Fun", "He love it", "Big replay value", "Retro", "Kids love it", "Awesome, Nothing too Over the top", "The game", "Gotta get it!", "Great fun for everyone.", "Reasonable pricing, great OLED", "Very Nice", "Awesome picture", "Great Picture", "Picture is good, the firmware needs improvement", "Really Good TV, I\u2019m not a gamer.", "Great Picture/Horrible Software", "Beautiful picture and great sound!", "Beautiful picture, disappointing software...", "Great colors sometimes", "Xbox Halo Elite Series 2 Controller thoughts.", "Oh so pretty!", "Issues with mine, probably not everyone.", "Great Halo Controller", "Finish the fight!", "Master Chief approves", "Love this controller.", "Coolest controller", "Halo Infinite Elite Controller", "Great once I got the working product.", "Nintendo Just KNOWS Fun!", "Yoshis crafter world", "Cute and fun", "Yoshi crushes another one outta the park!!", "More Yoshi fun.", "Yoshi\u2019s Crafted World", "Beautiful game but a bit overpriced.", "Don\u2019t miss this if you like platformers!", "Great game for kids and adults", "Oled 55in TV", "Blown Away!!!!", "1 year ago", "Awesome picture, firmware need work", "OK Updates would make it better", "Excellent Oled", "Super crisp picture quality", "Okay", "Vizio oled h1", "World Class Display OLED", "Best Picture Ever", "Sticky R thumbstick Resistance.", "Great controller now a little better", "Y button doesnt work all the time.", "Xbox Halo Elite 2 Controller", "Halo LE Elite 2", "Faulty product with known issues", "Xbox Elite Controller Series 2 Halo Edition", "Elite controller", "Halo Elite controller", "Amazing!!", "Not a good game", "I love it!", "Yoshi has never been better.", "Easy but fun", "A fun single player game", "It do like be so it be good", "Cute, crafty fun!", "Surprisingly fun", "You won\u2019t be disappointed if you\u2019re a Yoshi fan!", "Great game and fun", "So where is the GAME?", "This is the WORST SC game peroid!", "dont touch it? i think i will", "Another Dissapointment of 2010 Gaming", "Sorry I'm having a hard time speaking its so Awesome!!", "Do not touch this game with a 10-foot pole", "Tons of fun", "SC 2 - mediocre game.", "Way to destroy the best RTS series ever made!", "Nothing like the first two!", "Great picture quality", "Just short of 5", "Great Value For OLED", "Beautiful Thing", "Incredibly Beautiful Display", "To many problems out the box.", "Skinny", "Price to feature king!", "Great picture", "Great video!", "Beautiful", "Solid slaying ordanince", "GAME CHANGER.", "Very Good", "Weapon of choice for Halo Infinite", "Best controller ever", "Sickest looking Halo Controller Ever", "Solid improvement over the Series 1", "Halo Fanatic Gift", "Getting what you want", "Simple game for Beginning Gamers", "#1", "Fun!", "It's okay, but not the best Yoshi title.", "Yoshi\u2019s crafted world", "Yoshi's Crafted World Review", "Yoshis Crafted World", "Great", "One of the best games!", "A fun RTS", "Sooooo disapointing", "Really nice Controller", "The best Xbox Controller for a Halo fan!!!", "Halo infinite Elite Controller", "Looks pretty - never worked", "Fast shipping. Awesome controller", "Exactly what I was looking for", "Bumpers", "Halo Elite Controller", "High quality controller", "Great picture.  easy setup", "Worth the Money!!!", "Great picture!", "No Slouch", "Wonderful Christmas present from the kids", "Bad picture", "Amazing TV", "Great features, awesome picture, and easy set up.", "Pristine Image!", "Amazing controller", "Fun game!", "Green mean Machine.", "Yoshi is awesome", "A wonderful addition to the Yoshi game series", "Great game", "Love Yoshi!!", "A Modern Take on Yoshi's Story", "Good investment", "A definitely must pickup", "Fun, Beautiful, and Appropriately Challenging", "Love it.", "Great picture Quality", "Need better smart app!", "Great features & Amazing color and clarity", "Great so far!", "Stunning Picture", " the TV just doesnt see any input on HDMI 1", "Mr", "Color", "Fun!!", "Fun With Friends", "Super fun", "Very Hard to Play!", "Nice casual game", "Game of the year", "It ok", "HORRENDOUS!!!!", "horrible", "Great price", "Crystal clear 4k", "Lot of issues with new OLED TV", "Great OLED TV", "Perfect.", "Affordable OLED", "Excellent picture! Very crisp and defined", "Great tv", "Amazing picture", "Bad Trailer, Horrible Game", "Fun", "Couldn\u2019t hold interest", "Fun for all ages", "Yoshi is great", "Great for playing, nightmare for completing", "Yoshi Crafted World", "Super cute and relaxing", "Absolute gem", "Kids will love it!!", "Stunning picture", "Fantastic TV", "Great tv but needs patches as soon as possible", "Love the cost and love the quality overall", "Amazing how far TV has come in just a few years", "EXCELLANT OLED UHD TV", "Absolutely love this TV!", "So many features", "Troublesome TV with amazing potential", " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "Fun 2 player", "Nintendo impressed me again.", "Nintendo fun for everyone!", "Perfect for the little ones", "Family game", "Great graphics, 2 player gameplay awesome", "Awesome game", "Sooo cute~ <3", "Brings out the kid in a 33 year old.", "Unique and colorful world", "Great game for all ages", "Overall Gameplay", "Yoshi at his best!", "Great game for the family", "Another Great Nintendo Game", "Fun to relax with", "Won't turn on", "Love this thing", "The picture!", "Great picture great sound overall a great TV", "Beyond excellent", "Beautiful picture and sound.  Sluggish controls", "Great picture but OS is a bit slow", "Excellent picture quality!", "Enhances Game Play and Fits Perfectly in Hands", "Wirelesa Nintendo Switch Controller", "Eaysy to Use", "excellent value for the cost", "Such a great design", "Enhanced Wireless!!!", "Very good but not perfect.", "3 years ago", "Amazing Controller!", "Like DarkSouls but with Cars! :) Love it!!!!", "Skip it.", "Lots of Fun", "Let the dirt fly and the motor cry", "Wrc8", "Crazy good WRC game.\\m/", "WRC 8 FIA World Rally Championship is great game.", "Yoshi\u2019s crafted world game", "GET THIS GAME!", "Its yoshi!", "Another quality Switch release", "Weaponized Cuteness at it's Finest", "Cute stuff", "Love love love", "Awesome game for all", "Yoshi's Flabby World", "Crafty Business", "Great tv quality - could use a microphone remote", "Beautiful color!", "Fantastic picture", "Great but...", "What a picture!", "Terrible software", "Beautiful Picture", "Great Features!", "Great Features", "Great product!", "Love", "Great product!!", "So retro!", "Works great", "Love it!", "Great for younger kids", "Fun game, awesome graphics", "Cute and fun!", "Needs a better soundtrack.", "Just my thoughts", "Short and sweet", "Beautifully Developed!", "My Yoshi Experience", "OLED55H-1 Sucks!", "Has everything you want for an Oled Tv", "All the bells and whistles!", "Great picture! Great sound!", "Great Choice", "Awesome TV for the PS5 !", "Almost great for gaming", "Great controller!!", "Great bonus features and love graphics"], "data": [56, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 5, 1, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 6, 3, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "review_title", "count": 393, "min": " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "max": "look out gamerz, here comez awsome"}, {"values": {"label": ["My new OLED is a upgrade and it's great!  This is my third Vizio TV to replace my first one that went blank after 12 years of stellar service. (I'm even thinking of getting it repaired if possible for the great grand kids.)   I have always liked the picture quality and the price of Vizio's. You cant go wrong.", "Rating is really a 4.5 but that's unavailable. The unit looks great both in and off. It is short on physical features (Bluetooth and whatnot) but I use both external sound and media units. This is a great OLED to buy if you want a great TV at a reasonable price.", "I\u2019m quite pleased with the entire product as a whole. The quality of picture and sound really speaks for itself when in use.", "I\u2019ve only had my new Visio OLED65 mounted and operating for 3 days now and I\u2019m like a kid who after Christmas can\u2019t get enough of his favorite gift. The brightness and clarity of the picture is another huge by step forward in the evolution of  the television. I find myself seeking out programming that will showcase the quality of the picture regardless of the genre or intended audience. Some of the newer, computer generated cartoons, lack any redeemable qualities (imho) save for the incredible graphics, which are stunningly colorful, bright, and almost as vivid as real life. Nature documentaries and shows involving space, especially when shot in 4K are almost mesmerizing. When I bought my 65\u201d HD tv about 10 years ago I thought I was witnessing the best quality picture that could be produced by anything this side of a mirror. I was wrong, and happily so. If you\u2019re on the fence, like I was, about whether to replace a broken or outdated television with another of similar HD quality, that is to say \u201cstandard high definition\u201d...don\u2019t even waste your time. It\u2019s increasingly difficult to find as 4K is becoming ubiquitous, so that is pretty much a given. On the subject of spending your hard earned money on the more expensive OLED technology....if you have the means, or can somehow figure out how to acquire the means...my advice is definitely do so. Whether you\u2019re into movies, sports, gaming, or even nature/space shows, you will be amazed at the latest leap in picture quality and brightness. And VIZIO offers all the quality at a substantial savings. Putting the absolute best technology within the reach of those of us for whom the strength of the stock market makes absolutely no difference to our bottom line. ", "10 months ago", "The picture is very crisp and the blacks very dark.  Beautiful color.  The Vizio SmartCast app is fantastic.  The response from selections is much faster than the traditional supplied remote.  They update it from time to time with most recent voice search function", "Picture quality is amazing, however within a week from purchasing the tv will not turn on unless I unplug and plug it back in.", "Image is so clear I feel like I\u2019m on the set of the shows.", "I purchased this TV about 2 weeks ago and am blown away by the crisp, 4k picture.  I would definitely recommend this TV to someone considering an upgrade.", "I got this today 2/25 for my birthday present from my son as a surprise gift, without any prior guess or information at all. My previous one in my master bed room was quite old Samsung 50\u201d PD TV, which was ok but heavy and bulky compared to this. ", "Best price on an OLED tv. Has a great picture and is easy to navigate the menus and connect via apple or Android devices. I always bought LG OLED tvs because I liked their quality and features. But so far, Vizio is just as good and a better price.", "Just like the elite controller v2 but halo edition one of the best controllers out there if you do not have one elite\u2019s controller\u2019s are must have.", "First foray with the elite controller. Nothing but impressed. The weight in the hand, the grip, the buttons, and changeable joysticks are all amazing. Even better is the Masterchief finish. If you can't find the halo edition I'd recommend trying the regular elite series 2, I'll never use a different Xbox controller again.", "Really bought this for the blue mode leds, just to find out they are still white leds with a blue coating on them and not that bright. All in all still an elite controller.", "At first I was asking myself why spend the crazy money on a controller!  I too am now a believer.  From the case to cable to finally making its way to the actual controller - it is special in every way.  There is so much detail to this controller.  Lets not forget it is a limited edition and carries a beautiful Halo design.", "The build of this controller is perfect and the details are amazing.", "Cortana herself lives within this controller. I am one with Halo", "This controller has always been great but this one is a work of art.", "Even lighter than my previously owned Elite Series 2, thought it would be heavier. The buttons, the triggers, the analogue sticks, everything operates better than the original Elite Series 2 at launch. ", "14 days ago", "These controllers I think are worth the money. One of my favorite things is that I no longer need double A batteries. It comes with a charging port. And how I can customize the buttons is rad", "Love the controller use it everytime I play. The remote plays excellent. Be carefull of the back buttons though do to being removable I feel like they will wear out faster than most.", "Yoshi game was awesome and still playing it thank u sooo much GameStop :))", "Great game. You will enjoy it. Good price worth it I Always have enjoyed the super Mario series since Mario brothers in the arcade", "My son loves to play this game, he's been playing it every day since he got it... Great Job!!!", "The game is great for a family and younger children. My 4 year old wnjoys the game.", "It would be better if Poochy was in all of the levels.", "It's cute and fun, but feels a little lacking in fulfilling its potential.", "Good game including game play and music also music", "The quirky style that shined in Yoshi\u2019s Wooly World has gotten a serious upgrade in this new gem from Nintendo.  Like all it\u2019s first-party titles, this game is nearly flawless.", "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "2 years ago", "She loves it good game. It easy to play and addicting.", "Yoshi\u2018s crafted world is the best Nintendo game I ever played since Yoshi\u2018s woolly world! Lots of hard challenges to complete and it\u2019s so much fun! I love this game!", "I recently bought this TV and was blown as easy with the picture quality. I never want not to go back to LED.", "I went from an old LCD TV to this Ola TV and the picture quality is amazing this TV has a deep as blocks of ever seen the sound quality is fantastic I could not be happier!", "Bought this yesterday and I am really excited. I saw how clear the picture was and had to have it. Won out over my husband who wanted the Sony.", "5", "I've had this TV for 3 weeks now, so far I really like the picture. it's hooked up to a vizio 2.1 sound bar. it is confusing when I 1st turn the TV on,  I get the Vizio sign on the screen, a few moments later the picture comes on with the TV speakers, then the tv shuts off, a few seconds pass and he comes back on with the sidebar act of and everything is OK then don't understand why it goes off comes on goes off and comes back on", "Great TV at at a reasonable price.  Happy so far with purchase", "I love that I found an OLED that did not break the bank. The picture quality is amazing and VCast is great! The only downside is the sound and it\u2019s only a small complaint on the quality.", "Easy setup and there you go...I love VIZIO TV. I will continue to buy VIZIO TV's !", "Very good image quality, beautiful design on a affordable price", "Oled is king I\u2019ll never go back to traditional led TVs again it\u2019s just not even in the same ballpark you can\u2019t beat the picture quality of and oled", "\"I'm a true fan of vizio. My old 36\"\" Vizio lasted me a very long time and that's the reason why I decided to stick with vizio. Visuals are amazing on this OLED. There are some bugs but they can be repaired by software update patches released by vizio. I also bought the Vizio Atmos soundbar and its absolutely freegin awesome. Only issue I've experienced is the sound bar doesnt activate on its own and I usually have to cycle through the settings to reactivate through HDMI-ARC. Im.sure theres a fix for it. Overall I'm happy with it and still feel vizio makes great products.\"", "It\u2019s amazing! Works perfect, just as an elite controller should. The best part is the paint job! 10/10 recommend.", "This controller provides excellent fine motor control with adjustable thumbstick tension, and removable back peddles.  It works great especially for a first person shooting game like Halo infinite.  It\u2019s on the pricey side, but you know this is a premium product for serious gamers.", "Best Xbox controller I've owned. Worth every penny. Owned for a month with no issues. Only con is I wish there were replacement joysticks, I love these but i know I'm going to wear them out, and I won't have Master Cheif green ones to replace :/", "Great controller. Purchase was definitely worth it. The only problem was the finalizing my payment and the late shipment through GameStop.", "This controller is incredibly responsive. It\u2019s fully customizable with lots of additional features & settings that can be adjusted to your preferences. I was skeptical at first due to the price but after a fair amount of use I wouldn\u2019t game with anything else", "Love the controller no probs with it the first one was lost but customer service made sure I got another one and in a timely manner", "SO BEAUTIFUL! Great addition to my Halo collection. The detail is just amazing. Performs like any other elite series 2 but that color scheme is just phenomenal.", "great controller, beautiful design, ultimate customization", "Doesn\u2019t even feel like an elite controller. But it does feel like an advance one with the grips and joystick converters. Not really worth the money but the design is amazing and there is no battery pack in the back, it\u2019s all built in, like a phone. Over all I love it! I\u2019m such a Halo fan it was a no brainer not to get.", "It feels great, it enhances gameplay thanks to the paddles and customizability, and it looks absolutely beautiful.", "Tons of fun to play with my kids! They love the look and ease of play!", "Awsome title. Loads of fun! My kids and I love it!", "This game is amazing! Almost had given up on the Switch, but this game saved that from happening! It's a great game for people of all ages!", "Fun and cute, but some of the mechanics don't work that well (Tank Yoshi and the mutil-layer egg aiming). Still fun, but needs improvement in the mentioned areas. See Caddicarus' analysis.", "It's awesome! The graphics make everything look like cardboard!", "Fun title that is a good installment to the series. A little bit easy to beat, but has plenty of extras to keep entertained while going for that 100%", "This game was fir my youngest, he picked it out from good reviews online.", "It can be 1 or 2 players. It\u2019s pretty simple mechanics, but there are so many creative was to use them. And there is a lot of replay ability. Me and wife have a blast.", "It\u2019s a game that\u2019s for kids and for adults to enjoy", "Purchased this TV a couple of weeks ago as my existing TV was 10+ years old and needed an upgrade.  Had a salesman take the time to show me the differences between an OLED and other projection systems.  Couldn't be happier with the picture that I am not experiencing.", "My wife loves it. She even lets me play the co-op mode with her sometimes. I\u2019m not that into gaming, but this game is really fun!", "This OLED is Excellent, Very Easy to Operate. I imagine that Someone may Complain but I am certain that it will be a Tribal thing.", "Great tv. I like the vizio apps.the sound is nothing special but if you are buying an OLED you probably have another option. The best part is the deep true black. The colors are very vibrant. I am very satisfied.", "Has some bugs and I know Vizio will work on them a little faster. Especially with the new Xbox series x and ps5. Other than that can\u2019t beat the price for an Oled TV. Great picture. Now Vizio please get the VRR @ 4K120 to work and give us the option to change all picture setting in game mode. No settings should be blanked out.", "I bought this for my birthday and it has been amazing!", "I love the tv and everything about it. I am a big fan of Vizio TVs, except for the sound, you will need a soundbar.", "All my Vizio TVs have held up under use. Hoping the new OLEDs will get firmware updates and continue to make this TV great now and in the future", "Very good OLED tv for the price but it does have some issues with powering on.  If you leave it idle for too long it will \u201cgo to sleep\u201d and the only way to cut it back on is to power cycle.  Other than that I love it.", "Beautiful screen! Awesome price but full of bugs. On my set had to constantly unplug my tv from the  power supply to get it to come on. Worked well with my xbox series x just a few glitches here and there. No 4k 120 for the ps5 so I had to use the 4k 60 hdmi slot. I feel this tv is still in beta and needs alot of firmware updates to address system performance issues.", "I bought this tv because I wanted to try out OLED for the first time. I\u2019m glad I bought it. The colors and contrast are on point. The price compared to the competition in the same category can\u2019t be beat. Super happy.", "Everything I wanted from a controller, in an amazing custom paint job!", "The design is very remarkable great addition to the collection of Halo Series X Console Bundle it a must have.", "I love the pro controller and this one is absolutely beautiful. Must buy", "Works good its perfect for people who game hard-core because it don't ware out as fast and last a long time cheaply priced perfect for your gaming set up!", "I love the classic colors of master Chief! Looks great with my Halo Theme Xbox!", "AXYB buttons do no register unless they are 100% fully pressed in. Annoying there is no pressure sensitivity!", "This no longer available item is excellent and you should buy one, but you can\u2019t.", "Great controller love the way it feels and all the little halo touches it has.", "So far I love the feel and look of this controller. Need to wait and see how the grips hold up to give it a 5 star rating.", "I was lucky to cop a limited edition elite controller  waiting for halo campaign to used", "This game has amazing graphics and amazing levels.", "It fun for your family and if you have kids they will enjoy hours of fun", "I loved the Yoshi yarn game on the 3DS & I love the New Yoshi Yarn game on the switch.", "Great game love every minute of it fun and entertaining", "Excellent condition. Awesome game. My fiance is enjoying it a lot.", "One of the best games I've played in a while absolutely beautiful \u2764\ufe0f", "10/10, it is a very creative, thinking out of the box game, it might be a bit easy, but it is fun to and I will 100% it even if it's the last thing I do.", "OMG, this is the ultimate of fun, silly, fantasy escapism. Sit back, relax, and give yourself an hour to let Yoshi explore the hand-made world of tape, cardboard, and pipe cleaners", "Takes me back to the 90's. Thank you Nintendo! and thank you GameStop for always having great prices and what I want in stock!", "really cute game and its pretty easy for the non gamer . its great to have a son who can help you too", "I purchased several television and soundbars from Vizio from the M series and the SB38", "I purchased this OLED over a week ago along with the Vizio Elevate Soundbar for my new Xbox Series X. I truly appreciate the picture quality experience that this TV can offer. The performance of this TV and Soundbar surely surpass its price point. I strongly recommend this TV for anyone that wants the best performance for the money. I will dare to say that based on my research, this TV will absolutely rival other brands at much more expensive price points.", "I had purchased this knowing it was going to not be perfect but omg. I had to go in and change my ps4 setting for video to even use the menu settings at all. I also cannot use netflix, it won't open from smartcast but when I press the button on the remote it freezes the whole tv on a black screen. This is a serious deal breaking bug.", "I purchased this a week ago and so far so good it's to early to make a define decision.", "I wanted to buy this for long but I am a bit disappointed. I guess my expectations were high but not really sky high.", "11 months ago", "The Best: The TV offers great contrast and clarity. ", "4", "This screen is a beauty. Very sharp, good colors and decent brightness. I hook it up to my PC for gaming and occasionally have some quirks. In the middle of a game it says no signal detected and shuts off. Sometimes it isn't detected by the PC. ", "I bought this 2 weeks ago and has a great picture. It is good for gaming on the xbox series one. The only issue is the VRR does not work and has a distorted picture when I enable it.", "I love the pristine picture, with saturated accurate colors. However, I absolutely hate not being able to turn off the fluctuating luminance. The only thing that spoils a great review is the brightness that changes with how dark the screen is to increase contrast. The TV does not need it, and if I knew who the engineer was that omitted the off selection for this annoyance, I would offer him a Vizio necklace.", "The only issue I have is. I own both ps5 and xbox series x and if I use hdmi ports 2 and 3 4k 120hz I have to unplug the tv every time I turn the tv on I worked around this by using ports 1 and 4 so I'm stuck at 4k 60hz on both consoles unless I want to constantly unplug the tv for it to work but over all I love the oled tv and you have to get a polarized power cable because vizio gives you a non polarized power cable that does not fit the TV power port", "Great item and excellent condition. Works awesome!", "Very cool design, feels great and comfortable in my hands.", "This Halo Infinite Elite Series 2 controller is so awesome with the Halo theme on it, it's beautiful.  Being able to customize the controller to my liking ranging from the controller sticks, d-pad, and how short you want your trigger throw is freaking amazing compared to a normal controller.  Only con is that it's expensive, but once you open up the whole package and unboxing experience it is well worth the price.", "Packaging was 5 stars alone but the feel and customizability of the control and the design made it over the top and it came with the full game download", "Love this controller glad GameStop pro was lookin out and it came in a decent time", "The Microsoft Elite 2 Pro Controller is perfect for the console gamer of any level. The fact that it\u2019s the Halo Edition makes it that much better! I love the controller and I\u2019m glad they came out with this limited edition.", "This is a piece of art, amazing!", "Very well design and heavy feeling, it truly makes you feel like you have a better-quality controller compared to the regular Xbox Series X controller. Would recommend to any gamer specially Halo fan!", "This was my first elite controller and I love it, it\u2019s definitely a game changer and looks beautiful.", "The controller is great but I am experiencing stick drift just two days after receiving it.", "Awesome, love this character! Love the whole game!!!", "Excellent for a relaxing time. Can be challenging if you want to %100 every level.", "Fun and exciting game if you like Yoshi and his classic games", "The game is adorable, the music isn't ear-splitting, and the levels themselves are fun. However, it ends up becoming a chore if you intend to 100% the game with multiple scavenger hunts per stage with a flip-side that is dedicated to finding three dogs under a certain amount of time for the full reward. Ultimately, it's cute and full of heart, but is not recommended to just sit down and 100% in one sitting. It's quick, easy fun enjoyable in small bursts either alone or with a friend.", "I\u2019m not a big gamer. I was so excited when this came out I had to get it. I guess I just expected more", "Nostalgically entertaining and unique 3D adventure that will make it hard for you to put the controller down", "Bought this game for my 12 yr old's birthday.  He really likes to play in multiplayer mode with me.  Definitely fun bonding time!  So far it has been fairly easy to finish each section, without being too easy (working together helps).  I do hope it gets a little harder as we get a little further in.", "Good to see Yoshi on the switch, but it is a slight step down from Yoshi\u2018s woolly world", "Truly amazing. The art style is unique and the gameplay is equally fun as it is relaxing and rewarding.", "I got this game so me and my gf can play together. Its fun and quirky but gets challenging", "Some folks didn't like this game....thought it didn't measure up to the original or Forged Alliance. Boy, are they wrong! I thought this game was great! Maybe the tech tree is a tiny bit smaller, but the game more than makes up for it with new, cool units, great graphics and effects, and awesome explosions. In fairness, I was a little perturbed that that more than one engineer cannot build on the same structure, as in the previous games, but then again, the structures go up pretty quick. Happy hunting!", "Great game. Nothing bad about it. It has many great features and story mode is cool. I think it is awesome.", "This game, in my opinion, is WAAY better than C&C and is very good in gameplay and everything else. Some people say that he storyline is horrible, but that doesn't really effect me since I just play on the skirmish and online. The story line isn't really a big concern. I just play it when I'm bored.", "The story is extremely slow and confusing until you get later into it. It forces you to play as a certain faction first, then another and end with the Cybrans. You should definitely try out the originals, they are ten times better then this. Overall, the gameplay is about the same as the last game, the graphics are much better and the sound and music is again amazing. However, the story development needs more work.", "alright here comes the best game eva, anyway herz a shout out to all of the peeps that think this game is the best eva u rock 4 ur good reviews. anyway the graphics might not be as good as the first but the graphics to me doesn't matter at all since the campaign is awsome and a good storyline. along with the campaign the units and multiplayer maps and experimentals and ect. but i honestly i think the unit count is very low there should be a higher unit count because people have things to do units to make and probably alot of them too and places 4 them to go like in others bases and stuff.", "This game is the absolute best RTS game you can play. And I have played alot of RTS games, so I know what I'm talking about. This game has very good graphics, and they will be even more enjoyable the more you paly the game, considering that you notice things like shadows cast by the terrain, and details such as distortion coming out of a walkers exhaust pipes. This game also has an amazing command system. There are more controls and options you can use to make your army do anything imaginable. This game also includes extra experimental weapons, which they balanced much better than on the first one, and actually have a general purpose rather than to walk into the enemies base and kill. And most people have heard that the nukes on the second ones are pitiful compared to the first. The difference is that on the first one, it was a bright light and smoke covering a large area of the map. On this one, it might be only a little bit smaller, but it is insanely detailed, in the fact that an extremely large portion of the map gets lit up in red, and things are actually moving with the explosion as they would in real life. When it touches water it makes steam and jets it into the air, so nukes on this one are much more enjoyable to watch, regardless of what you've heard. All in all, 10 stars.", "I don't know why people don't like this game, because if you like real-time strategy or RTS, this is the game to get.                                                                                                                                                                                                      I usually only play online and play skirmishes to get better or if no one is as good as me because I can destroy anyone.                                                                                                                                                                                                  I am a veteran at Call of Duty Modern Warfare 1 and 2 so don't try and kill me or fight me.", "What Gas Powered Games have done here is amazing, this game is packed with more units, new features, less glitches, and a lot more excitment. what i was really taken with is that there is no +mass or -mass anymore, its all based on real numbers. the tech tree feature is amazing, allowing you to upgrade old units to make them more lethal later in the game. a lot of the good things are still their like the cybran ships being able to crawl onto land. however, the story is disappointing, character extremely lack any sort of personality and emotions. also, for high end computers, this game has surprising lower graphics, units like the UEF titan look a little bit more like legos, even though some units have good deatil, others are flat out bad, although you have to appreciate that they are trying to let computers with lower hardware able to run this game. online play and skirmish mode are fun.", "\"Supreme Commander 2 is different than it's \"\"predecessors\"\"", "2 player fun for dad and 10 year old. Replay value is high with extra modes after completion.", "My son been waiting on this game for a long time. But he got it now and he love it.", "I'm in love with everything from this game and I appreciate the replay value as well. You can go back to a level and find new tasks/goals", "Brings back so many memories, I absolutely love this game.", "It actually looks crafty and there is so much to explore and you can", "The cutesy graphics and creative levels definitely added to the child-like wonder and fun of the game. Even the creepier levels were cute, but still gave you goosebumps at the same time.", "I like the simple creativity, nothing too over the top just very creative. It\u2019s sort of too easy so it\u2019s something to pass time with. Overall a good purchase", "Fun imaginative and challenging at times great deal of replay ability", "Fantastic game! The level designs are inventive and memorable.  I haven't had this much fun with a game since the days of the NES/Genesis!", "This game is so much fun.  You can easily run though a level or you can take your time and find all the hidden things.  I love to play it and so does my daughter!", "I\u2019ve been very hesitant to upgrade to an OLED because I couldn\u2019t justify the cost. But when Vizio jumped into the OLED market, I was very excited. Other brands\u2019 \u201cbudget OLEDs\u201d cut corners, whereas Vizio\u2019s track record with reasonably priced premium TVs is outstanding.", "0", "This is my 3rd Vizio TV. 1st OLED. They are all 5 star products!", "Easy to set up, to program, and assemble. Smart TV is very convenient.", "I bought this TV right before Thanksgiving and have enjoyed it ever since. I wanted a Smart TV and this did not disappoint. I bought a smaller one for my bedroom.", "As the title states, the picture is good, as expected. The only downside so far is that there are SERIOUS handshaking issues between this tv and my PS5 console. Sometimes, Ive got a black screen, and must reboot the tv to get the PS5 display to come up. Also, the tv menu will lock you out of several key picture adjustments during PS5 use. With some adjustments to the firmware to fix these issues, this tv would be nearly perfect.", "I haven\u2019t had an issue with this television like others. From what I have read, most issues are about gaming compatibility. 4.7 / 10", "Severe Issues with settings. None remain when set, audio passthrough is a nightmare. Motion settings are impossible to turn off for all HDR formats. Doesn't handle 24p content well from anything other than blu-ray source.", "This is my fourth Vizio tv and they just keep getting better. Bread brand and quality product.", "I am very pleased with the quality and picture on this TV.  I was disappointed that the streaming software runs at 720p since this is a 4K TV.  I added a 4K Firestick to resolve the issue.  Otherwise I am very happy with the design and function of this TV.", "I bought it about three weeks ago, and sometimes I am impressed with the crisp colors produced. There are times not so much, I  was watching something on Netflix the other day, and all the color except red looked good. The red color was like pigmentated almost as if it were a hole where ever there was red. I also noticed that when streaming sports live action it blurs a lot. I  am not sure that isn't the feed, but it is annoying.", "Extremely great controller! It's my first pro controller and I loved it. The design and color make it complete. Had to get used to the paddles on the back, but afterwards it made doing certain things in games easier!", "Beautiful controller! A must have for any Halo fan!", "Right joystick jumps and feels stuck sometimes. Paint in that same joystick that is gunmetal is gone and when the stick is rotated you can see the silver beneath. Wish I could have returned, but with how these are gone everywhere I don\u2019t know how I would have gotten another one\u2026", "Great design and awesome feel. This controller would be perfect if not for the horrible quality control issue Microsoft has on their controllers. Mine had stock drift, a messed up button, and a bent paddle, so I\u2019m waiting on a replacement. Fingers crossed.", "A controller worthy of a spartan you'll never play the same ever again with interchangeable thumbsticks, d-pad and mappable paddles you'll be unstoppable in any engagement.", "Happy to add this to the Halo collection! She\u2019s a beauty.", "Solid feeling controller. Love the design and halo theme of it", "Multiple parts that can be swapped. Comes with an in game code that gives a weapon charm", "Best controller ever. Toss a Halo Infinite skin on it makes it that much better. Recommend to anyone.", "Thumbstick issues straight out of box. Had to send back to Microsoft to exchange for working one. After that it\u2019s wonderful. More of a quality control issue on Microsoft\u2019s end than gamestops fault, however when I reached out to GameStop about the purchase I was told they didn\u2019t have any to replace it with. Just a general pain in the butt just for me to get a working product that I paid a lot of money for.", "Typical, classic, Nintendo fun! Challenging? Not very. Enjoyable from beginning to end? Absolutely!", "Super fun, a lot of challenges and game time. Since I bought it I haven\u2019t put it down.", "Not a hard game but a good one to relax and play after work.", "If you like yoshi, you can\u2019t go wrong here. Game is a masterpiece and provides decent challenges for even the seasoned gamer.", "More whimsical Yoshi fun that innovates on the last game without changing what we know and love.  A bit easy but still fun & heartwarming.", "Fun game, but too short.  Beat the game after only three days of casual play.", "Yoshi\u2019s Crafted World is fun and a bit challenging.  My 10-year-old loves it and I can play it with him.  Yoshi!", "Really adorable game with an imaginative landscape. This game is cute and colorful and fun for all ages. Collectibles could be a little more satisfying however, it doesn\u2019t ruin the game. Developers did a great job but the game should be priced about $20 lower.", "A fun platformer with charming visuals, interesting puzzles, and a good level of difficulty!", "An extremely fun game not only for my little sister but for me too! Easy enough for her to enjoy but it has some challenges that allows me to have fun as well.", "Oled makes a big difference in the sharpness of the picture and it can be watched from an angle.  Very happy with my new TV", "\"I bought the 55\"\" for the bedroom and at this price you cant find a better Oled. Im was a Sony guy but now I dont have to pay the premium to be lol. Finally a company that is challenging the big dogs and winning!!!!", "I realize Visio is new to OLED and this is their first go at them .., that being said, this tv has potential and I knew saving money over LG would come with some growing pains. I\u2019ve experienced several anomalies that required a power cycle to correct. Some of those issues were sound no video on all inputs (including OTA & web channels), syncing with true 120fps 4K sources. ", "Some features are missing and broken but when it works its great!", "I\u2019ve had this tv for almost 2 months and completely happy with the performance and picture", "I\u2019m happy that I made this choice. I sincerely hope this product lasts more than 15 - 20 years", "Great picture lack of updates. Need support for 1440p and Vrr 4K 120. Also android fully baked in", "This TV is my first oled.  The picture is breathtaking but the television itself has some problems.  Sometimes the television will not connect to the smart cast. Sometimes the TV will not even power on without having to pull the power plug and plugging it back in. But overall I am happy with this television. We have been promised all these things to be fixed and a future firmware update. Fingers crossed.", "I was a bit nervous buying this set being that Vizo just started making OLED's. I can tell you know after I have it in my house. IT IS BEAUTIFUL! I can not believe the qualitly of the picture. I have this set  in my main room and we have a gaming 4k TV on the same wall. Side by side this display makes the other 4k look cheap (btw... the other set is a high end display made for gaming).", "so glad I decided to spend more to get the OLED. Picture is the brst.", "This is my second series 2 elite controller. The first worked perfectly but this one looked so awesome that I had to have it! The only issue is that the R thumbstick is a little sticky when pushing to the L. No other direction, only the left. It is like there is a bit of resistance I have to push through before it releases and goes to the left. My first elite series 2 controller doesnt have this issue. It hampers FPS games a little, but not terribly. Otherwise a great controller and terrific looking product if your a Halo fan. I'm just a little bummed about the aiming thumbstick being slightly off.", "The Elite series 2 was already the best Xbox controller, now has an amazing look.", "controller is awesome. but my Y button doesnt work all the time. its very frustrating.", "Work as great as the original Series 2 Elite Controller but that Halo detail. It was great to find a code inside that gives you a weapon charm that look exactly like the controller.", "Beautiful controller. If at all possible, why not buy the limited edition controller for a small amount more. Im a huge halo fan, so getting an extra controller in this caliber of beauty was an easy choice for me. Elite controllers are an amazing controller for sure, which is part of why there is too many reasons to get this controller, really.", "Like many Elite 2 controllers, this was totally unusable out of the box.  Stick drift was suuuuuuuuuuuuuuuuuuuuuper bad.", "Love this controller. The attention to detail is out of this world.", "Great elite controller for a supa halo fan-very stylish too", "Very cool and feels really nice and comfortable in hands", "Its absolutely beautiful! Great controller", "I loved Yoshi\u2019s Wooly World, but this game came across as very childish and no real goal that you are trying to reach.", "There's so much replay value with this game.", "Awesome game.  Little less challenging but that doesn't take away from the enjoyment of the game.  Highly recommend if your into Yoshi island style games.", "Great game but kind of easy compared to Yoshi\u2019s island", "Single player is tons of fun. Nothing sticks out as being bad other than being a little too easy for mature gamers. Co-Op is a jumbled mess of accidentally getting  stuck on people and losing your eggs unpredictably.", "Pretty fun typical Yoshi game that offers more variety than usual, still not Yoshi\u2019s Island levels but pretty good nonetheless. Worth my money.", "Once you get past the cuteness factor of the game, you'll find a very fun gameplay experience. Controls seem very responsive, and the 2 player mode is loads of fun and laughs. Great game to introduce a young child to gaming. A great addition to the Yoshi themed game library.", "I haven't been a huge fan of the series since it is a easier version A Mario title but this game has been surprisingly fun", "It\u2019s so cute. I love Yoshi.  This version is built using craft materials and can get quite challenging!  I love how detailed the graphics are! Fun, fun, fun!", "Great game and fun but unlocking different types of Yoshi\u2019s with yarn in the last game was a lot better than the costumes concept.", "Got my package, installed it and got a STEAM POWERED program that starts itself every time I start my computer [no option to turn that off] and emediately takes me to thier online site with only options to buy games. The was NO GAME on the disk. No information saying that it is an Online game only [no information saying it is even an online game on thier site.] I tried to check out the Forums, registering for thier forum kept takeing me to other sites. These other sites required me to reister. This repedative nonsence went on for 4 diff registration that finnaly returned me to the STEAM forums. Unfortunately I still wasn't allowed to access thier forums.  No tech support, no contact information ,no game.. No reason to even consider getting this product.", "I own both Supreme Commander and Forged Alliance and find both games superb. When i head there was a Supreme Commander 2 coming out of course I ran right out and got it. I can honestly say this is one of the worst war games period. My reasons include the fact you must unlock a LOT of stuff to even consider playing the quick battles. There's only 6 maps, yes i said 6. The fact you cant even choose what side you want to be on until you unlock the ability, and the WORST part is you cant even see a simple overview of the maps when you are selecting them your basically better off throwing darts at your comp screen to decide what your gonna do rather than actually getting to decide anything at all about the battle ahead. The point I'm making here is don't Waste your money... This game isn't even worth getting if it cost 2.50.", "played it today and i've never played a better RTS. im lovin it every step of the way and although its a little bit more 'cartoonish' than the last one, its still definatly a fun epic story lined game. it beats AoE, UaW, and matches EtW, and C&C. i really love playing it and my slightly old system can handle it perfectly. i was a little disappointed, i though the requirements would be a little higher and i definatly see a decrease in the quality. overall, 8 out of 10. AWESOME game. right now, im a little concerned with the new unit the cybranasourus rex (yeh, i probably spelled that wrong) it seemed a little like an out of place character to be put in the game. its still a pretty cool unit and theres so much more upgrade. the most important is the eco that they had. the last one sucked and was full of glitches. this one is MUCH more stable, its brings the good parts of halo wars and not the sucky parts (because seriously, halo wars sucked) buy NOW", "The frist two games of this year that I was waiting for were Supreme Commander 2 and C&C4. Both are god awful. Supreme Commander 2 is missing the best elements and nuances of it's two predecessors. I actually think that TA was the best of them all. Sad that games just get worse and worse as they come out with new titles. What happened to the unit types??!! There is not nearly as many unit types as SC or TA. Plus, what happened to the recycling of plants and rocks... the environmental resources you could live off until you got your resource production up and running? And why are there so few multiplayer maps?  I have an idea. Take the Total Annihilation engine, give it some new graphics,new sound, a new story line and new unit types... and don't change anything else...", "Don't know what the other guys here are talking about, the game is great, ya sure they took out some of the things the sup com pros loved, but the thing is, more people want to play RTS so you can't expect a newbie to grasp every concept of the game, unlike the pros. If they left some of the things from the old sup com in, it would be so unbalanced it wouldn't been as fun to play for the newbies.  Alright so lets get down to buisness, the storyline is great and the graphics blow sup com 1's out of the water, while supporting older computers that don't have as good of processors or graphics card. Win, Win situation. At least thats what I think, and that is why you're here isn't it ??   They added a new research screen to simplify it and added a whole bunch of new features like building add ons and new experimentals. FYI to all aion illuminate fans, they don't have naval anymore. I know, ouch right? Well I think we'll live.  On to sound. They did a really good job with the music this time, its about 10 times better than sup com 1 and the sound effects really match up and exceed what you think they will sound like, when lets say someone gets blown up by a nuke or someones commander goes into meltdown.  For all those hard core gamers out there, the 10 hour battles have gone away, I know, sad right? Well they replaced with a shorter even fiercer model of online game play, that really seems to fit, and when I mean shorter, I mean average of two hours. You can still build those big armies just faster. One thing I wanna finish up with is the Interface. They kept a lot of the interface from sup com 1 and FA, but also added the research screen which I talked about earlier. It works like this: You need research points to buy any sort of research upgrades and those research points automatically come along, but you can build research facilities that increase the speed at which you get them. You can spend research points on things like, personal shields for your units, or new buildings, sight upgrades, radar upgrades, and new schematics for buildings and units. Big FYI for all those 360 gamers lookin at this. The 360 version of this game is just as good if not better than the PC version.", "\"Make no mistake - this IS Supreme Commander Lite. It almost feels like a very weak demo of SupCom 1, but worse. Even with the new research trees, you'll still end up with no where near the amount of units to choose from that you had with SupCom 1 and its tiers. Yeah, sometimes the tiers were annoying to work through and it took far too long in most instances to get anywhere close to maximizing your faction's potential in a single match in the first one - but this \"\"sequel\"\" has completely gutted it altogether. You'll likely end up mashing your mouse button or hotkey to churn out more of the exact same units.. over... and over... and over again because there's barely anything to choose from for unit diversity. The game requires the Steam client and an internet connection just to play. While it's true that most people these days have an internet connection", "If you like multiplayer or lan-parties add this on to the list because you get a lot of fun in that little box! There are many nay-sayers but i really don't know what the heck they are talking about. Graphics are great, simple neat menu, intense tug-of-war games because its hard to dominate players that are sneaky!... It runs great on both my desktops and even my laptop! So if you have a decent machine you can easily run this game because its not demanding at all. Very fun to play against you friends and the online is pretty intense. Single player story is good and easy to get into because you dont need to have played the originals to understand whats going on or anything. As of right now you can save $** if you buy it which makes it even more worth the money. 10/10! pick one up maybe ill play against ya!", "There were so high hopes for this game, as SC 1 and FA had left me hungry for more games like TA, yet unfortunately the wait would lead to disappointment. For those who enjoyed the similarities between TA and SC1 will be the biggest disappointment here. The economy of the previously mention games is utterly gone. No worrying about balancing energy usage and mass income with building and firing weapons, its all been removed. Its now a simple straight up, build up army, build base defenses, go conqueror enemy. Also gone are the tech levels, and weaker starting units, and teching up. Instead its replaced by research points that gradually come in much like all the other resources.  Without that element nothing really stood out in the game. Without the challenging economy, the campaign portion of the game becomes simple, build defenses, build army, repair defenses occasionally, attack enemy. Musically nothing really stood out, there may of been a couple times when I stopped to notice it, but again nothing inspiring. Storyline it also seems kinda lacking, it comes off like a Final Fantasy storyline mashed into brief conversations between 18 missions. There just simply is not enough there to make a great story, which once again left me greatly disappointed. Graphically the game was nice, and the small scale compared to SC1, meant I could actually stay somewhat zoomed in, to actually see the units, and not just commanding by click on the small icons. The movies were decent, just way to few of em to tell a good story. The game controls fairly well, being rather simple game now, its easy to pick up and get right into. Those with SC1 knowledge will have no trouble picking it up, as the mechanics are still basically identical to the first. Those used to Starcraft or C&C type games might take a bit longer but overall its not a hard game to get into or to start playing. The game probably has some strengths in multiplayer, as the unit balance does seem good, but I have not done any of that yet. Overall SC2 is not a bad game, everything seems to work, the game loaded smoothly, the game had no noticle lag, or slowdowns, but there is just nothing in it that simply makes it stand out. The game itself was fun to play through, and I did enjoy the limited story, and I may still by the sequel when it comes out (of course the ending had a cliff hanger for a sequel... what game doesn't do that no a days) yet this probably won't be a game I will touch all to often again now that I have beaten it. My suggestion is wait for the price to drop on this one if you simply want to see the continued storyline from the first, as the game offers very little of anything else to draw players away from other games.", "\"First there was Total Annihilation; superb, deep, endless strategy, constantly evolving, hundreds of different units, quick to learn hard to master. Then Supreme Commander and Forged alliance; made Total Annihilation (TA) larger with a better AI, beautiful graphics and much of the same elements that made TA great.  Then Supreme Commander 2; What the hell happened here? You took almost everything that made the first two stand alone and dominate and tossed it out the window. My only guess is you tried to dumb this game down to the likes of a C&C or a Craft game so it could appeal to the zerg boys.... probably thanks to Square's involvement. Really Chris Taylor how much did it cost to convince you to kill your baby?! Graphics went from sci-fi futuristic to cartoonish. Threw out the unique resource allocation and made it a click and buy system with a \"\"Research\"\" resource which is another Craft game move that sucks. Took out almost 60% of the different units in the game an dumbed base creation and defense down to arrow towers CRAFT again!. All the maps appear to be zerg/rush maps. Threw out the tier system... Sheesh I can go on and on but I won't. Bottom line: If you loved what made Total Annihilation and Supreme Commander unique and fun", "\"Okay, so yeah, it's pretty much like the first two in the basics: the three factions, the basic units (Some of the basic units are straight out of SupCom 1 and Forged Alliance), and one big war. On almost everything else it's completely revamped. Upgrading has been replaced with \"\"Researching\"\"", "I bought this to play my ps5 and not only thengames look great but movies too", "Waiting for the firmware update, then I can update to 5 stars", "\"Great TV with all up to date technology. From Dolby Vision and Atmos, HDR10 + etc... Perfect for gaming HDMI 2.1. I trust in Vizio products I bought a 60\"\" in 2012 and still running (2021).\"", "I purchased the 65 inch OLED 1 week ago!  The TV is beautiful!  Deep blacks & colors are great right out of the box!  You will have to do nothing to get this TV to look great.  I wish they had offered a 75 inch OLED but I am sure this will come!  Picture processing is good as well!  I recommend this TV to my friends!", "I picked this OLED Vizio for the intensely beautiful picture and I have not been disappointed. It's incredible for gaming on my PlayStation, and watching vivid shows.", "Problems turning OLED tv on. So I returned it and got another one.  The screen had a green tint to it so I returned it and got my money back. Plus the VRR didn\u2019t work.", "I love how skinny it is and how much cooler it runs, the picture is awesome!! Gorgeous unit !", "Wonderful image, oodles of features and an asking price that\u2019s within  reach of the average consumer, what more Can you ask for.", "I\u2019ve always liked Visio. My first 50\u201d had one backlight diode burn out after 7yrs heavy use. Replaced with 50\u201d nano Visio. I was happy with the upgrade. Figured I could get a 55\u201d within the space constraint I had. Got this one as open box. And WOW! The picture POPS of vibrancy and consistent brightness.", "I got this TV 3 weeks ago and so far I love it/ easy to operate/ easy to hook up other devices to it //Great TV", "Beautiful controller. I only changed the D-Pad and still calibrating but it is perfect.", "Glorious equipment for slaying all who oppose Spartan 117!", "I got this as a gift for my boyfriends birthday. I don\u2019t play Xbox and I\u2019ve never played halo but I was completely BLOWN AWAY by this controller. It feels amazing I think the way it was designed was incredible and totally worth the money. My bf LOVED it and made me consider becoming an Xbox gamer.", "This controller is amazing and beautiful I\u2019m glad to have it", "Love the elite series 2 controller and with a halo paintjob.... it's almost perfect. I kinda wish this would have included the updated series x/s share button but that's a minor complaint. With the latest xbox update, it's now able to quickly connect to 2 paired devices which is probably the best feature of the updated series x/s controllers so I'm happy with that. If you love Halo and were thinking about getting an elite controller, this is the one you want.", "Its similar to the regular elite it just feels lighter quality feels slightly better and it looks so hecking cool in person so many details that the pictures dont do it justice", "Performs like you expect the Elite Series 2 to do so, but with the added benefit of looking wicked. By far the coolest controller I\u2019ve owned. Hopefully it will keep nice and not develop rub marks from fingers.", "I had the series one which still works great, but decided to upgrade for the better paddles and internal battery. I am very pleased with this product not only because its Halo but it does feel like a substantial improvement over the previous generation. I'm still trash though...", "Great for Halo fanatic.  It weighs a lot more than your standard controller.  Bought as Christmas present for the Halo fanatic.  Splurged on the 2 year warranty just in case too.", "It\u2019s a great looking controller but without the console to match, it will be lonely. Very hard to pick up the items you want unless you want to pay ridiculous prices from scalpers who seem to get these items with ease. But still a great looking controller.", "Pretty simple game, great for younger games, way too many things to have to collect.", "Good game. kinda on the kid side of game, my kids like it.", "Game is great for parents to play with their kids.", "Very fun! As someone playing through sekiro, this was a nice pallet cleanser.", "I had an open mind when deciding to play this game and after clearing the first world, it just wasn't for me. Compared to Woolly World, this game was lacking in several departments; the music was repetitive, the skill level was far too low even for just the first world and the game doesn't reward you nearly as much as Woolly World did in terms of amiibo. I'd recommend this for die-hard Yoshi fans or kids age 5 through 9.", "The kids (6 and 3) love it. And I love that they can play together. My 3 year old doesn\u2019t know what she\u2019s doing but my 6 year old helps her. Yoshi\u2019s crafted world game is also fun for parents :)", "Simply amazing. My son and I are loving this game. It's so creative and well thought out.", "So much fun! For all ages! We have from age 4 to 34 who love to play.", "Bought this game for my son, but i enjoy playing it too.", "My family and I really enjoy using the Nintendo Switch and I must say this is by far one of the best games ever! Super cute yet challenging at times. There\u2019s a gum ball where you can insert coins and collect costumes. There\u2019s also a flip side to the game where you interact and catch little puppies. Just when you think you\u2019ve completely the level there\u2019s other mini challenges like a scavenger hunt. You should purchase this game you won\u2019t regret it!", "So far I've enjoyed playing SC2. there are a handful of differences between it and its predecessors both good and bad, The battles aren't as big as the ones from Supreme commander, but they are still brilliant, the new research is fun, as well as expanding buildings with tactical add on pieces even if they are minor one's, and the fact you can replace your ACU without permanently losing it now, and the new upgrades for the ACU, and units. Most of the cons I've found so far are, requiring steam, the smaller battlefields, and other minor problems which may be fixed eventually in updates. It lacks the feeling of the original game but its still fun to play I'd recommend to everyone that they try the demo on steam first before deciding. Overall I rate this 7 out of 10.", "First off, you need to have Steam installed on your computer. Thanks for the heads-up on this Square. You buy a hard copy of the game but then have to log in to Steam to download it from their servers.....really? Some people are showing a 9 hour wait time to be able to play. Again, really? Second, they destroyed the economy and the basic gameplay of the original game and its expansion. None of it even matters any more. Its just a zerg fest. Most people think its due to the console being added to this title and thereby attempting to expand their market. They broke what made the first game such a huge hit. Gone are the days of epic battles for my 3rd point. Maps are now 5kmx5km. WAY too small. Fourth, you can't save/load in skirmish play. Soooo, if you have to leave in the middle of a longer lasting game (not real sure how this will happen being that everything is so small-but want to give them the benefit of the doubt for future content added updates), too bad. Can't save. Fifth, the voice acting and story line for the campaign is just plain stupid. I guess I could go on but I'm sure I've expressed my opinion enough for folks to understand where I'm coming from. This is just insulting to people who have been really looking forward to this title. There was a reason the first game was as much of a success as it was. Well, Square Enix effectively threw that out the window and scrapped it all. Good job.", "I haven\u2019t used it yet but the unboxing was amazing. This is a really nice looking controller. It really feels right.", "This controller is GAWGEOUS!!!!! I love the cosmetic design of it, the rubberized grips, the back paddles and the accessories! It comes with it's own wireless charger, interchangeable analog thumb sticks, and D-pad. The design is reflective of Master Chiefs armor. I LOVE IT!!!!", "Amazing controller well worth the money solid feel and looks fantastic i want to buy a second one already", "It came broken\u2026. Stick drift on the right thumb stick right out of the box.", "Quality feel and looks awesome. Also arrived early on the 15th was shipped next day air.", "Exactly what I was looking for in a controller and the Halo fan in me loves the Halo theme on the controller", "Its good just sucks how the bumpers dont like to work sometimes its vrandnew", "Beautiful controller (just need the console to go with it). GameStop packaged it well and sent it super fast. It actually arrived prior to release date. Now I just need the console!", "Great controller that feels better than the standard ones. Paddles are useful in gameplay and the color scheme is great. You also recieve a code for the controller as an accessort in Halo Infinite.", "High quality packaging, nice dock and very long usb-c cord. Even the packaging was superb. Everything was secure to make sure nothing would be damaged in shipping. It is very true to the pictures and works great!", "I had no problems after mounting the TV and the set up was a breeze", "Had this TV for a month now and it's worth every penny. Don't listen to all the negative you've been hearing about Vizio. They have done a really good job with all their new high end televisions.", "I just bought this item and am so excited to watch sports and movies on it!", "Compared to the LG CX and Sony A8H the picture quality is way better than Sony's OLED.  THOSE Reviews online are biased and not accurate IMO.  Not a fan of smartcast yet over android TV. TV Has some firmware glitches.  Sound from TV speakers is OK not as nice as the Sony's; however this is a one Heck of An OLED with no black Crush....", "We were looking at one but am the type of people who wi only purchase an item like this when the one we have goes bad. Now the old one will go into the basement.", "The best \u201cAmerican product 100% costumer satisfacci\u00f3n  guaranteed", "I bought this tv and set it up at home but it was quite obvious to me that the feed I was watching on this tv in the store was optimized for the tv for better picture. At home however, it was grainy and looked like motion flip art like the one you draw and flip through. The tv was so hot I thought I bought a hp laptop.", "This was my wife\u2019s and my anniversary gift to each other. We regularly watch movies, and we are amazed at how the cinematographer\u2019s vision is articulated with this tv.", "I\u2019ve had this TV for about a month of movies and gaming, couldn\u2019t be happier.", "The image on the tv is fantastic and the sleek slim design gives it that pop aesthetic that the \u201cworld\u201d within the TVs borders is almost life-like to the touch.", "Great controller! Only wish I had the halo Xbox to go with it", "This is the elite series 2 but they did an excellent job with the halo theme. The best controller with now an awesome new paint job.", "Fun game, really nice visuals. It's an easier platform so more people can enjoy it, but seasoned gamers will like the collectables available, which give replay value to the game and a bit more challenge.", "One of must fun Nintendo games I've played in a long time.", "Nintendo does it again with sweet crisp graphics and my kids love yoshi", "If you enjoyed Wooly World, you'll love Crafted world. This game is a great addition to the Yoshi series and adds fun mechanics unique to this game. It does have a 2 player mode and would be fun to play with a less experienced game. Overall presentation is great, control is simple, and platforming is fun. Nintendo game prices hardly comes down, so if price is a factor, pre-owned with PowerUp Rewards discount really helps mitigate the cost, and maybe invest those points. Either way, top notch Yoshi game and a must play for Yoshi fans.", "Great fun, reminds me of Yoshi's World from when I was a kid", "Love the extras each level has. Not a fan of yoshi smash level but in general love the game!!", "This is a proper modern evolution of the Yoshi formula.  Giving you access to the fore- and background when throwing eggs adds an extra dimension of exploration and the collectibles are definitely worth getting.  The flower requirement to progress to new areas is rarely difficult to fulfill, but it emphasizes the collection aspect in a game that gives you a lot of tools to do so and is chock-full of stuff to see.  If you've ever loved playing a platformer, you need to play this game.", "A few weeks before the game came out I downloaded the demo just to see if my six year old son was going to play it and he and when the game came out I got it for his bday and he have not put it down", "Great game! Side scrolling puzzle solver better than I anticipated and can\u2019t put it down. There is a gum ball machine for different costumes ADDICTING haha", "Yoshi\u2019s Crafted World is an amazing game! It is beautifully designed and appropriately challenging. The ability to play two players is also great as my wife and I like to game together. I would definitely recommend it to anyone who owns a switch, especially those who want to play some couch co-op.", "Bought this for a Christmas Gift for my husband and myself. ", "1 year ago", "Got this in time to have it up on the wall Christmas day. The family loved it!", "The app sometimes glitches green and I need to power cycle yhr TV to work right. Also, I can't seem to download other apps that seems to be essential. Example Crunchyroll.", "Bought the TV right before Christmas - just amazing clarity and color", "Excellent picture quality and very easy to set up!", "\"About 10 years ago I purchased my first Vizio 54\"\" just months after its release.  It held up well until one day it just didnt turn on.  Lights on", " when clearly the Amplifier is sending signal.  Looking forward to a future firmware to make this TV absolutely perfect!\"", "Very nice picture, nice sound, but, the OLED effect can cause severe headaches in certain people.  There should be some form of medical warning and available solutions.", "I purchased this 3 weeks ago and I love the picture quality. After contacting the boae surround  system its like you your in the movies! Great job vizio.", "I just bought this TV, did not plan on spending this much. This TV is worth every penny. The color is so vivid. Model is sleek and so much thinner than LED.", "I bought this one month ago and I'm glad I did this model.", "My son loves this game. Like Super Smash Bros with Kung Fu Panda characters.", "I got the game through PS Plus, and I was skeptical at first. However, after playing it with my friends for a little bit, it was some of the most fun I'd had playing a game ever. It's no Citizen Kane, but it does its job as a fun, simple fighting game well.", "We Bridges this for Christmas for my nephew everyone had a good time playing", "I bought this game for my grandson and he absolutely no loves this game...", "I bought this game for my daughter because she\u2019s very competitive. We thought it was family friendly but it\u2019s very hard to learn different moves. I had a hard time playing it also and I\u2019m good at playing games.  It\u2019s not the easiest game to play and in my opinion its not for kids either.", "My 5 ear old loves this game.  Controls are simple and each fight location has their own challenges.", "This game deserves 10 stars but I was only allowed to give 5. It is definitely better than smash. I think it should win game of the year.", "I sew the trailer and it was ok not the best and characters were alright. I heard that there was a lag in the game  but over all i give it 2 stars", "another super smash clone but horrible one at that", "i wouldn't buy this game if it was free. i dislike the game's audio and lasting appeal. so bad my children couldn't even bear it", "I have a LG OLED TV and I wish I waited for this TV. I'm very pleased. I hope the update will fix the power issues. I have to turn on multiple time before the picture would stay on.", "I\u2019ve had my VIZIO 55\u201d OLED for about 3 weeks. Clear picture from any place in the room. Color is so much better than the TV I replaced which was a VIZIO LED 55\u201d TV.", "Other than the Smartcast being a bit buggy, the picture is spot on!", "i have been facing multiple issues from the time i got this TV.", "Have had it for two weeks, perfect picture and great design. Loving it so far, great price for all the features and crystal clear picture. Just wish it had a HBO Max app preloaded in the main menu, but very easy to cast from my smart phone or iPad to the TV", "Vizio has stepped up their game, going head to head with the LG and Samsung on this one.", "Finally, someone has made an OLED TV that I could afford!", "Well worth the price. I was sold on the fact that you can see definition anytime there is a night scene and it\u2019s not just blurry.", "The colors are incredibly vivid, even with a standard HD signal. I also love that it has screen mirroring for my iPhone along with a bunch of other viewing options.", "Just had this installed yesterday the BestBuy's Geek Squad. Also installed a new sound bar. The picture is amazing and we are looking forward to seeing many of our favorite shows in a whole new light. The remote will take getting used to, but we'll learn. I wish there was an app for PBS installed. We'll have to see it by AirPlay.", "When the game trailer is a rip off of super smash bros, you know its going to flop. the chrachter selection is poor and the gameplay is choppy. I need my 20$ back...", "I really enjoy playing this game. It is fun and enjoyable for all ages.", "The game is cute but hasn\u2019t held my 6-year-old son\u2019s attention. He has beat Donkey Kong Country, Super Mario Odyssey, and SupernMario Deluxe. He only played a couple of levels of Yoshi and hasn\u2019t went back to it, over a week later.", "This game is similar to Yoshi's Woolly World.  The levels are made of things like cardboard, ribbon, straws, and construction paper.  Each level can be played in a normal mode or a reverse mode.  There are cute costumes you can unlock using coins that you collect throughout the levels.  It's a perfect game for parents to play with their kids.", "Got this for my 2 sons they love & have a lot of fun playing it together", "The game is wonderful to play through. Fun levels, extras, cute outfits, and even an easy mode for younger players. Just dont try to get everything, or you wont have a good time.", "This game is super fun and adorable. ", "This seems more like a kids game but everyone will enjoy. It\u2019s very entertaining but not very stressful. It looks so cheerful and colorful. And who doesn\u2019t like Yoshi with wings.", "Fun to play while letting those who want a challenge to be able to spend time to complete the game", "While it's easy enough for children to play, that doesn't take away from how fun it is for the whole family. Levels have a decent amount of replayability, and it's decently challenging in a casual way.  Would recommend to anyone.", "Fun game for kids and adults. More relaxed then Mario and very kid friendly!!", "Bought this on Black Friday after reviewing 4-5 other LED TV's.  I'm so glad that I did.  The OLED experience is simply stunning.  My previous TV was a Panasonic plasma which I held onto as long as I could because I didn't want to give up those deep blacks and contrast.  This TV has such great contrast - for example when you watch a dark scene with isolated bright spots (like lamps, office windows, etc) it will blow you away how bright those spots are against the deep black surroundings.  The panel is made by LG and you can get the same performance for a lot less money.", "I bought this a couple of weeks ago.  Easy to install and set up.  Fantastic picture!  We love the smart cast and look forward to our elderly relatives coming over.  We can FaceTime our loved ones and airplay it on the TV and everyone will be able to see.", "I love the tv but am on the fence on returning it or not. Fix everything people are complaining about. Also 1440p needs to be 120hz. Theres no reason why it shouldn't be. Get it together please", "I have a long time history of purchasing Vizio Television and each time of purchase I have upgraded having said that Vizio has shifted in the best way. Awesomeness!!", "\"I had a Vizio 65\"\" LED TV that I thought was still pretty good but I was intrigued by OLED. The set I bought looked great in the store and even better at home. And that's on everything", "Great picture quality and very easy to set up. Would highly recommend.", "This is the best tv I've ever owned! The picture quality is amazing! I don't have enough words to express how happy I am with this TV.", "Bought the oled Visio over the Samsung q series. Very happy except sometimes the input switches from one to another happen 2 times", "I set this TV up less than a month ago and still going through all the apps and everything it can do.", "I really want to love this TV. The picture quality is amazing. The smart cast interface is solid, and it's all packeged under an beatable price. ", " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "3", "Really fun 2 player game that seems well balanced. It looks great and feels rewarding to go collect stuff. It's really nice that the game seems to avoid many the co-op deaths that I'm used to in new super mario bros u deluxe and yoshis woolly world (we jump or egg each other and fall to our deaths).", "Its a deep 2D game with an interesting spin on yoshi island. Nintendo always amazes me with the great graphics with thier titles. Gameplay is smooth and overall fun is better with my wife.", "Simple, super fun platformer that\u2019s perfect for kids or couples to play!", "Great game for small children and entertaining for adults as well", "Great games for kids and parents to play together.", "Amazing game. Graphics are too cool. They're made out of cardboard, bottles, etc and the two player is fantastic. Highly recommend.", "I bought this game for my 8 yr old autistic daughter and she absolutely loves this game. It is her first video game bought soley for her and she just took right to it with no issues at all. For other games she has played it has been difficult for her to grasp what goes on on the screen and how that associates with what she is doing on the controller such as constantly running into walls on mario kart because it was difficult to for her to figure out how to steer but no such issues with this game and she absolutely loves it.", "It's sooo cute!! The levels are adorable but still challenging enough if you want to get 100%. My new go-to game for destressing~ <3", "This game is super fun and brings out the kid in me. Each level has multiple challenges, making the game seem like neverending fun. The voices are adorable and the choices are plentiful. Great game, highly recommended.", "It\u2019s a really relaxed game that you can pick up and play anytime. The graphics are amazing and unique. Overall, I\u2019d definitely recommend this game for anyone who is a Yoshi fan.", "Me and my 5 year old really enjoy this game, if you enjoy the Mario games this is one you can add to that list.", "An incredibly fun sequel to Yoshi's Woolly World.  Amazing graphics!", "The game is fun, and the graphics look great, some levels are hard for a children\u2019s game, but over the game is great.", "This game is a crafted masterpiece! The level of detail is gorgeous. Gameplay is a throwback to the classics while maintaining a modern feel. The two player mode is unique and available right at the start. The game is great for all ages and incredible for a good time or a family game night. I highly recommend this game!", "Entertaining game for all ages.  The levels are relatively easy to pass but become challenging if you are the type of gamer who goes for 100% completion.  The colorful graphics also help add to the fun nature of the game.", "Great game for me and my kids ages 6, 4 and 1. They can actually play it on their own and love it.", "Cute game. Just as fun if not more than Wooly World was.", "\"Whimsical, light-hearted platformer. Densely packed stages filled with collectibles, secrets, and uniquely beautiful art designs.  Tons of content adds replay value to keep you playing long after finishing the six to eight hour \"\"main\"\" adventure. Definitely a worthwhile purchase", "If you like the gameplay of Yoshi\u2019s Island, the art style of Yoshi\u2019s Woolly World, then Yoshi\u2019s Crafted World is the gamefor you... and the family!", "Sort of short, aimed more towards kids...but if you love Yoshi and want something to sit back before bed and relax and play, this is your game.  So charming, so chill, so Yoshi.", "Just bought tv a while back moved to the new house and now it won't turn on", "This TV replaced a smaller, older VIZIO I bought back in 2011/12. Was not looking for an OLED, but went with it since the price was so good. I could not be happier. The picture is GREAT. Everything we watch has looked amazing on it.", "The picture is exceptionally light and bright where it needs to be but the infinite dark reminds you it is an Oled, this tv IS IN a class of it's own!", "About my TV last month I love it love everything about it", "I am pleased with the quality of this unit. Best tv I have ever owned. Oled is off the charts, the colors pop and deep rich blacks. I'm creeping up on retirement and I didn't want to buy a quality tv on a fixed budget.", "The picture and the Vizio surround surround speakers are excellent.  Response to the remote for adjusting sound level is sluggish and remote has few features compared to other systems.", "For the picture this has been great for the price. The reason I give it 3 stars though is because I am very critical of when the operating system is not \u201csnappy\u201d.  For a modern TV, losing of apps and maneuvering through the UI should be quick. While this is better than my old Samsung TV OS, I still expected it to be quicker.   I also hate h to r banner style at the top. My first choice should be to pick an App rather than some curated selection when so turn on the TV. I haven\u2019t been able to find a feature to turn it off.", "It's better quality than I imagined! Amazing TV!", "So far I love it! The new tech for video games is awesome!", "This is my first OLED tv and I am loving it. I\u2019ve been using Vizio TVs for years and have never disappointed me. This one is super fast and there\u2019s no lag when selecting through the apps. The lag is something I hated on my previous Vizio TVs bu that\u2019s gone now. Now just bring HBO Max! One thing I don\u2019t like and hope that it\u2019s fixed in a future software update is that currently, 4K/120hz HDMI ports don\u2019t work on the PS5. Fix that and this TV will be perfect.", "It's comfortable and works great. My only frustration is that it doesn't seem to allow button remapping. I can set it up on the switch, and the buttons are changed on the switch paddles, but this controller doesn't allow the changes. Not sure if this is a switch issue or the controller. Otherwise it is great", "[This review was collected as part of a promotion.] This controller was bought for the intent to enhance the Switch Experience, and to add some more skill to certain games. The case did arrive slightly damaged, the inside plastic was torn. but the product remained in perfect condition. It is light, but doesn't mean it isn't quality. It brought a different set of skills to games that required more then a small handheld joystick. A little throwback to the classic design of a controller.", "[This review was collected as part of a promotion.] Received to try out on our gaming system and definitely enjoy it way better then the cord controller. Having wireless is more convient as you can move better and no worries about pulling a cord out of the system. The Over all grip is very comfortable and nice fitting. Not only is it convient, comfortable but also comes designed with Mario which is many favorites of alot of people. Alot of my family complement us on our new controller for the design and now wants one or something similar.", "[This review was collected as part of a promotion.] This controller was so eay to use, and dits just right in my hand. I love the colors it comes in and connects very easily.", "[This review was collected as part of a promotion.] I like having a controller to hold onto with the switch and this one gets the job done.  Set up was easy.  The only downside is no rumble, but the added buttons make up for it.  The retro mario theme is an added bonus and loved by husband and son alike.", "[This review was collected as part of a promotion.] The design on this remote is so cool. The batteries are the only drawback but that can be remedied by just buying rechargeable batteries, which I would highly recommend.", "[This review was collected as part of a promotion.] This is a great controller for the Nintendo switch. It has a great Mario design that my kids loved! It was easy to set up and it being wireless was even better. It seems to be very durable as well. And good thing because my kids are super rough on things aspect controllers. I will be purchasing a second one, so both my kids have them to play with.", "[This review was collected as part of a promotion.] This is a review for the Nintendo Switch wireless game controller. ", "[This review was collected as part of a promotion.] The pros: *feels almost identical to the official Nintendo pro controller.  ", "[This review was collected as part of a promotion.] I have been using this controller for my Nintendo Switch for a couple of weeks now and am very happy with the overall performance of it! It is very comfortable to hold and the buttons are set up perfectly.  It being a Bluetooth Wireless Controller is a huge plus! The Super Mario Bros. design is my favorite though! It's very attractive and I've received so many compliments on it!", "It\u2019s not entry level friendly but can be very rewarding.. I struggled at first, boy it was challenging but with lots of practice and doing tutorials/training I managed to not come in 12th or 10th place.. I now place at about 6th or 4th.. Boy does not wining  a race hurt but it\u2019s the grind and constant improvement.. Could lower the difficult and turn assist on but that would take the fun out of the challenge..I then went to YouTube to see pro gamers struggling or flipping cars as well so that made me feel a little better too..", "If your looking for a real rally experience buy Dirt. The handling on this game is cartoonish. You cut and you get penalties. Total garbage.", "Very detailed graphics, challenging driving, and numerous course selections. A lot of fun for multiplayer. The only semi con is that it is difficult to select changes to your driving car... but overall a must have.", "Simply gorgous to look at and play.  It says pure simulator on the box for a reason.  If you go in expecting anything less you will get plastasized.", "Good game, need to spend some more time playing it", "This is a good one. One of the best driving games I've played. The career mode is a bit of a pain but still pretty cool.", "The WRC 8 FIA World Rally Championship is a great game to play. The cars are awesome and the scenery is breathtaking. There's so much to do! I really have lots of fun playing it. Much improvement over the WRC 7 World Rally Championship. They did a really nice job in putting this game together.", "Great game. Easy to pick up and play, at home or on the go.", "ONE OF THE ABSOLUTE BEST IN THE YOSHI FRANCHISE, WELL WORTH THE WAIT.", "Cant go wrong with Yoshi. Cute, detailed and fun. You get what you see with this game. I love it.", "Super fun game that can be as easy or as challenging as you want it to be, depending on if your thing is to 100% a game or not. Another quality release on the Switch, highly recommended.", "Not a heck of a lot wrong with this game. I like to say this is the epitome of Weaponized Cuteness. The designers did a fantastic job with level design. It feels like they actually built every level in the game with cardboard and construction paper in reality and then put it into the game, and they stick with that through the entire game. The controls are tight and the yoshis are as adorable as ever.", "Very cute! And the right amount of challenges. Great game for all ages", "We love Yoshi!", "Excellent game especially for kids and new gamers looking to learn, but still complicated and fun enough for an experienced vet.", "Really boring and lackluster. Fun platforming but not much else. Good for kids, not for adults.", "Cute game I can play with the family. I love how interactive it is. You can knock over things in the foreground and background.", "This tv has been fantastic and especially since we recently purchased a 5.1 Dolby surround system. Mandalorian looks, and sounds amazing now after getting this tv. ", "Super impressed with the clarity and color of the picture.", "Great picture and easy to use enjoy it very much!!", "Bought for picture quality and I am not disappointed. It is fabulous. I am actually surprised at how wonderful the display is in my home. Very satisfied and would buy again. If it goes on sale anytime soon I will buy another one for another room in my home.", "I am really happy with my purchase. Visio knocked it out of the park with this one.", "It's a great tv. This is my first oled and it works great with my xbox series x. My only issue is that it keeps putting itself back on warm color temp very often.", "Bought this TV a couple of weeks ago to replace a five year old Visio.  Our previous TV was top of the line back then.(240 refresh rate, etc.)  This new TV is fantastic!  What a picture!  Well worth it.", "I bought the tv about a month ago and have never had as many problems with a tv in my life. Vizio has a reputable name so of course I wanted to give the oled a try. Day one when I got the tv home it wouldn\u2019t power up. So after plugging the tv up and unplugging it a few times I got it to power up. The oled does have a beautiful picture but now every morning when I want to turn on the tv it won\u2019t power up again. I have to unplug the tv for 30 minutes EVERY morning for it to come on now. While I\u2019m watching tv the sound just goes away at times and I have to reboot the tv sometimes 3 times before the sound comes back on. At times the hdmi won\u2019t recognize it has the cable or game system connected so I have to turn it off and on again when that happens. This is just unacceptable from vizio. I hear there will be firmware updates but how long will that take?  I don\u2019t know what to do should I return the tv and try another vizio oled or just stay clear of vizio because this is the beat quality they can produce right now", "I bought this TV several weeks ago and I couldn't be happier. The difference between OLED and anything else is astonishing. Highly recommended!", "I\u2019m having multiple issues with it. Tried to set it up with my Xbox X series too play in 4K resolution but the screen goes black. When I did change some settings to get the TV too play my Xbox in 4K it wouldn\u2019t turn back on after I had turned it off from playing. I had to physically unplug and plug it back into the wall too got it too come back on.", "[This review was collected as part of a promotion.] This controller works great with our Nintendo Switch! I love the fact that it is wireless and vibrates while we play. It is also easy to use and handle! We are a family of 4 so I will be buying 3 more of these soon! Highly recommend for anyone who has a Nintendo Switch!", "[This review was collected as part of a promotion.] I love the fact that it is wireless and I don't have to deal with wires being all tangled up. It's easy to hold, perfect size and weight for my hands. Very pleased with it.", "[This review was collected as part of a promotion.] The Enhanced Wireless Controller for Nintendo Switch is easy to set up and use.  I love the Mario on it.", "[This review was collected as part of a promotion.] Power A Enchanted Wireless Controller for Nintendo Switch works great! Love this item, it is easy to hold, and very easy to use and connect to console. Seems like it is very sturdy as well.", "[This review was collected as part of a promotion.] This item came in no time after ordering it which was a plus. It was easy to set up with the game system my boys were super excited and love it.. Now I\u2019m forced to buy another one so both of them can play together.", "[This review was collected as part of a promotion.] I just got the Enhanced Wireless Controller for Nintendo Switch and I must say I was surprised with the quality of it . It definitely makes playing so much easier especially when it comes to certain games.", "[This review was collected as part of a promotion.] This is a wonderful remote it\u2019s make playing the Nintendo switch so much easier. I love the remote it fits perfect in my hand as well my child\u2019s hand! This is so easy to use and much more better for the switch! I highly recommend this remote for anybody that has a Nintendo switch!", "[This review was collected as part of a promotion.] This works perfectly and has alot of extra controls and features.", "[This review was collected as part of a promotion.] I love this remote. It is easy to connect and use. The remote itself is well made and comfortable to hold. The fact that it is wireless is great and makes gaming more enjoyable. It does take batteries, but battery life is long. It is a perfect remote for any gamer.", "[This review was collected as part of a promotion.] I received this controller to test out and review. I suprised my 12 year old with it and he just loved it! He loves that it's wireless. He said it was so cool that he wanted to get his friend one for Christmas! So this is definitely kid approved. Thank you for this opportunity you made one kid very happy!", "This game is perfect for my first grader.  She can play alone, or we can add a Yoshi for a level and I can play with her.", "Awesome game.  Amateur to intermediate skill level with a few hard levels but once you get to the end you\u2019ll play like a pro.", "This game is so cute, easy and mellow. This game can be played with up to two players. My husband and I took turns playing with our 5yr old, he loved it!", "Fun and easy. Though the sound track sounds very uninspired. If only Crafted worlds soundtrack could take note from Yoshi Story.", "It\u2019s a real fun and easy game to play. I\u2019m not sure if there\u2019s a way to do increase difficulty since it only comes with two modes and I play classic. Regardless, the battles are fun, and if you want a game where you don\u2019t have to think way to hard this is it. I love the graphics and I love the creativity that goes into it.", "A charming easy to play title that's perfect for young  kids.", "Overall great game. Interesting and has different elements than other Yoshi games to date. My son absolutely loves it.", "They should know that it\u2019s fun & cute & for all ages.", "Beautifully developed with great music. It appears as only for kids but don\u2019t be fooled. This game has enough puzzles and the replay value is definatley there!", "At first glance you would think this is a kid game and has no entertainment value for adults. I will tell you first hand, that is not the case with this game. The visuals are stunning and there is plenty of action packed platforming for everyone.", "Where to start... do not buy this tv for a next gen console. You have to manually change the input setting from HDMI AUTO to HDMI 2.1 for the Xbox to recognize the 4K @ 120hz. If that wasn\u2019t annoying enough the specs said ALLM, HDR, and VRR. When you go to the TV info screen says no to HDR and VRR. Then proceeded to give the TV another chance by using the apps it offers. What a joke! The screen went green and kept flashing the picture. I tried five to six apps. All the same outcome. Finally on day three of owning it... it quit showing the picture for the Xbox. To confirm it wasn\u2019t the Xbox Series X I switched back to my Samsung Q70R TV which has a better picture and does everything, but 4K @ 120hz abs is still to this day running fine. Needless to say I shouldn\u2019t have bought a VIZIO in the first place like my gut told me. I wasted my gas and time on this TV.", "I bought this almost two weeks ago and next to my brothers LG Oled it holds its own for the price. As a pure Oled screen this is the way to go but It\u2019s not perfect which is to be expected for the price as a budget Oled. It\u2019s native apps that don\u2019t support the tv\u2019s high resolution will have noticeable pixels and it\u2019s already showing signs of Oled burn in if you keep the same image on for more than one minute, you should allow rest mode after 15 sec of inactivity, I\u2019m serious! Just be gentle with the tv and don\u2019t forget to turn it off and you will get an amazing tv.", "No other brand Tv can compete with the quality and price of this TV!", "For those having trouble gaming in 120hz, you have to change the settings to 2.1 on your hdmi 2. I almost didn't buy because the reviews on gaming saying it wouldn't do 120hz at 4k but it absolutely will and the Xbox verified that. Just change your settings to 2.1. The best picture quality on any TV I've ever owned. Truly amazing!", "I've been looking at the new OLED model tvs for a while and I'm so glad I finally purchased my very own OLED 4K tv.  The picture is incredible even if what you're watching isn't in High Def.  High def channels and movies look so good but the 4K programming is insanely sharp. It looks as if you're actually there", "This was a great purchase. Perfect blacks and beautiful color reproduction. I am impressed with the build quality and the attention to detailed such as the the wiring placement. Also the apps that\u2019s included are amazing. It also has Apple TV!! The only thing missing is a voice search on the remote. Other than that great purchase and extremely happy.", "So far so good.  Enjoying the difference that OLED offers.", "Just picked this TV up a couple weeks ago did a lot of research thanks to YouTube and saw that this was the TV to get for gaming A++", "120hrz, VRR, VRR+HDR, black screen but at 60htz it looks great! Vizio please fix.", "Excellent TV! Beautiful.picture. Easy to use, with enough extras .", "[This review was collected as part of a promotion.] This is a great addition to our Nintendo Switch. Easy to set up and easy to use. I highly recommend!!", "[This review was collected as part of a promotion.] I got this for my son and grandson who play the switch together. My son is an old school Nintendo fan so when I saw this with the old graphics I got it immediately. "], "data": [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 47, 2, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "review_description", "count": 435, "min": " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "max": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this."}, {"values": {"label": ["yes: I recommend this product", "2", "No: I don\u2019t recommend this product", "4", "5", "4.2727", "4.6556", " i say it should just have a completely different name slapped onto it. Then i would of not had any quarrels with it", "11 months ago", "1 year ago", " it's a rather unfortunate decision not only because you're excluding gamers but also because of potential happenstance scenarios. Steam goes down? Sorry", " you will hate and loath this game as I did. However if you owned any Craft game or C&C and thought the above mention games were too complex", " which really adds more hassle to the game", " but no one is home", "1", " not just 4K streams and DVD's.\"", " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", " especially if you plan to play the often chaotic but always entertaining simultaneous two player co-op mode.\"", "0", "4.875"], "data": [372, 1, 92, 3, 4, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "recommended_review", "count": 20, "min": " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", "max": "yes: I recommend this product"}, {"values": {"label": ["yes: I recommend this product", "4.2727", "Verified Purchaser", "4.6993", "4.6556", "363", "2390", " because i wouldn't be expecting something so different than what i knew. Now i own both of the \"\"previous\"\" games and they are both excellent", "5", "3", " you're out of luck. A few years down the road and something else happens(such as one of the companies going out of the business or whatnot) and you can't go back to play it for old times sake? Again", " strategic", " but also adds a new era of customization because instead of just going up levels 1", " type of.  So in the spirit of the shopping season i jumped at a another brand new Vizio product", " and to get 4K", "3 years ago", "32"], "data": [244, 6, 222, 1, 2, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "verifed_purchaser", "count": 17, "min": " and to get 4K", "max": "yes: I recommend this product"}, {"values": {"label": ["0", "Verified Purchaser", "363", "1", "306", "2390", "228881042", "2", "3", "228691813", "4", "127332001", "228459804", "228397838", "28", "5", "6", " and so when i found out about this \"\"sequel\"\" i ran out and bought it with out much looking into it", "127185338", "4.2727", "227806298", "227721000", "127127185", " out of luck. Move to an area with limited connectivity? Same thing. I wish developers would stop going with this route", " and epic for you", " 2", " this OLED 55\"\".  ", "7", "126525025", " I have to manually switch the input from Auto to 1.4", "226910861", "226824012", "122140626", "126297513", "126279514", "226623767"], "data": [318, 77, 6, 47, 1, 2, 1, 11, 5, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "helpful_count", "count": 36, "min": " 2", "max": "Verified Purchaser"}, {"values": {"label": ["0", "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "229167959", "228991912", "1", "194520876", "127408484", "2a736f40-6b79-5c49-b539-5eae6b06fe94", "2", "7", "4", "8", "6", "5", "865fb1f7-9fbc-5ec8-89fb-868f67495019", "18", "41", "3", "0a5b2e83-abcb-5537-a109-15a4b8c4f86d", "228476168", "c0fef563-2deb-5c01-acc6-9db6c6fa8368", "15bc27e2-a5ad-5a18-b47e-5f4cd100907c", "11", " i knew it had a different maker but i figured how bad could they have possibly made it... i mean it's Square Enix! Now don't get me wrong it is a good game", "4a650967-e873-5e06-a3d0-81e9530e5a78", "363", "c35409b8-9e25-5996-88e8-e3f1aa9e8065", "3adeb77d-d51a-53aa-9aa2-3908b384030d", "16", "9", " as it's very short-sighted. The graphics are significantly worse than the first one", " then give Supreme Commander 2 a try!  You should feel right at home in this slop show.\"", " 3", "227425437", "227210950", "15", "33722e22-472c-5b56-a877-599999791231", " then back to 2.1. This is very frustrating. ", "02481162-152d-5b33-ba5a-5136b0686613", "8a3401f7-4865-5764-904a-6f8cb7b42edd", "4.875", "0b338d34-27a3-56a0-9787-1d3b437f1ba9", "1962b25e-379f-515a-a961-26950bbd081d", "126289526", "95bf4328-d8c9-52b1-9074-0e246e0f9fe2", "226749057", "6e496bf1-e93c-58ac-8889-a3a9b9b69afa"], "data": [343, 77, 1, 1, 16, 1, 1, 1, 7, 2, 4, 2, 5, 3, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "not_helpful_count", "count": 47, "min": " 3", "max": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a"}, {"values": {"label": ["10 months ago", "fa660933-1130-5c66-9010-24d641f70bc7", "16e925e3-1e59-537e-aa67-1675b613d351", "7f69bc6a-f89c-53d4-a52a-39a8b8512c54", "16 hours ago", "1 day ago", "7 days ago", "9 days ago", "10 days ago", "17 days ago", "18 days ago", "2 years ago", "7ed32763-a3be-57d4-a35e-a166b90de2ee", "16/01/2022 16:17:57", "11 months ago", "21 days ago", "1 month ago", "16/01/2022 16:17:58", "cec7afe6-497f-5ac5-a9c8-b1ca19d4a4b0", "7 years ago", "9 years ago", "10 years ago", "11 years ago", " but i was expecting to buy SC2... Not SC2 revamped... i couldn't just jump into it", "16/01/2022 16:17:59", "228309057", "12 months ago", "16/01/2022 16:18:00", "227799226", "1 year ago", " even on the highest settings. There are ONLY small maps", "No: I don\u2019t recommend this product", " and Experimental", "2 months ago", "2903b4fb-38c1-5b18-86e4-223040292dc1", "3 years ago", "4 years ago", "5 years ago", "9aefa298-d085-5f90-b930-00b20da59e72", "16/01/2022 16:18:03", "0", "16/01/2022 16:18:04", "32", "16/01/2022 16:18:05", "512efb41-f0b9-5a8b-ac21-e6f988f04a2d", "4b63751b-d4c0-5c5f-9138-59a473a7daaa"], "data": [11, 78, 1, 1, 1, 1, 2, 1, 2, 1, 1, 136, 1, 2, 30, 2, 58, 3, 1, 1, 2, 3, 12, 1, 1, 1, 2, 3, 1, 83, 1, 1, 1, 13, 1, 22, 3, 2, 1, 2, 2, 2, 1, 3, 1, 1]}, "label": "reviewed_at", "count": 46, "min": " and Experimental", "max": "fa660933-1130-5c66-9010-24d641f70bc7"}, {"values": {"label": ["5", "4", "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "16/01/2022 16:17:56", "3", "16/01/2022 16:17:57", "2", "1", "16/01/2022 16:17:58", " i had to learn the new feel to the game. In SC2 you now get to your good units by having to research most of them", "538c1919-dad5-54d8-89b1-619b8c7656e3", " and no larger maps to choose from. In the first version you had a large selection of maps", " you can have multiple branches of different customizations", "16/01/2022 16:18:02", "16/01/2022 16:18:03", "1 year ago", "2 years ago", "122158646", "16/01/2022 16:18:05"], "data": [285, 62, 95, 2, 14, 2, 9, 19, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]}, "label": "rating", "count": 19, "min": " and no larger maps to choose from. In the first version you had a large selection of maps", "max": "c58d87e2-558d-5eaa-96b1-2264f00e7e67"}, {"values": {"label": ["4.2727", "ef72459e-8f5c-57dc-af42-0127d2903498", "4.6993", "4.6556", "3.4091", " and experimental units are really not that great", "16/01/2022 16:17:59", "16/01/2022 16:18:00", " in SupCom2 there are around 10-15", "0", " depending on your favored style of play. You can even simply upgrade what units you have instead of the old \"\"send oldies to suicide to make room for the new guys\"\" strategy. Actually", "3.3125", "5", "4", "4.875", "4.0345"], "data": [122, 103, 81, 131, 18, 1, 1, 1, 1, 1, 1, 11, 1, 1, 19, 7]}, "label": "average_rating", "count": 16, "min": " and experimental units are really not that great", "max": "ef72459e-8f5c-57dc-af42-0127d2903498"}, {"values": {"label": ["363", "4.6556", "306", "2390", "22", " yea they are all based of the old games models but i think that most kinda suck comparatively... like the experimental units", " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "0", " it is BETTER to keep the oldies instead of suiciding them", "32", "4.2727", "16/01/2022 16:18:04", "29"], "data": [122, 105, 81, 131, 18, 1, 1, 1, 1, 30, 1, 1, 7]}, "label": "reviews_count", "count": 13, "min": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "max": "4.6556"}, {"values": {"label": ["229196240", "229179703", "229174444", "95223899", "229131414", "229087196", "229080154", "229044038", "228960695", "198688597", "198672375", "196827630", "196827194", "196230804", "195216162", "195708350", "194329916", "194187129", "127432481", "127430959", "127420280", "127414142", "127414207", "127411122", "127409004", "127407425", "127405746", "228929144", "228928290", "228863224", "228776856", "228759010", "228750584", "228749581", "228724687", "228722869", "194027229", "194017047", "192503208", "192137369", "192087597", "192080051", "192046520", "192045625", "192042914", "192041796", "127405362", "127405229", "127404696", "127396175", "127396143", "127359093", "127348302", "127348104", "127347414", "228719614", "127345863", "228712408", "228703343", "228692495", "228632763", "228622725", "228576384", "228545194", "228523449", "192040841", "192039616", "192038437", "191969147", "191868187", "191531039", "191517192", "191510980", "191473354", "191467877", "127345574", "127333838", "127321759", "127320268", "127319595", "127299640", "127295961", "127293457", "127293081", "228523275", "228509090", "228499139", "228478134", "228397787", "228341387", "228321620", "191464723", "191463669", "191462968", "191459315", "191448343", "191443448", "191440654", "191439900", "191439828", "191439957", "127291762", "127286343", "127272761", "127262343", "127260250", "127259475", "127254841", "127250995", "127250993", "127250112", "38246272", "23501684", "23367706", "19236943", "19088941", "19030618", "15250428", "15250438", "15250426", " for so called \"\"game breakers\"\" as they were know for in the old games", "127238242", "127234219", "127230795", "127187464", "127183266", "127179492", "127178055", "127177220", "127161458", "228297521", "228244888", "228226690", "228181572", "228165736", "228114419", "228085186", "228057468", "227938540", "191439701", "191439022", "191438590", "191438462", "191438175", "191437894", "191437728", "191435985", "191434602", "191433776", "127153348", "127152461", "127151155", "127149546", "127147505", "127144002", "127140095", "127137390", "127131702", "127130838", "227875021", "227791669", "227778090", "227771273", "227732223", "227730979", "227715331", "191433462", "191432612", "191432155", "191353081", "191322300", "191322155", "191321523", "191169574", "190972289", "190971178", "127127997", "127125697", "127123561", "127120887", "127117350", "127029556", "127014676", "127012426", "126806434", "15250427", "15250430", "15250425", "15250424", "15250437", " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "15250432", "15250436", "11 years ago", " because the longer they stay on the battlefield", "227695298", "227689648", "227681843", "227672104", "227658242", "227639598", "227614951", "227582245", "227560725", "227547589", "190970117", "190958407", "190900156", "190899558", "190826055", "190820482", "190815305", "190807964", "190805061", "190803084", "126755575", "126755116", "126754711", "126754570", "126746667", "126742656", "126737441", "126736040", "126678115", "126641084", "15250434", "15250431", "190795136", "190786135", "190783552", "190766977", "190764517", "190762148", "190763953", "190763710", "190763007", "190761169", "227514155", "227512948", "227493289", "227489183", "227489075", "227469318", "227466484", "227455329", "227437332", "227433603", "190758968", "190758657", "126629986", "126619345", "126599299", "126597316", "126588300", "126586642", "126576266", "126565334", "126559156", "126552237", "227368178", "227336919", "227333306", "227330788", "227308429", "227300137", "227299158", "227277590", "227277469", "160658457", "157919507", "123364925", "118294186", "116746823", "116634709", "109093076", "108515660", "75707639", "227271113", "227216898", "227212033", "227210524", "227187244", "227186461", "227165525", "227162981", "227149188", "74341808", "126539613", "126536245", "126530828", "126528004", "126526950", "126518100", "126506130", "126498760", "126495952", "227144955", "227115495", "227099195", "227073234", "363", "226961718", "226957452", "226923078", "226915139", "126476050", "126473103", "126440879", "126432204", "126430601", "126410978", "126386211", "126374385", "126350389", "126348541", "126347731", "126346918", "126344921", "126343579", "126337946", "126325080", "126323055", "2390", "126315942", "126302586", "226900312", "226893604", "226870200", "226863307", "226855621", "226844023", "226834410", "226813954", "226754257", "190364463", "122923657", "122567098", "122446616", "122436959", "122339952", "122182335", "122102991", "154204652", "141605618", "138719704", "137193968", "136798584", "136465444", "136365231", "126301922", "126301717", "126291693", "126283489", "126279116", "126277361", "126273657", "226733824", "226732965", "226732331", "226732189", "226723463", "226718702", "226704721", "226700717", "226700432", "122087294", "122023762", "122010486", "121995492", "121974894", "121930697", "121884814", "121884636", "121868056", "121864917", "126268175", "126265497", "126261158", "126253606", "126259865", "126258810", "126258784", "126256170", "126249716", "126252644", "226679986", "226677148", "226674137", "226672941", "226663884", "226662940", "226662747", "226661973", "226608892", "121860312"], "data": [1, 1, 1, 106, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "comment_id", "count": 395, "min": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "max": "95223899"}, {"values": {"label": ["d749678d-aeba-5a6b-b8e2-8d2121463672", "9f20312c-1047-5824-97d2-d5563b8fd046", "178b3b03-2c56-5abc-a016-c74c2633c9c2", "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "bc017585-3bc1-5a37-9e58-f0bed6de9a72", "4167ea1c-87b6-5dbd-a04b-56fc7d1948e9", "b4c20627-111c-5ad9-809f-11d6a82c675d", "ea9ef1ba-d537-5b73-ab71-790616ef3258", "3e14ceea-0717-51ac-9edf-6b0d17b9f978", "3bdf13c6-ed6c-5df7-a7cb-f87507d4b133", "92688319-f675-53b8-9468-2e7b1ea9bbc4", "ff2acd3f-f96f-5935-bdfc-8e29e518fb60", "a3a3d750-800d-5eef-a917-fd5b00598f06", "ebae6bfc-540e-5f39-9ce2-2d46db50b49a", "78865f85-196f-515f-90ed-a8dad95d9065", "89ac96f3-a6a7-5f6e-ac22-302869e30bc7", "65c38814-b259-591c-ae59-a3f0fbae81d0", "902d7992-f6fd-55bd-b5d7-408db5a49648", "540015d7-27e3-50f6-b66b-8646416c0cfb", "00bd1c61-b1e9-5996-9cb2-68f647941463", "5cf58f8e-75b2-555b-b9ac-0edb49219337", "992506c3-cb1d-5a05-afc6-cce6a4a437fd", "70c3cefe-763a-5aca-9b7d-5bd2b36c5595", "c1aea343-68b1-58fa-8a7d-07f265e664cb", "fec5af3e-7f63-5e5d-9649-1b81750f3e24", "bc585083-82d6-5cb5-af8a-7f19120e6f3a", "d92ea3bf-7fab-56df-802f-973a7be01387", "4eeca482-acc8-54f0-bf9c-1552ad6304c3", "b6503cc7-6b14-5ea4-ae9e-5e984741ae65", "4840bb9f-8063-54f1-aafd-dc779ba006b8", "5dfb09b5-3b7b-5c92-8d69-2e487ee55948", "58e11806-69db-59a1-bf1b-1931387149b4", "1b36ae98-a3b9-586b-b75c-92d0b0a64fbe", "ce1ab1c3-34c5-5b21-90d3-be7a37b215d1", "926fe7c6-6345-529c-91bc-35736576d50f", "b74cf53c-979d-5157-b1b1-28572636ecef", "f6a47493-63ec-510b-aba2-8a68eff9bc34", "9699ef26-f730-5927-bf3e-7cdf8ecbb2a5", "3de73f9b-98c9-56e2-805a-e539ab1e5e33", "a2bc0bcb-0540-5dca-b1c2-06430afdd624", "8c024bd3-193e-5631-802c-3a989f6d4f73", "1a337911-6166-5983-b5cf-944db19384c8", "8c51c627-f616-5bdf-aeff-d93bf787994c", "dfa3ef96-f70e-5e78-9ee8-8d0c57f017c2", "8c35296d-ba41-5598-a513-740f8566113e", "6ebdfa30-4058-5fa6-b76a-d8bc6977e810", "960cbf7c-2354-567a-ba9c-537f3e63810f", "69500d83-dab7-5078-9aa1-5e2200736382", "d361c95b-fd18-5024-a6fe-f997562e2d3b", "c74037cf-5c28-5aa1-894a-c9abd50cdc79", "ab03b0d3-cc3b-5cf9-9894-200631099bb4", "296f57cd-b10f-5bd0-8dd9-78048b7c2e37", "667613eb-326c-5e9c-a48d-bdd2461a770c", "603d6f26-ffc4-5059-8cd8-ed6ddd671e63", "7e989ba1-5dbc-561a-b719-01ed3cda849b", "4f131751-4d8a-5bfd-af50-9d2ce3dd046a", "8cbb57c6-0882-59dd-af92-73b57a213812", "86570fa2-2141-573f-93ea-6368fedc9d0d", "a3955d77-2dea-561b-823c-41bc60377780", "9e0d282d-056f-55c9-a62d-13e79bbb844c", "ee801ec0-c5cf-5655-8498-a9770f1a6921", "4ef37b88-1ab9-5d98-adfd-5a7790b9cdfc", "232f5009-6c44-540a-9e7a-040e815522eb", "bb5c5e36-48cd-533e-8b32-ac1840944224", "ce94d9a4-0183-5315-8521-941c99a5aa68", "0fcf6665-8e4c-55e5-8723-8ea686ad425a", "524f0643-9cda-5306-81ab-277f533b47da", "fd3b358c-a67f-5475-a1cd-04c862f97b4e", "aed215bd-32e5-5577-be72-8fe1a4273d12", "87901149-9f7d-5db6-9c6b-7f516bda5b83", "db0b55df-7fd4-5d5c-90d3-eac2b049be4c", "c026bcd2-f440-5b87-95d0-a9dbdd87d4fe", "0d5805fa-77a0-581e-9f6a-b5441020925d", "20b6e8de-5239-5339-97cd-f4a96cf19873", "d7a8c6c4-234e-5c12-a8d0-af859409bd8a", "09c6537e-9796-5aca-a264-354c489b7706", "b6dae06e-562f-5f67-b905-6a267a1b3147", "6ff43da6-1ce0-54d4-9080-221feba20bd8", "9dc8e634-e9bc-584c-b64b-bb39c8f54fce", "3025b560-5f5b-560b-9b15-d3c2ed1468b0", "2dee6b9f-1dd6-500a-9518-e48555992512", "348d2ec6-347b-50e5-9fe8-388a58176915", "de401188-0285-5ddd-93d8-f84f18f155e2", "6879d252-929f-560d-a2f6-c29114a460cf", "065df515-c00f-5674-8005-0e71aac9b6cc", "7b762f11-3f30-5648-898e-b365a7eaedd8", "df5e5870-c422-5585-9dbd-2f01e48ee872", "b9a43399-3aea-58dc-b1c2-96e5bab6e7f4", "e3d25147-7e31-5ade-b955-8c6c07276063", "37ab8cbb-cbe6-5514-bb5a-3223ae898d16", "156a2f4b-a3ee-5a50-8bf2-f2311c908491", "3da6f23f-4693-549c-9b9f-0faa66b56124", "66f84845-97c8-5cca-8bf1-4cc4cdfceead", "8a38edf4-1d13-54d2-a32c-f98303cbd0ac", "b25ea776-319f-5907-bb36-8330e0b9e736", "b7379f49-dc90-56f4-8823-769c4832168b", "92468c29-d5fb-59dc-a142-1e67d15d1ee1", "81bfcb3b-43a9-55da-84ca-2712183f9869", "77925e75-8d4b-5970-9020-ddd3517955c7", "22f370a8-e30f-5cea-9d38-0d7b9da2fd0b", "3c5e7a8f-7138-5143-a3dd-81d9f2bf87e6", "77005922-343e-5afd-8604-de6116cb0a81", "ead016dd-471c-550c-8335-e80ade7ecbb9", "3f2ea70f-6737-57b4-bbff-c6b5af771f90", "14829c73-4cad-510d-9d51-01ef577acadf", "fe7a0330-a5dd-530e-9497-80d37d07253b", "e59c376b-a912-50c5-9d04-8f7f3e7a6d45", "5104f652-46d7-5b1e-bdf2-55b7f55d4b22", "780060a5-4afc-5712-9c61-66c3df2f51ff", "333d879a-9b72-50d3-a5d7-faa0961846ca", "41044c39-03df-5ca0-b0da-9219160fa67b", "c64a9e38-39cc-50ef-9d30-1eed268a4a24", "8e31a70f-17f9-53d5-9f0f-3b578d7433e8", "42674a2c-bab8-5cd9-b2f4-a5b33733beb4", "322502c8-f81a-51b5-b3bf-e6e61a83b045", "c397a7c1-d874-554e-9004-4d7a2422f5d3", "8e0bfb12-1204-59aa-ae95-fc75ec400ba0", "c0b37854-ae65-508d-a8d8-05183e6ca822", "8af5ed1a-cca6-5a39-bcf8-bb9c25ec7806", "c5dd07cc-ca1f-52d8-82df-d13c4e129265", " u can make them with very little ease and there not nearly as effective as they use to be.... which i guess is the trade off for it", "928838d7-ee40-5739-a91c-37320381b139", "0a0d4148-507a-575b-8ca1-9ce89095fc80", "f30f8cd1-56b3-5068-bcd7-d59438a6da70", "caa8b6bd-4ca5-5ed9-b467-f4fc59e596ff", "b6fc226c-c88b-5332-88db-545da41ae9b3", "b0620603-ee01-512d-bdfe-b37993ab43ff", "41b29280-1727-5bba-ac8a-17e914bd2d00", "0efc324a-3a27-5e05-b98d-8cb6cd444775", "3bfce4cc-4c76-5c78-bc93-d740963116f3", "b72f7138-db42-5954-9039-1eebfbe44ba6", "750791b6-adfe-5127-aa53-9a502824f996", "83cdeff3-bf81-5aab-a214-4f778969e26c", "2f8a681e-1bd7-5a6c-a446-4ac731ed373b", "ef6ab344-54b7-5244-a7be-81066f12b6ba", "d29dc126-1eca-5ed3-8156-9f4d98d42b09", "21bbb55e-c631-5317-bbbe-e966c51ddc36", "7fc9e390-1992-5327-9a3f-8730d97e32b3", "e00ba275-4a07-5d26-b371-4317a039c78c", "e6b35618-1a65-58b4-b82f-91fe5c64d444", "85d2e8a6-54a4-5cfd-85b8-a40628881808", "de5d066a-fb60-5496-a2af-4708d4867650", "a803b874-c886-57b3-b93b-16a92cb2c4af", "9d0a0700-633a-5cb9-b33f-88479669ad1c", "78a38873-09a0-5f5c-8680-56bd3d8182bb", "0b9eb2b5-8735-5a5c-b3c1-e574976ff59a", "6680ec17-93e7-5d88-be84-252b6dcf4afa", "830e77d9-5c67-518a-a24d-48656e6ec23a", "9f9fe687-9b39-54dc-a594-be74dc951e9f", "7a0bc368-d016-51c1-a93a-e5255b8818b6", "c68ab9a9-35ca-50e7-8d99-61aa90cc6170", "3c2570e7-dcf8-5ca5-a2e5-cab3f469a020", "eb70dff8-04e8-5a64-a14e-63186d060a0e", "70075879-a707-5623-93eb-21a98adec3ff", "b2f4b512-cb05-54e0-8cdc-5513f11da130", "ca9738d7-fa47-5310-94c9-9abdf85f4aec", "7cdfe34c-abaf-5aef-9de4-e655f148a573", "92c805bc-a7f5-5195-a86c-1bae32b5992c", "342a7542-8347-5f47-a2a1-3210f50a807f", "7c0656aa-e5d5-5531-a479-c2da27eda948", "6344ef26-f49a-5fe7-adf8-f78f0291da78", "9d8c6279-b9ad-5934-8270-e45b1a2514a7", "bb1ba1ea-fdb3-5210-a1f0-c5dde357c6c5", "59c37463-7e8e-5dac-b39d-25c12a73e452", "4336655c-bf54-5815-8b4c-c7257f8ee373", "161d1563-a683-5027-9a7b-226dd83bacc9", "a9ead4c5-5697-5920-8415-47091cdf9b62", "be7a52a7-154c-5468-83e5-ce5d947f712d", "ee96d446-bfa0-5374-b74e-a26f96eab46d", "79fbee79-80ae-5908-8cda-70f9293e272f", "7e71ba28-f137-5fdd-80ab-d91a69dcd9ad", "10273c14-150a-59ac-86f3-2040fae23777", "1a5bd81d-12a7-5f67-b456-c557a1b6029b", "ce147da5-c01e-5a86-a357-f8d3ece4a123", "df892d55-bd89-528b-8528-ebb70103f590", "5465f272-2a25-544e-a43e-a137e0899216", "9603729f-86c8-5e52-a9c4-aea8bc2c705e", "4af31d2f-d9c0-55f4-9083-3945e69aede0", "7be993e6-155e-5555-998b-cedcee64ef71", "60e522b6-7f19-5e3f-8456-548142cd2603", "00a29941-a023-5474-a4bb-3c28f9699a6c", "bc7017a3-b713-5c27-9b55-944deacc859b", "11ca20bc-d09d-5da2-9f77-75560a67b0f2", "4ca56a88-18eb-5e1a-af3e-f09fb8a295b1", "a9aaf6b6-d248-5257-81b4-4261997b6957", "43d68c51-de66-5084-bb9b-beb70dd04227", "74124d14-3a82-5efd-8d25-925413486048", "65a5e017-1707-51de-9fa4-f01bd77a9e1c", "a6daf2c6-b2e0-56b6-942a-20ec613b3e8c", " don't make the same mistake I did. Do not buy this game.\"", "7d45dc21-cb6d-566e-829c-0b6a8f1fcb9d", "fe7d8b34-e569-5186-8dce-57c70a13d88c", "1", " the deadlier they become thanks to experience now. The much-famed and even moreso whined-about economy that made SupCom 1 and Forged Alliance so famous (or infamous", "6dbed12c-450d-541a-a190-c15f03c40aa6", "ddd95f84-96b2-5c7d-bb7c-53c36e6df414", "c636381d-0229-527d-99a8-bff81d749a13", "4d3e75a4-f345-5e58-bdec-b17eba6b54e8", "c434c843-886f-51ac-be66-1444953b1f34", "e98cc6f9-fb85-5bc5-8a5f-709d56e7a08a", "ab190533-6515-5e00-991f-36666c9cb8f4", "b69b8ac8-89ff-5e89-9697-52a682ad0e76", "b707b4b5-8acc-5c69-9279-f1029422274c", "ce132a16-19ad-5dc1-a222-9a18b7751770", "51346905-fab9-5ddd-bdc0-a3e78448129b", "6f4b378a-4b78-5beb-bcc2-2aea05ea730a", "15117320-4aa0-5f15-8d9f-44eb7891adfd", "7578b6e5-5098-5f49-b320-ee99268986f4", "e19bd9fd-6c3b-596b-9014-d6d8e6238e37", "31786614-0e1e-5a38-9e27-8f23084e6ee1", "3ae8c7e2-1f22-5cd8-9992-6d5f03e37b8b", "df9c8e11-c20e-5a8b-b090-975550d21a38", "9d91f740-ff30-5f49-a9e7-32cf33d739c5", "fed5a40d-6b6a-5212-aab1-7d644fd4c0d0", "017d9f32-3702-5eb4-b1fb-7426864383c7", "21945403-7c2d-5e53-bdec-30fc9caec384", "f9469cbd-8ad3-5f74-9b6d-3aefeaf073c7", "2c072257-f611-5e72-a1ab-5dc75ef88f59", "1fc8da0f-ab3c-5904-b6d7-e967083ec472", "3d6378f1-c8fb-53b7-9080-d2429741d858", "2d87329c-fbd9-571f-981d-46ff995fd728", "d9d6ab84-c03e-5838-a724-e49e367d0fdd", "03ef4326-bd0d-5d6d-8a82-673db2023dca", "1892e4f2-a10d-5cbe-ae9e-af24f821912b", "b773b1a6-5b9a-5f68-9670-3489f0334157", "d0cf2335-6dea-596b-8480-460279c701a9", "7597e0e9-5e76-5dde-8bf8-327904575e9f", "269f8e2e-b3e2-54a2-af5b-504e0de18999", "a2db9996-35e7-58d7-ada1-a48703f0843e", "c61a0a2e-6150-5816-827e-7d7fc7f7f94e", "2926a631-7fde-5f98-beff-434285a55c73", "c89c209b-87b7-51c6-b645-604bd2589c10", "fa3daaef-6785-5e0d-a7a0-53a2605e5a60", "6ac96e96-d51b-5c49-8a2a-f21a298a2960", "d433a372-ec33-57de-af65-ddd03d8458ed", "be19f9b0-7d18-50c2-8f4f-d22f83fd1081", "a56d9282-4860-5371-9f05-a9bd99c99914", "58a3cd56-3757-5683-bf5e-043f7dc92826", "a9fd61c1-57e1-5036-8cf4-01149ac3e34d", "c3f3597b-51a8-5aec-a613-90242e40e8d8", "cec310ca-6de1-5376-8bfb-8be08ffd1b87", "fe663898-37db-56ab-9d32-c3d52f93b4e5", "d95796b1-88cb-5c86-bc22-0bc9db290b2f", "4a2b7da3-cc8e-59cd-9dc0-ffa2af5d19c6", "0790d8e1-1514-528a-8f1e-1e5dc035db8b", "4984011a-1fca-57b5-89a6-e76c780daaf7", "7ca99b13-422b-5892-a441-b2dd7bf7a000", "f5f793cc-dd08-5247-9ace-2498e78f061d", "d8b5b07f-b13b-58cc-b896-615b9ad105d5", "de0956d4-0d06-55f1-afce-9551324185ce", "2dc7e561-ee75-5e53-ad76-2859903df7c3", "f255781b-e9a0-57c1-a451-7a35a3332573", "aaaaa9b0-6933-56cd-982c-9093972c44ea", "173c87ef-e2a6-5ad3-89a4-432c8c9b8d3b", "a5a4fa33-a821-53a1-82a9-e28573bb422f", "5cb903ed-3a8c-5949-adae-8c1573defb6d", "0458081f-b0d0-51c3-a5bf-819b1d1ea16b", "0370dddc-2aae-508a-b44d-122e6d641c33", "3b4eb371-c531-5ab8-ac2b-889dd0e24cfd", "11982b37-c606-5a12-a2fe-1999da7e9a6a", "049e260f-a2e3-5ee2-8422-c0b928f66317", "5542b8bf-ac17-55f6-937a-1d90f91b9677", "9bd8d11d-12c7-5078-8ffd-a76aad22839c", "deb423a5-9af3-5ba2-b788-afb7f1433960", "27f54783-5943-5768-8473-f46535b7d205", "984c0a44-286b-5f5c-a04b-21f0ec500bb6", "6ba4d664-9c8a-50a0-80af-696a0a693e1f", "1e939271-deb9-5fe8-a1c4-aa8dbdf78342", "23d9c3da-b664-52b4-bf69-0f8a7d077f90", "9bd2d34a-5e61-57c4-9d29-646e5cf6ba26", "b1f8541f-3d73-58d4-8fd2-91efc595fc96", "88ef6fb7-c95f-5675-9d98-c4a50cfd519a", "b337caff-962c-5242-b3d0-8abebb580064", "e04f8d1a-9267-530b-b5c0-10346dd373e0", "df5a7b8a-f709-59f5-b49d-dc724ec76b61", "859ac623-c5af-5604-91d5-8a99eb2504d5", "5f3917ab-9dd6-5929-9744-e3a2e874d7b4", "a99d570c-bdbd-5227-8609-ece8f499ebb5", "587a3ddd-1619-5729-88bf-61b91642d4c9", "33f65eb0-1f44-526d-9319-c906125ee5c6", "da0393de-bb8b-55f8-86de-58d92cfe4241", "2f7efb29-de97-5904-833a-c9a78dcb9212", "7615eeb0-1644-5875-856a-08aeefb4355c", "77d0486c-c3fa-55ce-a778-25a9ff85e1d6", "821dde30-9ad1-59e3-b367-e0a36dc2691b", "584ee887-b8e9-5831-b34c-9054af211b2e", "83fda476-c6ad-5de0-beb9-24a7cd48fdd2", "9a3be338-8648-50e4-a0f5-805fd576c024", "b79f70f4-fd02-53b5-8027-838f4073ed73", "123e30f0-b2b1-5458-8d8a-faee417f379a", "27ea1f05-cdda-5466-ba89-1578af352018", "71a0a99a-e767-5285-ad31-aabfed1b91d7", "05ca2650-238f-588e-a873-7007194759d7", "dbb361d8-d468-5822-a0a8-10bbb1e5c348", "bb53d5c0-348a-5800-87a7-d4eb984ca544", "89c9e45b-2b49-5be2-9e62-52634bc7fad7", "11338a10-215e-5f67-a575-5237fef59b16", "ece4609f-bd97-5a47-82b3-c1f5352598f3", "f3a80eb1-718b-5c8d-b318-b18bc83fb20e", "a77123ba-ba04-5c96-9775-f7933c733a37", "227010137", "93e6fc6f-7bf6-5a2e-b4a0-834fc2475980", "7b9af1f2-7b3d-5164-80f0-800133b61ce4", "f864ba04-27e1-5673-875f-6fd69443fb3e", "922e0d7d-c3f4-5b50-a543-e756033d3a1c", "4773a39c-0194-5088-af97-1597830af3cb", "23759918-be89-5c65-9bf4-80ffb801cdff", "378bfa7c-9e8d-5d24-9947-c0515f458a2c", "bc495ea9-fc64-52df-a68f-c177f7c045d4", "9d54e2ee-64d7-501b-adbe-31c0969dbe17", "1babf017-7fdf-5c87-8652-1407fa60eb90", "d7029cd7-b7f2-5db5-8963-596a04b78acd", "e1f7d79c-f4a9-505d-9273-c1de69d35bda", "8e92998d-0da9-5f08-b431-fcde798123c9", "7f06208f-0a2b-54ba-94ea-112a39a0c52e", "a4ae2322-89b3-504a-b7e0-9fa33a9ca17e", "138dec55-89dd-5a19-b289-861f05404137", "1df8ba9d-c4b7-5f94-ac1b-796c510d5a5e", "46be1ec8-0af4-56f1-89c5-a57e8a345971", "1704cd22-d544-5d71-9815-f5eb2372a044", "bd6cd803-2b83-5424-9c1e-5d536f889b79", "a8cb85ec-1fb1-592d-86dd-ad1977d95f62", "126319104", "aac40f5b-5309-54ee-b48f-8cef2b574aa1", "48d6e2a3-a18e-56d1-a6c2-3f3d10c0238f", "9b0e9798-1104-51bb-bb02-c4791677f066", "ab53e60a-a8f5-514d-b991-35bb8c11d5b5", "07271c3d-9b17-5d98-8c25-bdd77055b420", "213d7265-2a67-5a82-8be4-aedcc9d26874", "6a01d10d-880f-5927-a855-9877f163f764", "ccbc3319-a7f8-55cd-99c4-8df80b9f986e", "653adbc8-2641-556e-95bb-4e98b787d90b", "090663b7-8c74-501b-8c5c-ad3a2534b71f", "8a8d8b55-7214-5e92-b9ed-733d6bf7071a", "8625e7a7-4e27-5d30-a05b-fe5bf7c2cadd", "9bf14046-e0c5-500a-9dcf-e9c0e6afb859", "814c2ff9-f939-5b24-8c3e-41e751846aa3", "89ff972f-705a-50a7-8f9d-f001de728a39", "a881b3e6-56f2-5ed3-99fb-dc2394c9a4eb", "6ffa7acb-1ab2-53b2-b96c-7d8ffc9cad47", "11608ce6-435a-5fa7-8361-78c102e07aa6", "330fc9b1-4297-500d-b450-59e0c113c0c8", "29596331-f93b-5f15-b930-ea33a3c3da35", "e77e4e5f-c996-51ef-bb79-6354405c211b", "f2fad2ce-ed9a-598f-9e5a-a3ad7ea6a717", "6b553447-1f16-512b-b18d-81f6ffac6d98", "0cf0d647-5307-585d-8435-a37e7f419aa3", "4fd68a13-9df5-5e86-b0a8-836bae43d243", "36b7fb9b-c0eb-5073-b128-5bd4c7d72748", "3f2027c9-d810-5e8b-b6ea-5a2af73af35f", "dc10d9ff-527d-5235-8da4-213d2422ccc5", "fd6bea00-05a9-5cd4-98f9-5f0d4ed43eb0", "29337594-2061-52d7-9c1a-b31c9022a6b3", "c0601d16-e5fe-5975-a114-e857b25aef61", "c2e549f2-3344-5ca7-9e6a-2b4bd5a25504", "ea57e9d3-97b4-56a0-b046-1b7024e7f67a", "7c5e8e10-dca1-528f-875b-96f7b995033a", "60bdb40e-e15c-5bfa-967b-9aa559482629", "23656563-b23a-5a13-b5c5-5ab4eaabf6e9", "74c08633-86e1-5e62-a815-f443ab052ecd", "3ff9d937-f377-5e4e-b3a8-ba7eb733ad07", "2620434c-3ae6-501e-ae0e-15e040f9a198", "2cd61b63-9d87-5b31-a9f0-29eb39dc6df2", "3dab1ab5-cb69-58f7-819d-dff2b315d6af", "8592ca19-f069-5470-92be-ef5503f7df48", "3add2868-0cfc-5f48-8791-d926b2dbded2", "ad9b54e3-4762-590b-a852-63af3528cbbd", "385e416e-b857-55ee-ac2a-0576072e6373", "e052cd77-4a49-532c-879f-d46458da984a", "afd78dcb-1b2b-5967-bdaf-e82cc7a64652", "db126a54-89c7-5ad8-ba95-641b8c223538", "19ee363b-60a8-5ded-96af-6f28febe3495", "2d355f38-1266-5775-9058-b21faddb6072", "bef4412d-50fc-579b-a749-e67a52661770", "7b82a6a3-87e7-5cfe-876f-56a53ab2eecd", "fd975a90-b8e3-5159-8130-c50c5ac945eb", "bd4d2b81-94df-5627-889b-21872c0e777d", "ef5055a5-a02c-5472-87a9-158244c487f6", "86d8bb86-c5df-535b-9e95-d709cf4b5922", "17905c2b-6d32-56c8-b6eb-5d4ab9f2f219", "19a05085-2d6f-5a53-9fe9-8dc9942c7879", "e5c8c18d-9848-59fe-9d4a-12c604a675b0", "e6a73770-f7cd-564e-bf77-367069bbcb04", "fee58b67-3483-5b70-bcb6-74e5f0e93fdb", "f882a003-351a-5ef7-b7b7-757d81ef4495", "d736627e-a587-5ffc-b505-49e31c8867f4", "995d0ca0-de0d-58fa-90d5-7d9799b0e36d", "29f3ac3e-d2fb-5187-a780-1670136e97a0", "206cfb0b-c2bd-5c16-8699-f8f01d670f44", "268a103b-4fb8-5479-8872-9cb3d3383705", "8cceda67-4c9c-5187-8a0e-fae36799ed85", "bef97385-8ff8-50e6-940f-f0f05b81a9c4", "53298df5-7dec-51dc-b18f-29b2a7165011", "47719f17-1a09-557b-a952-c2ed310910b1", "a0548af2-8959-52a2-ab05-c73a838d9145"], "data": [1, 1, 1, 106, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "uniq_id", "count": 395, "min": " don't make the same mistake I did. Do not buy this game.\"", "max": "ff3fad3f-62ee-54c5-bab0-6009af0cf671"}, {"values": {"label": ["16/01/2022 16:17:56", "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "16/01/2022 16:17:57", "16/01/2022 16:17:58", "16/01/2022 16:17:59", " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "16/01/2022 16:18:00", "No: I don\u2019t recommend this product", "3.4091", " lol) has been DRASTICALLY simplified", "16/01/2022 16:18:01", "16/01/2022 16:18:02", "16/01/2022 16:18:03", "16/01/2022 16:18:04", "2bb7b6b6-1b88-5903-a898-0a754ac687d8", "16/01/2022 16:18:05", "16/01/2022 16:18:06"], "data": [13, 106, 52, 45, 47, 1, 55, 1, 1, 1, 32, 29, 27, 43, 1, 45, 1]}, "label": "scraped_at", "count": 17, "min": " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "max": "b5141b5e-d8d2-578f-a02e-1e47f25018ab"}, {"values": {"label": ["0.0 - 49.8", "49.8 - 99.6", "99.6 - 149.4", "149.4 - 199.2", "199.2 - 249.0", "249.0 - 298.8", "298.8 - 348.6", "348.6 - 398.4", "398.4 - 448.2", "448.2 - 498.0"], "data": [51, 50, 50, 50, 49, 50, 50, 50, 50, 50]}, "label": "index_stringindexer_transform", "count": 10, "min": 0.0, "max": 498.0}, {"values": {"label": ["0.0 - 3.7", "3.7 - 7.4", "7.4 - 11.1", "11.1 - 14.8", "14.8 - 18.5", "18.5 - 22.2", "22.2 - 25.9", "25.9 - 29.6", "29.6 - 33.3", "33.3 - 37.0"], "data": [407, 62, 5, 3, 4, 4, 3, 4, 4, 4]}, "label": "name_stringindexer_transform", "count": 10, "min": 0.0, "max": 37.0}, {"values": {"label": ["0.0 - 2.1", "2.1 - 4.2", "4.2 - 6.3", "6.3 - 8.4", "8.4 - 10.5", "10.5 - 12.6", "12.6 - 14.7", "14.7 - 16.8", "16.8 - 18.9", "18.9 - 21.0"], "data": [362, 78, 33, 13, 3, 2, 2, 2, 2, 3]}, "label": "brand_stringindexer_transform", "count": 10, "min": 0.0, "max": 21.0}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [280, 132, 22, 38, 11, 10, 2, 1, 2, 2]}, "label": "sku_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}, {"values": {"label": ["0.0 - 41.5", "41.5 - 83.0", "83.0 - 124.5", "124.5 - 166.0", "166.0 - 207.5", "207.5 - 249.0", "249.0 - 290.5", "290.5 - 332.0", "332.0 - 373.5", "373.5 - 415.0"], "data": [126, 41, 42, 41, 42, 41, 42, 41, 42, 42]}, "label": "reviewer_name_stringindexer_transform", "count": 10, "min": 0.0, "max": 415.0}, {"values": {"label": ["0.0 - 39.2", "39.2 - 78.4", "78.4 - 117.6", "117.6 - 156.8", "156.8 - 196.0", "196.0 - 235.2", "235.2 - 274.4", "274.4 - 313.6", "313.6 - 352.8", "352.8 - 392.0"], "data": [147, 39, 39, 39, 39, 40, 39, 39, 39, 40]}, "label": "review_title_stringindexer_transform", "count": 10, "min": 0.0, "max": 392.0}, {"values": {"label": ["0.0 - 43.4", "43.4 - 86.8", "86.8 - 130.2", "130.2 - 173.6", "173.6 - 217.0", "217.0 - 260.4", "260.4 - 303.8", "303.8 - 347.2", "347.2 - 390.6", "390.6 - 434.0"], "data": [109, 43, 44, 43, 43, 44, 43, 44, 43, 44]}, "label": "review_description_stringindexer_transform", "count": 10, "min": 0.0, "max": 434.0}, {"values": {"label": ["0.0 - 1.9", "1.9 - 3.8", "3.8 - 5.7", "5.7 - 7.6", "7.6 - 9.5", "9.5 - 11.4", "11.4 - 13.3", "13.3 - 15.2", "15.2 - 17.1", "17.1 - 19.0"], "data": [464, 15, 7, 2, 2, 2, 2, 2, 2, 2]}, "label": "recommended_review_stringindexer_transform", "count": 10, "min": 0.0, "max": 19.0}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [466, 15, 6, 3, 1, 2, 2, 1, 2, 2]}, "label": "verifed_purchaser_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}, {"values": {"label": ["0.0 - 3.5", "3.5 - 7.0", "7.0 - 10.5", "10.5 - 14.0", "14.0 - 17.5", "17.5 - 21.0", "21.0 - 24.5", "24.5 - 28.0", "28.0 - 31.5", "31.5 - 35.0"], "data": [453, 15, 7, 3, 4, 3, 4, 3, 4, 4]}, "label": "helpful_count_stringindexer_transform", "count": 10, "min": 0.0, "max": 35.0}, {"values": {"label": ["0.0 - 4.6", "4.6 - 9.2", "9.2 - 13.8", "13.8 - 18.4", "18.4 - 23.0", "23.0 - 27.6", "27.6 - 32.2", "32.2 - 36.8", "36.8 - 41.4", "41.4 - 46.0"], "data": [448, 14, 5, 5, 4, 5, 5, 4, 5, 5]}, "label": "not_helpful_count_stringindexer_transform", "count": 10, "min": 0.0, "max": 46.0}, {"values": {"label": ["0.0 - 4.5", "4.5 - 9.0", "9.0 - 13.5", "13.5 - 18.0", "18.0 - 22.5", "22.5 - 27.0", "27.0 - 31.5", "31.5 - 36.0", "36.0 - 40.5", "40.5 - 45.0"], "data": [385, 58, 15, 8, 10, 5, 5, 4, 5, 5]}, "label": "reviewed_at_stringindexer_transform", "count": 10, "min": 0.0, "max": 45.0}, {"values": {"label": ["0.0 - 1.8", "1.8 - 3.6", "3.6 - 5.4", "5.4 - 7.2", "7.2 - 9.0", "9.0 - 10.8", "10.8 - 12.6", "12.6 - 14.4", "14.4 - 16.2", "16.2 - 18.0"], "data": [380, 81, 23, 4, 2, 2, 2, 2, 2, 2]}, "label": "rating_stringindexer_transform", "count": 10, "min": 0.0, "max": 18.0}, {"values": {"label": ["0.0 - 1.5", "1.5 - 3.0", "3.0 - 4.5", "4.5 - 6.0", "6.0 - 7.5", "7.5 - 9.0", "9.0 - 10.5", "10.5 - 12.0", "12.0 - 13.5", "13.5 - 15.0"], "data": [253, 103, 100, 18, 18, 1, 2, 1, 2, 2]}, "label": "average_rating_stringindexer_transform", "count": 10, "min": 0.0, "max": 15.0}, {"values": {"label": ["0.0 - 1.2", "1.2 - 2.4", "2.4 - 3.6", "3.6 - 4.8", "4.8 - 6.0", "6.0 - 7.2", "7.2 - 8.4", "8.4 - 9.6", "9.6 - 10.8", "10.8 - 12.0"], "data": [253, 105, 81, 30, 18, 8, 1, 1, 1, 2]}, "label": "reviews_count_stringindexer_transform", "count": 10, "min": 0.0, "max": 12.0}, {"values": {"label": ["0.0 - 39.4", "39.4 - 78.8", "78.8 - 118.2", "118.2 - 157.6", "157.6 - 197.0", "197.0 - 236.4", "236.4 - 275.8", "275.8 - 315.2", "315.2 - 354.6", "354.6 - 394.0"], "data": [145, 39, 40, 39, 39, 40, 39, 40, 39, 40]}, "label": "comment_id_stringindexer_transform", "count": 10, "min": 0.0, "max": 394.0}, {"values": {"label": ["0.0 - 39.4", "39.4 - 78.8", "78.8 - 118.2", "118.2 - 157.6", "157.6 - 197.0", "197.0 - 236.4", "236.4 - 275.8", "275.8 - 315.2", "315.2 - 354.6", "354.6 - 394.0"], "data": [145, 39, 40, 39, 39, 40, 39, 40, 39, 40]}, "label": "uniq_id_stringindexer_transform", "count": 10, "min": 0.0, "max": 394.0}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [161, 99, 45, 88, 32, 56, 14, 1, 2, 2]}, "label": "scraped_at_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}], "stageId": "678d37425351fccd0b114dbc", "FESamplePath": "/FileStore/platform/sampleData/678d37425351fccd0b114dbc_AutoFE/part-00000-1dfc3a6d-a767-451d-87bf-41339aa34ec3-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/678d37425351fccd0b114dbc_AutoFE/part-00000-1dfc3a6d-a767-451d-87bf-41339aa34ec3-c000.csv", "originalcount": 5321, "graphdata": {"index": {"label": ["0", "1", "2", "3", "FYI...the 65\u201d HD television I had to replace was a Samsung that was about 4 or 5 years old that stopped working after some loud cracking and popping noises that sounded like the transformer on an overhead power line blowing out. However", "4", "5", "6", "7", "8", "I am so happy to have this wonderful big one for my first OLED TV", "9", "10", "11", "12", "13", "14", "15", "16", "17", "This thing is only $20 more than the ES2", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "The \u201ccrafted world\u201d is exceptionally detailed", "The gameplay is tight", "Most importantly", "28", "29", "30", "31", "32", "He agreed this morning while watching NASCAR that I was right. Yeah for me.\"", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "Wonderful OLED TV\"", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "More color Yoshi\u2019s to choose from and a forward and backwards game in every course. It\u2019s a lovable game to play!\"", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "Pros:", "1. The picture is absolutely gorgeous and you can tune it further to your choice.", "2. The Smartcast interface is decent.", "3. The remote is also not bad at all.", "4. Very quick to connect apple play. ", "5. There are ample connection options for my bedroom", "Cons:", "1. Cast is buggy. I can never get it to run first time. This is where I would focus most of the development time if I were Vizio.", "2. Smart Cast does not have a browser app that is accessible easily.", "3. There is no easy way to add more apps that are not already in the Vizio library.", "4. The detail picture quality will not go up to the level you get out of a top line OLED. ", "5. The bezel is still not near zero bezel size. It is sizable to be noticeable.", "Overall", "95", "The Good: Smart casting features. ", "The Bad: Pre-calibrations could improve", "THE UGLY: Very Very buggy software. Doesn't start a lot of times and have to re-plug many times. Brings me Anxiety.\"", "96", "A few quirks with the PS5 too. Sometimes when I power on the TV it also turns on the PS5. Sometimes when I power on the PS5 the TV turns on too. Neither seems to be consistent. ", "Needs and HBO Max app. Also needs to be able to disable inputs from the list like in previous Vizio models. ", "All minor issues and possibly handled via software or firmware updates. The hardware is solid though.\"", "97", "98", "99", "100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "120", "121", "122", "123", "124", "125", "126", "127", "128", "129", "130", "131", "132", "133", "134", "Make", "Stuff in your house.\"", "135", "136", "137", "138", "139", "140", "The important thing you might not first look for in a TV is how black the blacks are", "The only issue I have is the speakers leave a bit to be desired. They\u2019re ok", "141", "142", "143", "144", "145", "146", "147", "148", "149", "150", "151", "152", "153", "154", "155", "156", "157", "158", "159", "160", "161", "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "The picture is beyond amazing!! OS is smooth and video games look so darn good! Im buying the 65\"\" for the front room next week!\"", "172", "I\u2019d love to be able to recommend merely because of the picture and viewing angles alone", "173", "174", "175", "176", "177", "178", "I am so glad I gave it a chance!\"", "179", "180", "181", "182", "183", "184", "185", "186", "187", "188", "189", "190", "191", "Going back and forth between each level", "in between each secret is so satisfying.\"", "192", "193", "194", "195", "196", "197", "198", "199", "200", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "212", "213", "214", "215", "216", "217", "218", "219", "220", "221", "222", "223", "224", "225", "226", "227", "228", "229", "230", "231", "232", "233", "234", "235", "236", "237", "238", "239", "240", "241", "242", "243", "244", "245", "246", "247", "248", "249", "250", "251", "252", "253", "254", "255", "256", "257", "258", "259", "260", "261", "262", "263", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "It's great...color", "275", "276", "277", "278", "279", "With its easy to mount", "Out of the box it had a firmware update. and then a week later another.  the 2nd was a bit rude", "I am using the amazing OLED with a brand new 4k reciever with eARC.  So everying goes through the Amplifiter through a high end HDMI ARC certified cable to the TV's HDMI 1 (eArc).  Most days its running fantastic and smooth as expected.  Although", "280", "281", "282", "283", "284", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "1) airplay doesnt work 90% of the times unless i go into admin & privacy and reboot the TV.", "2) even after reboot it doesnt work 50% of the times", "3) same issue with chrome cast as well", "4) TV screen turns off while mirroring screen via my Ipad every 10-15 minutes.", "5) while connected to HDMI port when im in zoom meeting using TV as external monitor", "6) Home button doesnt work 50% of the times", "298", "299", "300", "301", "302", "303", "304", "305", "306", "307", "308", "309", "310", "Love how everything looks like crafts. ", "As a Yoshi/Poochy fan I enjoy the Yoshi games.\"", "311", "312", "313", "314", "315", "316", "317", "318", "319", "320", "321", "322", "323", "324", "HOWEVER", "This is still a really good TV. But the growing pains right now would keep me from recommending it to others. (I'm coming from a 2018 Vizio P series)\"", "325", "326", "327", "328", "329", "330", "331", "332", "333", "334", "335", "336", "337", "338", "339", "340", "341", "342", "343", "344", "345", "346", "347", "348", "349", "350", "351", "352", "My only critique is that I wish it performed @ a 1440p resolution. Everything else is great!\"", "353", "354", "355", "356", "357", "358", "359", "360", "361", "362", "I like that this is wireless with sensors ", "This controller has Bluetooth", "The motion controls are awesome", "This has a design that feels good in the hands", "My nephews prefer this over the other wireless controller we have", "363", "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "*the added mappable buttons could come in handy even though I haven't used those yet.", "*the cost is much less than the Nintendo pro controller. ", "The cons:", "*slightly unconventional setup. ", "It's not a problem though if you read the instructions. ", "*its lighter in weight which makes me wonder about durability. ", "Makes a perfect 2nd controller for kids.\"", "364", "365", "366", "367", "368", "369", "370", "371", "372", "373", "374", "Great sequel to Wooly World\"", "375", "376", "The addition of being allowed to manually aim your eggs removes some of the frustration that earlier titles had and there are collectible items in abundance for completionists. That all said", "The biggest hiccup in the game I think is the mini quests you get. Each level has multiple different set pieces that a robot will want you to collect. The issue is you can only do one at a time so the game asks you to play through one level at least 6 or 7 times and it can get rather tedious at times. My suggestion is that if you are collecting everything", "In the end the game is a relaxing adventure through a handcrafted (Almost literally) world that never fails to charm. Perfect for players of all ages", "377", "378", "It's a great game for kids and adults!\"", "379", "380", "381", "382", "The one thing that would truly be the cherry on top", "383", "384", "385", "386", "387", "388", "389", "390", "391", "392", "393", "394", "395", "396", "397", "398", "399", "400", "401", "402", "403", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417", "418", "419", "420", "Thx", "Xbox Series x\"", "421", "422", "423", "He absolutely loves it. It linked up easily and is user friendly. ", "He loves the two on the fly buttons he can map to Make his play more custom. "], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "name": {"label": ["VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", " my 42\u201d VIZIO that I bought in \u201808 doesn\u2019t even have a single bad pixel. Food for thought.\"", " of which screen is fantastic and very light compared to my previous one indeed.\"", "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", " and you know they could\u2019ve easier made it $100 more and still sold out. Amazing.\"", "Yoshi's Crafted World - Nintendo Switch", " with cardboard cutouts", " with seamless reaction times and plenty of opportunities to save yourself from mistakes.  Easy enough for kids to pick up", " this game is fun!\"", "yes: I recommend this product", "No: I don\u2019t recommend this product", " for the price it is a good deal.\"", "Supreme Commander 2", " followed by how light the screen can be without a terrible contrast. This TV fit the bill for both. Also", " but if you want a theater experience", " truth is because of the issues at present with the firmware", " finding every nook and cranny ", " sound and price. We have had Visos in the past and have been very pleased.\"", " easy setup", " as it occurred in the middle of a show without warning.", " the TV has 2 behaviors that need adjusting", "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", " i will have to reboot more than once", " it throws message no signal detected and turns off TV after few minutes", " unless TV is rebooted\"", " there are a few headaches that is keeping me from recommending it", "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", " so I'm not tied down with a cord.  ", " mappable buttons", " this is a smart product!", " it is not bulky or hard to work.  ", " and they kind of fight over it.  They really like the retro Mario on the controller", "WRC 8 FIA World Rally Championship - PlayStation 4", " the game is not meant for those looking for a challenge. I don't need dark souls levels of difficulty", " don't try to get it all at once because I assure you you will be back through that level multiple times.", " but if you're looking for a challenge I would look elsewhere.\"", " would be to have a microphone on the remote control to search for a program like the roku\u2019s do. ", " it is a good sized tv with an amazing picture. Well worth it.\""], "data": [140, 1, 1, 82, 1, 140, 1, 1, 1, 45, 2, 1, 22, 1, 1, 1, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 22, 1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 1]}, "brand": {"label": ["VIZIO", "yes: I recommend this product", "Microsoft", "Nintendo", " Pinterest worth constructions", " but easily enjoyed by gamers of all ages", "No: I don\u2019t recommend this product", "Verified Purchaser", "Square Enix", " this TV is fully ready for the Max features of the Series X and PS5.", " buy a sound bar or speakers.\"", " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", " the show just begins with its amazing ink black levels", " not sure if its me or a firmware update.  They are: the screen goes blank when new input isnt supplied", "Little Orbit", " while im still in between the meeting.", " the first is the HDMI 2.1 port. The OLED h-1 has 4 HDMI ports", "PowerA", " fully programmable", " and make fun of me because it was brand new \"\"in my day\"\".  This is fun", "Maximum Games", " but at least some sort of resistance would have been nice. Levels can basically be run through rather blind if you're not hunting for every red coin or flower. Even the challenge levels at the end of the game don't really have much bite to them."], "data": [140, 56, 82, 140, 1, 1, 2, 6, 22, 1, 1, 1, 1, 1, 11, 1, 1, 22, 1, 1, 7, 1]}, "sku": {"label": ["328244", "yes: I recommend this product", "307392", "Verified Purchaser", "191609", " and vibrant colors that pop on everything from the tiny Switch screen to a 70\u201d flatscreen TV.", "0", "522023", "No: I don\u2019t recommend this product", " beautiful imagery from its 1080P to its upscaling to 4k", " ie your movie is paused. And you need to press the OK on the remote to wake it up.  Having your show resume", "119061", " #1 is eARC (awesome)", "231963", " and more.  ", " so I'd definitely recommend this product.\"", "205005"], "data": [140, 50, 82, 3, 140, 1, 16, 22, 1, 1, 1, 11, 1, 22, 1, 1, 7]}, "reviewer_name": {"label": ["Leeford", "DJM7", "EC82", "Weeto", "0", "LexusSC400", "Ninjaafro", "von R", "Ohio Erik", "jonck", "Bob279", "NuggetsOne", "AJ V", "Always a fool", "RootM0d", "Ozlas", "Odium Prius", "Ryan CIN3MATIX", "Punkwaste", "CosmicOwl", "Skyturtle97", "Pitbull91101", "Mykd", "Chigg", "Prieto56", "Iz B", "Angel Marred", "Derrick Evans", "Jeremy Green", "zachR", "1", "Carl78", "Alejandro Rivera", "Pixle101", "Sillypajamas", "John4", "Mike1921", "Bmitch20", "karena", "Babes70", "Koky87", "Dcm388", "SunnyS", "Spenceleoz", "Rich190", "DrKillem", "Areria", "eyesayahh", "Animehipster", "Moi93", "Geo R", "JohnHalo117", "GrabAzzery", "Chaz54", "Jukeman79", "dfint", "SamuraiMatt", "DKCBatch", "VileMKII", "LRoberto", "Philliptate7", "Toxicbug", "Bardot", "tackomoto", "Bob81", "Porkchop76", "Bino7899", "Doblado98", "Super Awesome!", "jpc3", "Terry T.", "Canothegreat", "shane19", "R Robles", "IanMan141", "Anonymous", "Gaming reviews6", "twojoesf", "Marco AP", "I own this", "Fa crediblenick", "516", "M4lmx81", "NicoleD90", "MDB3", "Bigbadbarry", "Scott79rod", "BubbaHero4All", "Diana finley", "HeliosExe", "platygirl", "2-Apr", "Candice S", "Woodbine23", "Maximus", "Pat23", "woodbine23", "Rajib", "KristovM", "goobs150", "sftaylor614", "Johnboi781", "Harbinger86", "King TJ 09", "Biobroly24", "Killerxxx08", "Parker86", "PUGLOVERRG", "Kamna", "Natees", "Nate Corneliusen", "Racheljay11", "D3vonator", "Vegas momma", "Henrio", "Jeefly", "BoJackson87", "tankgod1", "16nflp", "Joey3245", "chiknwingding", "GeneralM99", "fiddlegammer11", "Commando38", "CoD4 Veteran 13", "TheGamerGalore", "agent00aa", "jonso", "KingEdd", "Ems C", "Leon81", "Kids love i", "Marshmilo", "makeshift SP", "Marc reed", "Kwoodky", "Marieleisele", "Jb2827", "TCTV", "Mofa", "Cat711", "FXDLS110", "GASMAN", "ectaylo", "Melony", "Slair", "ll1cool1", "DK4345", "Hothroy", "Zanderspike", "N Zero", "daSurge", "James0023", "Adyn Evans", "glumee", "Azucarmamacita", "dahc", "killer_kenne", "JustWill1982", "Theraven16", "Penutt2", "TheMonty", "Drdrums", "Midwestmikey", "Chrissy in ny", "Vman", "T. Lawson", "deshon", "MPock", "DaBurghLover", "Buck Bull Stallion", "MrGregory2000", "cliff90", "Barry1226", "Timbo88", "Assassionator", "Brannon M", "Johnson1720", "Disappointeddd", "JLAxxSPARTAN", "Henroc", "Seena", "RandiBeth", "Elope90", "Cfm1985", "BubonicChronic", "Buttztallion", "Digmyearth", "JackB72", "RobertKW", "Angelrose2", "Noz 37", "AikenAidan", "Kyoungblood", "SumoSpike", "Deathsprophet", "Bumzab", "nonxaznxboi", "Kerican", "Cycephenom", "DemonWolfC6", "Gamerguy", "Mkaz", "MRDSIGN", "Rcmm", "Angela W", "Shaun7979", "Blurr60", "Twan", "Res136", "Jcompu466", "Astraeus", "dRn00bies", "Nicole F", "David Armando", "spartan19", "BxBNicX", "The name John was taken", "Jrjbaj", "PetLover62", "Gamer Man77", "Patrick Giles", "Blackfeather666", "Dadadum", "Mr Dingus", "DarkEmpressAly", "mariofamily", "DaddyRay78", "Amanda Cooper", "JA II", "MM213", "Androl123", "RayMel5", "VALumiere", "Mikeiceman", "PM117ER", "Patrick w7", "JakeO62", "Rambo34", "jws1025", "Mattoxbox", "Ellie RA", "mdfsandman", "thearchie32", "boilerone", "Quando", "None, none", "Jos\u00e9viera264", "The truth", "A-bomb", "John26", "dmartinez097", "JPez1", "Luccon7", "xTheSandman72", "Doomcrew", "Da1trueS4nch3Z", "NexusWolf", "The1stAv3ng3r", "JCMB", "cheeseman585", "Sixkids", "Jerk unit", "TheArgyleWizard", "CampM", "Carebear43055", "CWB!", "RickZ", "The Doctor", " to its true 4K Glory. ", " doesnt do it.  and the 2nd is that a few times now", "TOGA Sarge", "JMCH", "Margot", "Skeet96", "MikeOxlong69", "TimB76", "LivinLow", "Neco46", "Cbj4892", "Shaqcool", "Unlockable51", "AceZero17X", "DumbMarsupial", "mn1meii", "Greg11", "Drew6977", "Shafi", "RedRaider", "cccmak126", "RomS", "Fivonefivo", "Imagine1959", "TomDawg1", "KarateBear", "ChristyJay", "AnnB", "Sleepy Ninja", "SD Dad", "Nyxian", "Izzy28", "lenosaurio", "Kelchyd", "Mipsie", "Heather0101", "Hutchworld", "Stude", "Ybreeze5", "Kenny H", "StevieC", "Jethro2312", "ACyberPoet", "Jojo2414", "Chasd", "McFang", " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "phyra", "Anthony87", "Richard947", "Jon bc", "Justmeow0417", "halfjew22", "Eglandon", "Kittencakes", "FireWife", "Brennan91", "Josr85", "Yoshi Fan1", "ShadowKnight92", "R00T666", "Mr Eric", "Dadgames", "Weasel771q", "Anthony Nussbaum", "kschneider1231", "Rwarmander", "Randy cox", "IrishRunner", "Ray T", "SDotRinney", "Prakers", "PaulS", "Whydoihavetohaveanickname", "Britan91", "Ezirkle", "Carlos G.", "Radwithab", "Meadow", "Jess2274", "MandM", "Cheeks784", "cwinniebear24", "Mommyof2boyz", "DiamondAries999", "yes: I recommend this product", "RachelA1020", "Court the Sport", "NSU_Ant", "IAMTHEWHEELMAN", "Alllly", "The monumental", "Sarge97502", "Holden Macaque", "Christow", "ghostdph", "carauza", "Charlie from VA", "emperordesslok", "Jack Badgerlord Fox", "SusieK", "Mebunny", "Drumfreak117", "TitusJ99", "MotherMayI", "LaBestia", "Lauri49", "jmrichard427", "Tom42", "Cowboy101084", "Mugen", "Suzey", "Concerned vizio tv owner.", "mh061", "Golam41", "KLP26", "Mdcsooc7", "Joedtip", "Cvoshell4", "Missy23", "Kiki2014", "Mama", "M3WILKERSON", "Beau C", "Lisalou5150", "Videogamegente", "JJ77GB", "JDHarsh", "Greenender23", "Arjei Lynne", "Abish", "Simi90", "Davebasura", "JCMA", "Pappabear03187", "Liberty25", "Ghost Dylan", "Jasper L.", "VinnyD", "adrianiii", "Bgerald", "JON205", "Joey D215", "TomsVizio", "Ricw", "JustJess76", "Pvtcarlswife"], "data": [1, 1, 1, 1, 23, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 14, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "review_title": {"label": ["look out gamerz, here comez awsome", "Great looking screen!", "Quality", "Unbelievable picture quality!", "0", "Vizio OLED", "Bugs", "Glass like screen", "Amazing 4k picture", "Great features", "Great picture and a good price", "Awesomeness!", "Fantastic product", "Not all as it seems", "Beautiful design - Awesome feel - Must get one!", "Simply amazing", "Limited Edition Halo Controller", "Beautiful Elite Series 2", "Firing on all cylinders.", "Rad sauce", "Excellent purchase.", "Yoshi switch game", "Awesome game if you like the Mario brothers games.", "Awsome game...", "Awesome Game for Children!", "Poochy", "Not bad", "Opinion on Yoshi Crafted World", "Another Win-tendo Jewel!!", "Good game", "Best Nintendo game I ever played!", "Brilliant picture", "Absolutely amazing picture quality", "This tv is vibrant", "10 months ago", "Great picture, confusing to turn on", "Nice tv", "Gorgeous picture!", "Love this TV!!", "Great tv for value", "Best tv for the price", "TV is awesome!!", "Xbox Elite Controller 2 - Halo Edition", "Premium Halo Xbox Elite Controller", "Amazing!", "Great controller but late shipping", "Best Controller", "Great controller", "Halo Elite Series 2 Controller", "Buy one if you can find it!", "Halo Infinite Controller:)", "A High Quality Masterpiece", "Yoshi party", "BUY IT", "Tank Yoshi and the layered egg aiming", "Yoshi's Crafted World", "Good", "Super awesome", "1 or 2 player fun!", "Game play", "Love It", "Fun repeat play factor", "Outstanding!", "Deep blacks", "Great TV for the price", "Amazing tv", "11 months ago", "Great features!", "Great price, Vizio is a reliable brand", "Good TV for the Price but has some issues", "Beautiful oled screen", "Looks great!", "Best Controller!", "Elite  Series 2 Halo Wireless Controller", "Amazing", "Great looking controller!", "Buttons don\u2019t register", "Excellent controller", "Awesome controller", "Solid controller", "This is awesome design", "Awesome!", "Family time", "Yoshi Fun!", "2 years ago", "Awesome", "Great game!", "Yoshi's crafted world", "gud", "Yoshi's Crafted World... Buy it TODAY", "Classic", "Yoshi's crafted world is fun", "Excellent product", "Awesome Features!", "Buggy like no tomorrow", "Almost but not quite", "Great Clarity, Very Very buggy software.", "Gorgeous screen with a few quirks", "Vizio OLED TV", "Love / Hate Relationship", "Excellent tv great picture", "Love it", "Incredible controller!", "Halo Infinite Elite Series 2 Controller", "Halo lovers & competitive players dream", "Xbox elite series 2", "Microsoft Elite 2 Pro Controller Halo Edition", "Beautiful controller", "Worth every penny.", "It's alright", "Easy to pick up, hard to master", "Fun new twist on a Yoshi", "It\u2019s okay", "A Unique 3D Adventure that's hard to resist", "Cute Yoshi game", "A wonderful game", "Yoshi", "Great Game!", "Great game.", "Not as good as it looks", "I don't see how people can't like it", "Great...but...", "Best RTS game made so far", "good, but a little disappointed", "SC2? or sometihng completely  different?", "Crafted Family Fun", "He love it", "Big replay value", "Retro", "Kids love it", "Awesome, Nothing too Over the top", "The game", "Gotta get it!", "Great fun for everyone.", "Reasonable pricing, great OLED", "Very Nice", "Awesome picture", "Great Picture", "Picture is good, the firmware needs improvement", "Really Good TV, I\u2019m not a gamer.", "Great Picture/Horrible Software", "Beautiful picture and great sound!", "Beautiful picture, disappointing software...", "Great colors sometimes", "Xbox Halo Elite Series 2 Controller thoughts.", "Oh so pretty!", "Issues with mine, probably not everyone.", "Great Halo Controller", "Finish the fight!", "Master Chief approves", "Love this controller.", "Coolest controller", "Halo Infinite Elite Controller", "Great once I got the working product.", "Nintendo Just KNOWS Fun!", "Yoshis crafter world", "Cute and fun", "Yoshi crushes another one outta the park!!", "More Yoshi fun.", "Yoshi\u2019s Crafted World", "Beautiful game but a bit overpriced.", "Don\u2019t miss this if you like platformers!", "Great game for kids and adults", "Oled 55in TV", "Blown Away!!!!", "1 year ago", "Awesome picture, firmware need work", "OK Updates would make it better", "Excellent Oled", "Super crisp picture quality", "Okay", "Vizio oled h1", "World Class Display OLED", "Best Picture Ever", "Sticky R thumbstick Resistance.", "Great controller now a little better", "Y button doesnt work all the time.", "Xbox Halo Elite 2 Controller", "Halo LE Elite 2", "Faulty product with known issues", "Xbox Elite Controller Series 2 Halo Edition", "Elite controller", "Halo Elite controller", "Amazing!!", "Not a good game", "I love it!", "Yoshi has never been better.", "Easy but fun", "A fun single player game", "It do like be so it be good", "Cute, crafty fun!", "Surprisingly fun", "You won\u2019t be disappointed if you\u2019re a Yoshi fan!", "Great game and fun", "So where is the GAME?", "This is the WORST SC game peroid!", "dont touch it? i think i will", "Another Dissapointment of 2010 Gaming", "Sorry I'm having a hard time speaking its so Awesome!!", "Do not touch this game with a 10-foot pole", "Tons of fun", "SC 2 - mediocre game.", "Way to destroy the best RTS series ever made!", "Nothing like the first two!", "Great picture quality", "Just short of 5", "Great Value For OLED", "Beautiful Thing", "Incredibly Beautiful Display", "To many problems out the box.", "Skinny", "Price to feature king!", "Great picture", "Great video!", "Beautiful", "Solid slaying ordanince", "GAME CHANGER.", "Very Good", "Weapon of choice for Halo Infinite", "Best controller ever", "Sickest looking Halo Controller Ever", "Solid improvement over the Series 1", "Halo Fanatic Gift", "Getting what you want", "Simple game for Beginning Gamers", "#1", "Fun!", "It's okay, but not the best Yoshi title.", "Yoshi\u2019s crafted world", "Yoshi's Crafted World Review", "Yoshis Crafted World", "Great", "One of the best games!", "A fun RTS", "Sooooo disapointing", "Really nice Controller", "The best Xbox Controller for a Halo fan!!!", "Halo infinite Elite Controller", "Looks pretty - never worked", "Fast shipping. Awesome controller", "Exactly what I was looking for", "Bumpers", "Halo Elite Controller", "High quality controller", "Great picture.  easy setup", "Worth the Money!!!", "Great picture!", "No Slouch", "Wonderful Christmas present from the kids", "Bad picture", "Amazing TV", "Great features, awesome picture, and easy set up.", "Pristine Image!", "Amazing controller", "Fun game!", "Green mean Machine.", "Yoshi is awesome", "A wonderful addition to the Yoshi game series", "Great game", "Love Yoshi!!", "A Modern Take on Yoshi's Story", "Good investment", "A definitely must pickup", "Fun, Beautiful, and Appropriately Challenging", "Love it.", "Great picture Quality", "Need better smart app!", "Great features & Amazing color and clarity", "Great so far!", "Stunning Picture", " the TV just doesnt see any input on HDMI 1", "Mr", "Color", "Fun!!", "Fun With Friends", "Super fun", "Very Hard to Play!", "Nice casual game", "Game of the year", "It ok", "HORRENDOUS!!!!", "horrible", "Great price", "Crystal clear 4k", "Lot of issues with new OLED TV", "Great OLED TV", "Perfect.", "Affordable OLED", "Excellent picture! Very crisp and defined", "Great tv", "Amazing picture", "Bad Trailer, Horrible Game", "Fun", "Couldn\u2019t hold interest", "Fun for all ages", "Yoshi is great", "Great for playing, nightmare for completing", "Yoshi Crafted World", "Super cute and relaxing", "Absolute gem", "Kids will love it!!", "Stunning picture", "Fantastic TV", "Great tv but needs patches as soon as possible", "Love the cost and love the quality overall", "Amazing how far TV has come in just a few years", "EXCELLANT OLED UHD TV", "Absolutely love this TV!", "So many features", "Troublesome TV with amazing potential", " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "Fun 2 player", "Nintendo impressed me again.", "Nintendo fun for everyone!", "Perfect for the little ones", "Family game", "Great graphics, 2 player gameplay awesome", "Awesome game", "Sooo cute~ <3", "Brings out the kid in a 33 year old.", "Unique and colorful world", "Great game for all ages", "Overall Gameplay", "Yoshi at his best!", "Great game for the family", "Another Great Nintendo Game", "Fun to relax with", "Won't turn on", "Love this thing", "The picture!", "Great picture great sound overall a great TV", "Beyond excellent", "Beautiful picture and sound.  Sluggish controls", "Great picture but OS is a bit slow", "Excellent picture quality!", "Enhances Game Play and Fits Perfectly in Hands", "Wirelesa Nintendo Switch Controller", "Eaysy to Use", "excellent value for the cost", "Such a great design", "Enhanced Wireless!!!", "Very good but not perfect.", "3 years ago", "Amazing Controller!", "Like DarkSouls but with Cars! :) Love it!!!!", "Skip it.", "Lots of Fun", "Let the dirt fly and the motor cry", "Wrc8", "Crazy good WRC game.\\m/", "WRC 8 FIA World Rally Championship is great game.", "Yoshi\u2019s crafted world game", "GET THIS GAME!", "Its yoshi!", "Another quality Switch release", "Weaponized Cuteness at it's Finest", "Cute stuff", "Love love love", "Awesome game for all", "Yoshi's Flabby World", "Crafty Business", "Great tv quality - could use a microphone remote", "Beautiful color!", "Fantastic picture", "Great but...", "What a picture!", "Terrible software", "Beautiful Picture", "Great Features!", "Great Features", "Great product!", "Love", "Great product!!", "So retro!", "Works great", "Love it!", "Great for younger kids", "Fun game, awesome graphics", "Cute and fun!", "Needs a better soundtrack.", "Just my thoughts", "Short and sweet", "Beautifully Developed!", "My Yoshi Experience", "OLED55H-1 Sucks!", "Has everything you want for an Oled Tv", "All the bells and whistles!", "Great picture! Great sound!", "Great Choice", "Awesome TV for the PS5 !", "Almost great for gaming", "Great controller!!", "Great bonus features and love graphics"], "data": [56, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 5, 1, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 6, 3, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "review_description": {"label": ["My new OLED is a upgrade and it's great!  This is my third Vizio TV to replace my first one that went blank after 12 years of stellar service. (I'm even thinking of getting it repaired if possible for the great grand kids.)   I have always liked the picture quality and the price of Vizio's. You cant go wrong.", "Rating is really a 4.5 but that's unavailable. The unit looks great both in and off. It is short on physical features (Bluetooth and whatnot) but I use both external sound and media units. This is a great OLED to buy if you want a great TV at a reasonable price.", "I\u2019m quite pleased with the entire product as a whole. The quality of picture and sound really speaks for itself when in use.", "I\u2019ve only had my new Visio OLED65 mounted and operating for 3 days now and I\u2019m like a kid who after Christmas can\u2019t get enough of his favorite gift. The brightness and clarity of the picture is another huge by step forward in the evolution of  the television. I find myself seeking out programming that will showcase the quality of the picture regardless of the genre or intended audience. Some of the newer, computer generated cartoons, lack any redeemable qualities (imho) save for the incredible graphics, which are stunningly colorful, bright, and almost as vivid as real life. Nature documentaries and shows involving space, especially when shot in 4K are almost mesmerizing. When I bought my 65\u201d HD tv about 10 years ago I thought I was witnessing the best quality picture that could be produced by anything this side of a mirror. I was wrong, and happily so. If you\u2019re on the fence, like I was, about whether to replace a broken or outdated television with another of similar HD quality, that is to say \u201cstandard high definition\u201d...don\u2019t even waste your time. It\u2019s increasingly difficult to find as 4K is becoming ubiquitous, so that is pretty much a given. On the subject of spending your hard earned money on the more expensive OLED technology....if you have the means, or can somehow figure out how to acquire the means...my advice is definitely do so. Whether you\u2019re into movies, sports, gaming, or even nature/space shows, you will be amazed at the latest leap in picture quality and brightness. And VIZIO offers all the quality at a substantial savings. Putting the absolute best technology within the reach of those of us for whom the strength of the stock market makes absolutely no difference to our bottom line. ", "10 months ago", "The picture is very crisp and the blacks very dark.  Beautiful color.  The Vizio SmartCast app is fantastic.  The response from selections is much faster than the traditional supplied remote.  They update it from time to time with most recent voice search function", "Picture quality is amazing, however within a week from purchasing the tv will not turn on unless I unplug and plug it back in.", "Image is so clear I feel like I\u2019m on the set of the shows.", "I purchased this TV about 2 weeks ago and am blown away by the crisp, 4k picture.  I would definitely recommend this TV to someone considering an upgrade.", "I got this today 2/25 for my birthday present from my son as a surprise gift, without any prior guess or information at all. My previous one in my master bed room was quite old Samsung 50\u201d PD TV, which was ok but heavy and bulky compared to this. ", "Best price on an OLED tv. Has a great picture and is easy to navigate the menus and connect via apple or Android devices. I always bought LG OLED tvs because I liked their quality and features. But so far, Vizio is just as good and a better price.", "Just like the elite controller v2 but halo edition one of the best controllers out there if you do not have one elite\u2019s controller\u2019s are must have.", "First foray with the elite controller. Nothing but impressed. The weight in the hand, the grip, the buttons, and changeable joysticks are all amazing. Even better is the Masterchief finish. If you can't find the halo edition I'd recommend trying the regular elite series 2, I'll never use a different Xbox controller again.", "Really bought this for the blue mode leds, just to find out they are still white leds with a blue coating on them and not that bright. All in all still an elite controller.", "At first I was asking myself why spend the crazy money on a controller!  I too am now a believer.  From the case to cable to finally making its way to the actual controller - it is special in every way.  There is so much detail to this controller.  Lets not forget it is a limited edition and carries a beautiful Halo design.", "The build of this controller is perfect and the details are amazing.", "Cortana herself lives within this controller. I am one with Halo", "This controller has always been great but this one is a work of art.", "Even lighter than my previously owned Elite Series 2, thought it would be heavier. The buttons, the triggers, the analogue sticks, everything operates better than the original Elite Series 2 at launch. ", "14 days ago", "These controllers I think are worth the money. One of my favorite things is that I no longer need double A batteries. It comes with a charging port. And how I can customize the buttons is rad", "Love the controller use it everytime I play. The remote plays excellent. Be carefull of the back buttons though do to being removable I feel like they will wear out faster than most.", "Yoshi game was awesome and still playing it thank u sooo much GameStop :))", "Great game. You will enjoy it. Good price worth it I Always have enjoyed the super Mario series since Mario brothers in the arcade", "My son loves to play this game, he's been playing it every day since he got it... Great Job!!!", "The game is great for a family and younger children. My 4 year old wnjoys the game.", "It would be better if Poochy was in all of the levels.", "It's cute and fun, but feels a little lacking in fulfilling its potential.", "Good game including game play and music also music", "The quirky style that shined in Yoshi\u2019s Wooly World has gotten a serious upgrade in this new gem from Nintendo.  Like all it\u2019s first-party titles, this game is nearly flawless.", "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "2 years ago", "She loves it good game. It easy to play and addicting.", "Yoshi\u2018s crafted world is the best Nintendo game I ever played since Yoshi\u2018s woolly world! Lots of hard challenges to complete and it\u2019s so much fun! I love this game!", "I recently bought this TV and was blown as easy with the picture quality. I never want not to go back to LED.", "I went from an old LCD TV to this Ola TV and the picture quality is amazing this TV has a deep as blocks of ever seen the sound quality is fantastic I could not be happier!", "Bought this yesterday and I am really excited. I saw how clear the picture was and had to have it. Won out over my husband who wanted the Sony.", "5", "I've had this TV for 3 weeks now, so far I really like the picture. it's hooked up to a vizio 2.1 sound bar. it is confusing when I 1st turn the TV on,  I get the Vizio sign on the screen, a few moments later the picture comes on with the TV speakers, then the tv shuts off, a few seconds pass and he comes back on with the sidebar act of and everything is OK then don't understand why it goes off comes on goes off and comes back on", "Great TV at at a reasonable price.  Happy so far with purchase", "I love that I found an OLED that did not break the bank. The picture quality is amazing and VCast is great! The only downside is the sound and it\u2019s only a small complaint on the quality.", "Easy setup and there you go...I love VIZIO TV. I will continue to buy VIZIO TV's !", "Very good image quality, beautiful design on a affordable price", "Oled is king I\u2019ll never go back to traditional led TVs again it\u2019s just not even in the same ballpark you can\u2019t beat the picture quality of and oled", "\"I'm a true fan of vizio. My old 36\"\" Vizio lasted me a very long time and that's the reason why I decided to stick with vizio. Visuals are amazing on this OLED. There are some bugs but they can be repaired by software update patches released by vizio. I also bought the Vizio Atmos soundbar and its absolutely freegin awesome. Only issue I've experienced is the sound bar doesnt activate on its own and I usually have to cycle through the settings to reactivate through HDMI-ARC. Im.sure theres a fix for it. Overall I'm happy with it and still feel vizio makes great products.\"", "It\u2019s amazing! Works perfect, just as an elite controller should. The best part is the paint job! 10/10 recommend.", "This controller provides excellent fine motor control with adjustable thumbstick tension, and removable back peddles.  It works great especially for a first person shooting game like Halo infinite.  It\u2019s on the pricey side, but you know this is a premium product for serious gamers.", "Best Xbox controller I've owned. Worth every penny. Owned for a month with no issues. Only con is I wish there were replacement joysticks, I love these but i know I'm going to wear them out, and I won't have Master Cheif green ones to replace :/", "Great controller. Purchase was definitely worth it. The only problem was the finalizing my payment and the late shipment through GameStop.", "This controller is incredibly responsive. It\u2019s fully customizable with lots of additional features & settings that can be adjusted to your preferences. I was skeptical at first due to the price but after a fair amount of use I wouldn\u2019t game with anything else", "Love the controller no probs with it the first one was lost but customer service made sure I got another one and in a timely manner", "SO BEAUTIFUL! Great addition to my Halo collection. The detail is just amazing. Performs like any other elite series 2 but that color scheme is just phenomenal.", "great controller, beautiful design, ultimate customization", "Doesn\u2019t even feel like an elite controller. But it does feel like an advance one with the grips and joystick converters. Not really worth the money but the design is amazing and there is no battery pack in the back, it\u2019s all built in, like a phone. Over all I love it! I\u2019m such a Halo fan it was a no brainer not to get.", "It feels great, it enhances gameplay thanks to the paddles and customizability, and it looks absolutely beautiful.", "Tons of fun to play with my kids! They love the look and ease of play!", "Awsome title. Loads of fun! My kids and I love it!", "This game is amazing! Almost had given up on the Switch, but this game saved that from happening! It's a great game for people of all ages!", "Fun and cute, but some of the mechanics don't work that well (Tank Yoshi and the mutil-layer egg aiming). Still fun, but needs improvement in the mentioned areas. See Caddicarus' analysis.", "It's awesome! The graphics make everything look like cardboard!", "Fun title that is a good installment to the series. A little bit easy to beat, but has plenty of extras to keep entertained while going for that 100%", "This game was fir my youngest, he picked it out from good reviews online.", "It can be 1 or 2 players. It\u2019s pretty simple mechanics, but there are so many creative was to use them. And there is a lot of replay ability. Me and wife have a blast.", "It\u2019s a game that\u2019s for kids and for adults to enjoy", "Purchased this TV a couple of weeks ago as my existing TV was 10+ years old and needed an upgrade.  Had a salesman take the time to show me the differences between an OLED and other projection systems.  Couldn't be happier with the picture that I am not experiencing.", "My wife loves it. She even lets me play the co-op mode with her sometimes. I\u2019m not that into gaming, but this game is really fun!", "This OLED is Excellent, Very Easy to Operate. I imagine that Someone may Complain but I am certain that it will be a Tribal thing.", "Great tv. I like the vizio apps.the sound is nothing special but if you are buying an OLED you probably have another option. The best part is the deep true black. The colors are very vibrant. I am very satisfied.", "Has some bugs and I know Vizio will work on them a little faster. Especially with the new Xbox series x and ps5. Other than that can\u2019t beat the price for an Oled TV. Great picture. Now Vizio please get the VRR @ 4K120 to work and give us the option to change all picture setting in game mode. No settings should be blanked out.", "I bought this for my birthday and it has been amazing!", "I love the tv and everything about it. I am a big fan of Vizio TVs, except for the sound, you will need a soundbar.", "All my Vizio TVs have held up under use. Hoping the new OLEDs will get firmware updates and continue to make this TV great now and in the future", "Very good OLED tv for the price but it does have some issues with powering on.  If you leave it idle for too long it will \u201cgo to sleep\u201d and the only way to cut it back on is to power cycle.  Other than that I love it.", "Beautiful screen! Awesome price but full of bugs. On my set had to constantly unplug my tv from the  power supply to get it to come on. Worked well with my xbox series x just a few glitches here and there. No 4k 120 for the ps5 so I had to use the 4k 60 hdmi slot. I feel this tv is still in beta and needs alot of firmware updates to address system performance issues.", "I bought this tv because I wanted to try out OLED for the first time. I\u2019m glad I bought it. The colors and contrast are on point. The price compared to the competition in the same category can\u2019t be beat. Super happy.", "Everything I wanted from a controller, in an amazing custom paint job!", "The design is very remarkable great addition to the collection of Halo Series X Console Bundle it a must have.", "I love the pro controller and this one is absolutely beautiful. Must buy", "Works good its perfect for people who game hard-core because it don't ware out as fast and last a long time cheaply priced perfect for your gaming set up!", "I love the classic colors of master Chief! Looks great with my Halo Theme Xbox!", "AXYB buttons do no register unless they are 100% fully pressed in. Annoying there is no pressure sensitivity!", "This no longer available item is excellent and you should buy one, but you can\u2019t.", "Great controller love the way it feels and all the little halo touches it has.", "So far I love the feel and look of this controller. Need to wait and see how the grips hold up to give it a 5 star rating.", "I was lucky to cop a limited edition elite controller  waiting for halo campaign to used", "This game has amazing graphics and amazing levels.", "It fun for your family and if you have kids they will enjoy hours of fun", "I loved the Yoshi yarn game on the 3DS & I love the New Yoshi Yarn game on the switch.", "Great game love every minute of it fun and entertaining", "Excellent condition. Awesome game. My fiance is enjoying it a lot.", "One of the best games I've played in a while absolutely beautiful \u2764\ufe0f", "10/10, it is a very creative, thinking out of the box game, it might be a bit easy, but it is fun to and I will 100% it even if it's the last thing I do.", "OMG, this is the ultimate of fun, silly, fantasy escapism. Sit back, relax, and give yourself an hour to let Yoshi explore the hand-made world of tape, cardboard, and pipe cleaners", "Takes me back to the 90's. Thank you Nintendo! and thank you GameStop for always having great prices and what I want in stock!", "really cute game and its pretty easy for the non gamer . its great to have a son who can help you too", "I purchased several television and soundbars from Vizio from the M series and the SB38", "I purchased this OLED over a week ago along with the Vizio Elevate Soundbar for my new Xbox Series X. I truly appreciate the picture quality experience that this TV can offer. The performance of this TV and Soundbar surely surpass its price point. I strongly recommend this TV for anyone that wants the best performance for the money. I will dare to say that based on my research, this TV will absolutely rival other brands at much more expensive price points.", "I had purchased this knowing it was going to not be perfect but omg. I had to go in and change my ps4 setting for video to even use the menu settings at all. I also cannot use netflix, it won't open from smartcast but when I press the button on the remote it freezes the whole tv on a black screen. This is a serious deal breaking bug.", "I purchased this a week ago and so far so good it's to early to make a define decision.", "I wanted to buy this for long but I am a bit disappointed. I guess my expectations were high but not really sky high.", "11 months ago", "The Best: The TV offers great contrast and clarity. ", "4", "This screen is a beauty. Very sharp, good colors and decent brightness. I hook it up to my PC for gaming and occasionally have some quirks. In the middle of a game it says no signal detected and shuts off. Sometimes it isn't detected by the PC. ", "I bought this 2 weeks ago and has a great picture. It is good for gaming on the xbox series one. The only issue is the VRR does not work and has a distorted picture when I enable it.", "I love the pristine picture, with saturated accurate colors. However, I absolutely hate not being able to turn off the fluctuating luminance. The only thing that spoils a great review is the brightness that changes with how dark the screen is to increase contrast. The TV does not need it, and if I knew who the engineer was that omitted the off selection for this annoyance, I would offer him a Vizio necklace.", "The only issue I have is. I own both ps5 and xbox series x and if I use hdmi ports 2 and 3 4k 120hz I have to unplug the tv every time I turn the tv on I worked around this by using ports 1 and 4 so I'm stuck at 4k 60hz on both consoles unless I want to constantly unplug the tv for it to work but over all I love the oled tv and you have to get a polarized power cable because vizio gives you a non polarized power cable that does not fit the TV power port", "Great item and excellent condition. Works awesome!", "Very cool design, feels great and comfortable in my hands.", "This Halo Infinite Elite Series 2 controller is so awesome with the Halo theme on it, it's beautiful.  Being able to customize the controller to my liking ranging from the controller sticks, d-pad, and how short you want your trigger throw is freaking amazing compared to a normal controller.  Only con is that it's expensive, but once you open up the whole package and unboxing experience it is well worth the price.", "Packaging was 5 stars alone but the feel and customizability of the control and the design made it over the top and it came with the full game download", "Love this controller glad GameStop pro was lookin out and it came in a decent time", "The Microsoft Elite 2 Pro Controller is perfect for the console gamer of any level. The fact that it\u2019s the Halo Edition makes it that much better! I love the controller and I\u2019m glad they came out with this limited edition.", "This is a piece of art, amazing!", "Very well design and heavy feeling, it truly makes you feel like you have a better-quality controller compared to the regular Xbox Series X controller. Would recommend to any gamer specially Halo fan!", "This was my first elite controller and I love it, it\u2019s definitely a game changer and looks beautiful.", "The controller is great but I am experiencing stick drift just two days after receiving it.", "Awesome, love this character! Love the whole game!!!", "Excellent for a relaxing time. Can be challenging if you want to %100 every level.", "Fun and exciting game if you like Yoshi and his classic games", "The game is adorable, the music isn't ear-splitting, and the levels themselves are fun. However, it ends up becoming a chore if you intend to 100% the game with multiple scavenger hunts per stage with a flip-side that is dedicated to finding three dogs under a certain amount of time for the full reward. Ultimately, it's cute and full of heart, but is not recommended to just sit down and 100% in one sitting. It's quick, easy fun enjoyable in small bursts either alone or with a friend.", "I\u2019m not a big gamer. I was so excited when this came out I had to get it. I guess I just expected more", "Nostalgically entertaining and unique 3D adventure that will make it hard for you to put the controller down", "Bought this game for my 12 yr old's birthday.  He really likes to play in multiplayer mode with me.  Definitely fun bonding time!  So far it has been fairly easy to finish each section, without being too easy (working together helps).  I do hope it gets a little harder as we get a little further in.", "Good to see Yoshi on the switch, but it is a slight step down from Yoshi\u2018s woolly world", "Truly amazing. The art style is unique and the gameplay is equally fun as it is relaxing and rewarding.", "I got this game so me and my gf can play together. Its fun and quirky but gets challenging", "Some folks didn't like this game....thought it didn't measure up to the original or Forged Alliance. Boy, are they wrong! I thought this game was great! Maybe the tech tree is a tiny bit smaller, but the game more than makes up for it with new, cool units, great graphics and effects, and awesome explosions. In fairness, I was a little perturbed that that more than one engineer cannot build on the same structure, as in the previous games, but then again, the structures go up pretty quick. Happy hunting!", "Great game. Nothing bad about it. It has many great features and story mode is cool. I think it is awesome.", "This game, in my opinion, is WAAY better than C&C and is very good in gameplay and everything else. Some people say that he storyline is horrible, but that doesn't really effect me since I just play on the skirmish and online. The story line isn't really a big concern. I just play it when I'm bored.", "The story is extremely slow and confusing until you get later into it. It forces you to play as a certain faction first, then another and end with the Cybrans. You should definitely try out the originals, they are ten times better then this. Overall, the gameplay is about the same as the last game, the graphics are much better and the sound and music is again amazing. However, the story development needs more work.", "alright here comes the best game eva, anyway herz a shout out to all of the peeps that think this game is the best eva u rock 4 ur good reviews. anyway the graphics might not be as good as the first but the graphics to me doesn't matter at all since the campaign is awsome and a good storyline. along with the campaign the units and multiplayer maps and experimentals and ect. but i honestly i think the unit count is very low there should be a higher unit count because people have things to do units to make and probably alot of them too and places 4 them to go like in others bases and stuff.", "This game is the absolute best RTS game you can play. And I have played alot of RTS games, so I know what I'm talking about. This game has very good graphics, and they will be even more enjoyable the more you paly the game, considering that you notice things like shadows cast by the terrain, and details such as distortion coming out of a walkers exhaust pipes. This game also has an amazing command system. There are more controls and options you can use to make your army do anything imaginable. This game also includes extra experimental weapons, which they balanced much better than on the first one, and actually have a general purpose rather than to walk into the enemies base and kill. And most people have heard that the nukes on the second ones are pitiful compared to the first. The difference is that on the first one, it was a bright light and smoke covering a large area of the map. On this one, it might be only a little bit smaller, but it is insanely detailed, in the fact that an extremely large portion of the map gets lit up in red, and things are actually moving with the explosion as they would in real life. When it touches water it makes steam and jets it into the air, so nukes on this one are much more enjoyable to watch, regardless of what you've heard. All in all, 10 stars.", "I don't know why people don't like this game, because if you like real-time strategy or RTS, this is the game to get.                                                                                                                                                                                                      I usually only play online and play skirmishes to get better or if no one is as good as me because I can destroy anyone.                                                                                                                                                                                                  I am a veteran at Call of Duty Modern Warfare 1 and 2 so don't try and kill me or fight me.", "What Gas Powered Games have done here is amazing, this game is packed with more units, new features, less glitches, and a lot more excitment. what i was really taken with is that there is no +mass or -mass anymore, its all based on real numbers. the tech tree feature is amazing, allowing you to upgrade old units to make them more lethal later in the game. a lot of the good things are still their like the cybran ships being able to crawl onto land. however, the story is disappointing, character extremely lack any sort of personality and emotions. also, for high end computers, this game has surprising lower graphics, units like the UEF titan look a little bit more like legos, even though some units have good deatil, others are flat out bad, although you have to appreciate that they are trying to let computers with lower hardware able to run this game. online play and skirmish mode are fun.", "\"Supreme Commander 2 is different than it's \"\"predecessors\"\"", "2 player fun for dad and 10 year old. Replay value is high with extra modes after completion.", "My son been waiting on this game for a long time. But he got it now and he love it.", "I'm in love with everything from this game and I appreciate the replay value as well. You can go back to a level and find new tasks/goals", "Brings back so many memories, I absolutely love this game.", "It actually looks crafty and there is so much to explore and you can", "The cutesy graphics and creative levels definitely added to the child-like wonder and fun of the game. Even the creepier levels were cute, but still gave you goosebumps at the same time.", "I like the simple creativity, nothing too over the top just very creative. It\u2019s sort of too easy so it\u2019s something to pass time with. Overall a good purchase", "Fun imaginative and challenging at times great deal of replay ability", "Fantastic game! The level designs are inventive and memorable.  I haven't had this much fun with a game since the days of the NES/Genesis!", "This game is so much fun.  You can easily run though a level or you can take your time and find all the hidden things.  I love to play it and so does my daughter!", "I\u2019ve been very hesitant to upgrade to an OLED because I couldn\u2019t justify the cost. But when Vizio jumped into the OLED market, I was very excited. Other brands\u2019 \u201cbudget OLEDs\u201d cut corners, whereas Vizio\u2019s track record with reasonably priced premium TVs is outstanding.", "0", "This is my 3rd Vizio TV. 1st OLED. They are all 5 star products!", "Easy to set up, to program, and assemble. Smart TV is very convenient.", "I bought this TV right before Thanksgiving and have enjoyed it ever since. I wanted a Smart TV and this did not disappoint. I bought a smaller one for my bedroom.", "As the title states, the picture is good, as expected. The only downside so far is that there are SERIOUS handshaking issues between this tv and my PS5 console. Sometimes, Ive got a black screen, and must reboot the tv to get the PS5 display to come up. Also, the tv menu will lock you out of several key picture adjustments during PS5 use. With some adjustments to the firmware to fix these issues, this tv would be nearly perfect.", "I haven\u2019t had an issue with this television like others. From what I have read, most issues are about gaming compatibility. 4.7 / 10", "Severe Issues with settings. None remain when set, audio passthrough is a nightmare. Motion settings are impossible to turn off for all HDR formats. Doesn't handle 24p content well from anything other than blu-ray source.", "This is my fourth Vizio tv and they just keep getting better. Bread brand and quality product.", "I am very pleased with the quality and picture on this TV.  I was disappointed that the streaming software runs at 720p since this is a 4K TV.  I added a 4K Firestick to resolve the issue.  Otherwise I am very happy with the design and function of this TV.", "I bought it about three weeks ago, and sometimes I am impressed with the crisp colors produced. There are times not so much, I  was watching something on Netflix the other day, and all the color except red looked good. The red color was like pigmentated almost as if it were a hole where ever there was red. I also noticed that when streaming sports live action it blurs a lot. I  am not sure that isn't the feed, but it is annoying.", "Extremely great controller! It's my first pro controller and I loved it. The design and color make it complete. Had to get used to the paddles on the back, but afterwards it made doing certain things in games easier!", "Beautiful controller! A must have for any Halo fan!", "Right joystick jumps and feels stuck sometimes. Paint in that same joystick that is gunmetal is gone and when the stick is rotated you can see the silver beneath. Wish I could have returned, but with how these are gone everywhere I don\u2019t know how I would have gotten another one\u2026", "Great design and awesome feel. This controller would be perfect if not for the horrible quality control issue Microsoft has on their controllers. Mine had stock drift, a messed up button, and a bent paddle, so I\u2019m waiting on a replacement. Fingers crossed.", "A controller worthy of a spartan you'll never play the same ever again with interchangeable thumbsticks, d-pad and mappable paddles you'll be unstoppable in any engagement.", "Happy to add this to the Halo collection! She\u2019s a beauty.", "Solid feeling controller. Love the design and halo theme of it", "Multiple parts that can be swapped. Comes with an in game code that gives a weapon charm", "Best controller ever. Toss a Halo Infinite skin on it makes it that much better. Recommend to anyone.", "Thumbstick issues straight out of box. Had to send back to Microsoft to exchange for working one. After that it\u2019s wonderful. More of a quality control issue on Microsoft\u2019s end than gamestops fault, however when I reached out to GameStop about the purchase I was told they didn\u2019t have any to replace it with. Just a general pain in the butt just for me to get a working product that I paid a lot of money for.", "Typical, classic, Nintendo fun! Challenging? Not very. Enjoyable from beginning to end? Absolutely!", "Super fun, a lot of challenges and game time. Since I bought it I haven\u2019t put it down.", "Not a hard game but a good one to relax and play after work.", "If you like yoshi, you can\u2019t go wrong here. Game is a masterpiece and provides decent challenges for even the seasoned gamer.", "More whimsical Yoshi fun that innovates on the last game without changing what we know and love.  A bit easy but still fun & heartwarming.", "Fun game, but too short.  Beat the game after only three days of casual play.", "Yoshi\u2019s Crafted World is fun and a bit challenging.  My 10-year-old loves it and I can play it with him.  Yoshi!", "Really adorable game with an imaginative landscape. This game is cute and colorful and fun for all ages. Collectibles could be a little more satisfying however, it doesn\u2019t ruin the game. Developers did a great job but the game should be priced about $20 lower.", "A fun platformer with charming visuals, interesting puzzles, and a good level of difficulty!", "An extremely fun game not only for my little sister but for me too! Easy enough for her to enjoy but it has some challenges that allows me to have fun as well.", "Oled makes a big difference in the sharpness of the picture and it can be watched from an angle.  Very happy with my new TV", "\"I bought the 55\"\" for the bedroom and at this price you cant find a better Oled. Im was a Sony guy but now I dont have to pay the premium to be lol. Finally a company that is challenging the big dogs and winning!!!!", "I realize Visio is new to OLED and this is their first go at them .., that being said, this tv has potential and I knew saving money over LG would come with some growing pains. I\u2019ve experienced several anomalies that required a power cycle to correct. Some of those issues were sound no video on all inputs (including OTA & web channels), syncing with true 120fps 4K sources. ", "Some features are missing and broken but when it works its great!", "I\u2019ve had this tv for almost 2 months and completely happy with the performance and picture", "I\u2019m happy that I made this choice. I sincerely hope this product lasts more than 15 - 20 years", "Great picture lack of updates. Need support for 1440p and Vrr 4K 120. Also android fully baked in", "This TV is my first oled.  The picture is breathtaking but the television itself has some problems.  Sometimes the television will not connect to the smart cast. Sometimes the TV will not even power on without having to pull the power plug and plugging it back in. But overall I am happy with this television. We have been promised all these things to be fixed and a future firmware update. Fingers crossed.", "I was a bit nervous buying this set being that Vizo just started making OLED's. I can tell you know after I have it in my house. IT IS BEAUTIFUL! I can not believe the qualitly of the picture. I have this set  in my main room and we have a gaming 4k TV on the same wall. Side by side this display makes the other 4k look cheap (btw... the other set is a high end display made for gaming).", "so glad I decided to spend more to get the OLED. Picture is the brst.", "This is my second series 2 elite controller. The first worked perfectly but this one looked so awesome that I had to have it! The only issue is that the R thumbstick is a little sticky when pushing to the L. No other direction, only the left. It is like there is a bit of resistance I have to push through before it releases and goes to the left. My first elite series 2 controller doesnt have this issue. It hampers FPS games a little, but not terribly. Otherwise a great controller and terrific looking product if your a Halo fan. I'm just a little bummed about the aiming thumbstick being slightly off.", "The Elite series 2 was already the best Xbox controller, now has an amazing look.", "controller is awesome. but my Y button doesnt work all the time. its very frustrating.", "Work as great as the original Series 2 Elite Controller but that Halo detail. It was great to find a code inside that gives you a weapon charm that look exactly like the controller.", "Beautiful controller. If at all possible, why not buy the limited edition controller for a small amount more. Im a huge halo fan, so getting an extra controller in this caliber of beauty was an easy choice for me. Elite controllers are an amazing controller for sure, which is part of why there is too many reasons to get this controller, really.", "Like many Elite 2 controllers, this was totally unusable out of the box.  Stick drift was suuuuuuuuuuuuuuuuuuuuuper bad.", "Love this controller. The attention to detail is out of this world.", "Great elite controller for a supa halo fan-very stylish too", "Very cool and feels really nice and comfortable in hands", "Its absolutely beautiful! Great controller", "I loved Yoshi\u2019s Wooly World, but this game came across as very childish and no real goal that you are trying to reach.", "There's so much replay value with this game.", "Awesome game.  Little less challenging but that doesn't take away from the enjoyment of the game.  Highly recommend if your into Yoshi island style games.", "Great game but kind of easy compared to Yoshi\u2019s island", "Single player is tons of fun. Nothing sticks out as being bad other than being a little too easy for mature gamers. Co-Op is a jumbled mess of accidentally getting  stuck on people and losing your eggs unpredictably.", "Pretty fun typical Yoshi game that offers more variety than usual, still not Yoshi\u2019s Island levels but pretty good nonetheless. Worth my money.", "Once you get past the cuteness factor of the game, you'll find a very fun gameplay experience. Controls seem very responsive, and the 2 player mode is loads of fun and laughs. Great game to introduce a young child to gaming. A great addition to the Yoshi themed game library.", "I haven't been a huge fan of the series since it is a easier version A Mario title but this game has been surprisingly fun", "It\u2019s so cute. I love Yoshi.  This version is built using craft materials and can get quite challenging!  I love how detailed the graphics are! Fun, fun, fun!", "Great game and fun but unlocking different types of Yoshi\u2019s with yarn in the last game was a lot better than the costumes concept.", "Got my package, installed it and got a STEAM POWERED program that starts itself every time I start my computer [no option to turn that off] and emediately takes me to thier online site with only options to buy games. The was NO GAME on the disk. No information saying that it is an Online game only [no information saying it is even an online game on thier site.] I tried to check out the Forums, registering for thier forum kept takeing me to other sites. These other sites required me to reister. This repedative nonsence went on for 4 diff registration that finnaly returned me to the STEAM forums. Unfortunately I still wasn't allowed to access thier forums.  No tech support, no contact information ,no game.. No reason to even consider getting this product.", "I own both Supreme Commander and Forged Alliance and find both games superb. When i head there was a Supreme Commander 2 coming out of course I ran right out and got it. I can honestly say this is one of the worst war games period. My reasons include the fact you must unlock a LOT of stuff to even consider playing the quick battles. There's only 6 maps, yes i said 6. The fact you cant even choose what side you want to be on until you unlock the ability, and the WORST part is you cant even see a simple overview of the maps when you are selecting them your basically better off throwing darts at your comp screen to decide what your gonna do rather than actually getting to decide anything at all about the battle ahead. The point I'm making here is don't Waste your money... This game isn't even worth getting if it cost 2.50.", "played it today and i've never played a better RTS. im lovin it every step of the way and although its a little bit more 'cartoonish' than the last one, its still definatly a fun epic story lined game. it beats AoE, UaW, and matches EtW, and C&C. i really love playing it and my slightly old system can handle it perfectly. i was a little disappointed, i though the requirements would be a little higher and i definatly see a decrease in the quality. overall, 8 out of 10. AWESOME game. right now, im a little concerned with the new unit the cybranasourus rex (yeh, i probably spelled that wrong) it seemed a little like an out of place character to be put in the game. its still a pretty cool unit and theres so much more upgrade. the most important is the eco that they had. the last one sucked and was full of glitches. this one is MUCH more stable, its brings the good parts of halo wars and not the sucky parts (because seriously, halo wars sucked) buy NOW", "The frist two games of this year that I was waiting for were Supreme Commander 2 and C&C4. Both are god awful. Supreme Commander 2 is missing the best elements and nuances of it's two predecessors. I actually think that TA was the best of them all. Sad that games just get worse and worse as they come out with new titles. What happened to the unit types??!! There is not nearly as many unit types as SC or TA. Plus, what happened to the recycling of plants and rocks... the environmental resources you could live off until you got your resource production up and running? And why are there so few multiplayer maps?  I have an idea. Take the Total Annihilation engine, give it some new graphics,new sound, a new story line and new unit types... and don't change anything else...", "Don't know what the other guys here are talking about, the game is great, ya sure they took out some of the things the sup com pros loved, but the thing is, more people want to play RTS so you can't expect a newbie to grasp every concept of the game, unlike the pros. If they left some of the things from the old sup com in, it would be so unbalanced it wouldn't been as fun to play for the newbies.  Alright so lets get down to buisness, the storyline is great and the graphics blow sup com 1's out of the water, while supporting older computers that don't have as good of processors or graphics card. Win, Win situation. At least thats what I think, and that is why you're here isn't it ??   They added a new research screen to simplify it and added a whole bunch of new features like building add ons and new experimentals. FYI to all aion illuminate fans, they don't have naval anymore. I know, ouch right? Well I think we'll live.  On to sound. They did a really good job with the music this time, its about 10 times better than sup com 1 and the sound effects really match up and exceed what you think they will sound like, when lets say someone gets blown up by a nuke or someones commander goes into meltdown.  For all those hard core gamers out there, the 10 hour battles have gone away, I know, sad right? Well they replaced with a shorter even fiercer model of online game play, that really seems to fit, and when I mean shorter, I mean average of two hours. You can still build those big armies just faster. One thing I wanna finish up with is the Interface. They kept a lot of the interface from sup com 1 and FA, but also added the research screen which I talked about earlier. It works like this: You need research points to buy any sort of research upgrades and those research points automatically come along, but you can build research facilities that increase the speed at which you get them. You can spend research points on things like, personal shields for your units, or new buildings, sight upgrades, radar upgrades, and new schematics for buildings and units. Big FYI for all those 360 gamers lookin at this. The 360 version of this game is just as good if not better than the PC version.", "\"Make no mistake - this IS Supreme Commander Lite. It almost feels like a very weak demo of SupCom 1, but worse. Even with the new research trees, you'll still end up with no where near the amount of units to choose from that you had with SupCom 1 and its tiers. Yeah, sometimes the tiers were annoying to work through and it took far too long in most instances to get anywhere close to maximizing your faction's potential in a single match in the first one - but this \"\"sequel\"\" has completely gutted it altogether. You'll likely end up mashing your mouse button or hotkey to churn out more of the exact same units.. over... and over... and over again because there's barely anything to choose from for unit diversity. The game requires the Steam client and an internet connection just to play. While it's true that most people these days have an internet connection", "If you like multiplayer or lan-parties add this on to the list because you get a lot of fun in that little box! There are many nay-sayers but i really don't know what the heck they are talking about. Graphics are great, simple neat menu, intense tug-of-war games because its hard to dominate players that are sneaky!... It runs great on both my desktops and even my laptop! So if you have a decent machine you can easily run this game because its not demanding at all. Very fun to play against you friends and the online is pretty intense. Single player story is good and easy to get into because you dont need to have played the originals to understand whats going on or anything. As of right now you can save $** if you buy it which makes it even more worth the money. 10/10! pick one up maybe ill play against ya!", "There were so high hopes for this game, as SC 1 and FA had left me hungry for more games like TA, yet unfortunately the wait would lead to disappointment. For those who enjoyed the similarities between TA and SC1 will be the biggest disappointment here. The economy of the previously mention games is utterly gone. No worrying about balancing energy usage and mass income with building and firing weapons, its all been removed. Its now a simple straight up, build up army, build base defenses, go conqueror enemy. Also gone are the tech levels, and weaker starting units, and teching up. Instead its replaced by research points that gradually come in much like all the other resources.  Without that element nothing really stood out in the game. Without the challenging economy, the campaign portion of the game becomes simple, build defenses, build army, repair defenses occasionally, attack enemy. Musically nothing really stood out, there may of been a couple times when I stopped to notice it, but again nothing inspiring. Storyline it also seems kinda lacking, it comes off like a Final Fantasy storyline mashed into brief conversations between 18 missions. There just simply is not enough there to make a great story, which once again left me greatly disappointed. Graphically the game was nice, and the small scale compared to SC1, meant I could actually stay somewhat zoomed in, to actually see the units, and not just commanding by click on the small icons. The movies were decent, just way to few of em to tell a good story. The game controls fairly well, being rather simple game now, its easy to pick up and get right into. Those with SC1 knowledge will have no trouble picking it up, as the mechanics are still basically identical to the first. Those used to Starcraft or C&C type games might take a bit longer but overall its not a hard game to get into or to start playing. The game probably has some strengths in multiplayer, as the unit balance does seem good, but I have not done any of that yet. Overall SC2 is not a bad game, everything seems to work, the game loaded smoothly, the game had no noticle lag, or slowdowns, but there is just nothing in it that simply makes it stand out. The game itself was fun to play through, and I did enjoy the limited story, and I may still by the sequel when it comes out (of course the ending had a cliff hanger for a sequel... what game doesn't do that no a days) yet this probably won't be a game I will touch all to often again now that I have beaten it. My suggestion is wait for the price to drop on this one if you simply want to see the continued storyline from the first, as the game offers very little of anything else to draw players away from other games.", "\"First there was Total Annihilation; superb, deep, endless strategy, constantly evolving, hundreds of different units, quick to learn hard to master. Then Supreme Commander and Forged alliance; made Total Annihilation (TA) larger with a better AI, beautiful graphics and much of the same elements that made TA great.  Then Supreme Commander 2; What the hell happened here? You took almost everything that made the first two stand alone and dominate and tossed it out the window. My only guess is you tried to dumb this game down to the likes of a C&C or a Craft game so it could appeal to the zerg boys.... probably thanks to Square's involvement. Really Chris Taylor how much did it cost to convince you to kill your baby?! Graphics went from sci-fi futuristic to cartoonish. Threw out the unique resource allocation and made it a click and buy system with a \"\"Research\"\" resource which is another Craft game move that sucks. Took out almost 60% of the different units in the game an dumbed base creation and defense down to arrow towers CRAFT again!. All the maps appear to be zerg/rush maps. Threw out the tier system... Sheesh I can go on and on but I won't. Bottom line: If you loved what made Total Annihilation and Supreme Commander unique and fun", "\"Okay, so yeah, it's pretty much like the first two in the basics: the three factions, the basic units (Some of the basic units are straight out of SupCom 1 and Forged Alliance), and one big war. On almost everything else it's completely revamped. Upgrading has been replaced with \"\"Researching\"\"", "I bought this to play my ps5 and not only thengames look great but movies too", "Waiting for the firmware update, then I can update to 5 stars", "\"Great TV with all up to date technology. From Dolby Vision and Atmos, HDR10 + etc... Perfect for gaming HDMI 2.1. I trust in Vizio products I bought a 60\"\" in 2012 and still running (2021).\"", "I purchased the 65 inch OLED 1 week ago!  The TV is beautiful!  Deep blacks & colors are great right out of the box!  You will have to do nothing to get this TV to look great.  I wish they had offered a 75 inch OLED but I am sure this will come!  Picture processing is good as well!  I recommend this TV to my friends!", "I picked this OLED Vizio for the intensely beautiful picture and I have not been disappointed. It's incredible for gaming on my PlayStation, and watching vivid shows.", "Problems turning OLED tv on. So I returned it and got another one.  The screen had a green tint to it so I returned it and got my money back. Plus the VRR didn\u2019t work.", "I love how skinny it is and how much cooler it runs, the picture is awesome!! Gorgeous unit !", "Wonderful image, oodles of features and an asking price that\u2019s within  reach of the average consumer, what more Can you ask for.", "I\u2019ve always liked Visio. My first 50\u201d had one backlight diode burn out after 7yrs heavy use. Replaced with 50\u201d nano Visio. I was happy with the upgrade. Figured I could get a 55\u201d within the space constraint I had. Got this one as open box. And WOW! The picture POPS of vibrancy and consistent brightness.", "I got this TV 3 weeks ago and so far I love it/ easy to operate/ easy to hook up other devices to it //Great TV", "Beautiful controller. I only changed the D-Pad and still calibrating but it is perfect.", "Glorious equipment for slaying all who oppose Spartan 117!", "I got this as a gift for my boyfriends birthday. I don\u2019t play Xbox and I\u2019ve never played halo but I was completely BLOWN AWAY by this controller. It feels amazing I think the way it was designed was incredible and totally worth the money. My bf LOVED it and made me consider becoming an Xbox gamer.", "This controller is amazing and beautiful I\u2019m glad to have it", "Love the elite series 2 controller and with a halo paintjob.... it's almost perfect. I kinda wish this would have included the updated series x/s share button but that's a minor complaint. With the latest xbox update, it's now able to quickly connect to 2 paired devices which is probably the best feature of the updated series x/s controllers so I'm happy with that. If you love Halo and were thinking about getting an elite controller, this is the one you want.", "Its similar to the regular elite it just feels lighter quality feels slightly better and it looks so hecking cool in person so many details that the pictures dont do it justice", "Performs like you expect the Elite Series 2 to do so, but with the added benefit of looking wicked. By far the coolest controller I\u2019ve owned. Hopefully it will keep nice and not develop rub marks from fingers.", "I had the series one which still works great, but decided to upgrade for the better paddles and internal battery. I am very pleased with this product not only because its Halo but it does feel like a substantial improvement over the previous generation. I'm still trash though...", "Great for Halo fanatic.  It weighs a lot more than your standard controller.  Bought as Christmas present for the Halo fanatic.  Splurged on the 2 year warranty just in case too.", "It\u2019s a great looking controller but without the console to match, it will be lonely. Very hard to pick up the items you want unless you want to pay ridiculous prices from scalpers who seem to get these items with ease. But still a great looking controller.", "Pretty simple game, great for younger games, way too many things to have to collect.", "Good game. kinda on the kid side of game, my kids like it.", "Game is great for parents to play with their kids.", "Very fun! As someone playing through sekiro, this was a nice pallet cleanser.", "I had an open mind when deciding to play this game and after clearing the first world, it just wasn't for me. Compared to Woolly World, this game was lacking in several departments; the music was repetitive, the skill level was far too low even for just the first world and the game doesn't reward you nearly as much as Woolly World did in terms of amiibo. I'd recommend this for die-hard Yoshi fans or kids age 5 through 9.", "The kids (6 and 3) love it. And I love that they can play together. My 3 year old doesn\u2019t know what she\u2019s doing but my 6 year old helps her. Yoshi\u2019s crafted world game is also fun for parents :)", "Simply amazing. My son and I are loving this game. It's so creative and well thought out.", "So much fun! For all ages! We have from age 4 to 34 who love to play.", "Bought this game for my son, but i enjoy playing it too.", "My family and I really enjoy using the Nintendo Switch and I must say this is by far one of the best games ever! Super cute yet challenging at times. There\u2019s a gum ball where you can insert coins and collect costumes. There\u2019s also a flip side to the game where you interact and catch little puppies. Just when you think you\u2019ve completely the level there\u2019s other mini challenges like a scavenger hunt. You should purchase this game you won\u2019t regret it!", "So far I've enjoyed playing SC2. there are a handful of differences between it and its predecessors both good and bad, The battles aren't as big as the ones from Supreme commander, but they are still brilliant, the new research is fun, as well as expanding buildings with tactical add on pieces even if they are minor one's, and the fact you can replace your ACU without permanently losing it now, and the new upgrades for the ACU, and units. Most of the cons I've found so far are, requiring steam, the smaller battlefields, and other minor problems which may be fixed eventually in updates. It lacks the feeling of the original game but its still fun to play I'd recommend to everyone that they try the demo on steam first before deciding. Overall I rate this 7 out of 10.", "First off, you need to have Steam installed on your computer. Thanks for the heads-up on this Square. You buy a hard copy of the game but then have to log in to Steam to download it from their servers.....really? Some people are showing a 9 hour wait time to be able to play. Again, really? Second, they destroyed the economy and the basic gameplay of the original game and its expansion. None of it even matters any more. Its just a zerg fest. Most people think its due to the console being added to this title and thereby attempting to expand their market. They broke what made the first game such a huge hit. Gone are the days of epic battles for my 3rd point. Maps are now 5kmx5km. WAY too small. Fourth, you can't save/load in skirmish play. Soooo, if you have to leave in the middle of a longer lasting game (not real sure how this will happen being that everything is so small-but want to give them the benefit of the doubt for future content added updates), too bad. Can't save. Fifth, the voice acting and story line for the campaign is just plain stupid. I guess I could go on but I'm sure I've expressed my opinion enough for folks to understand where I'm coming from. This is just insulting to people who have been really looking forward to this title. There was a reason the first game was as much of a success as it was. Well, Square Enix effectively threw that out the window and scrapped it all. Good job.", "I haven\u2019t used it yet but the unboxing was amazing. This is a really nice looking controller. It really feels right.", "This controller is GAWGEOUS!!!!! I love the cosmetic design of it, the rubberized grips, the back paddles and the accessories! It comes with it's own wireless charger, interchangeable analog thumb sticks, and D-pad. The design is reflective of Master Chiefs armor. I LOVE IT!!!!", "Amazing controller well worth the money solid feel and looks fantastic i want to buy a second one already", "It came broken\u2026. Stick drift on the right thumb stick right out of the box.", "Quality feel and looks awesome. Also arrived early on the 15th was shipped next day air.", "Exactly what I was looking for in a controller and the Halo fan in me loves the Halo theme on the controller", "Its good just sucks how the bumpers dont like to work sometimes its vrandnew", "Beautiful controller (just need the console to go with it). GameStop packaged it well and sent it super fast. It actually arrived prior to release date. Now I just need the console!", "Great controller that feels better than the standard ones. Paddles are useful in gameplay and the color scheme is great. You also recieve a code for the controller as an accessort in Halo Infinite.", "High quality packaging, nice dock and very long usb-c cord. Even the packaging was superb. Everything was secure to make sure nothing would be damaged in shipping. It is very true to the pictures and works great!", "I had no problems after mounting the TV and the set up was a breeze", "Had this TV for a month now and it's worth every penny. Don't listen to all the negative you've been hearing about Vizio. They have done a really good job with all their new high end televisions.", "I just bought this item and am so excited to watch sports and movies on it!", "Compared to the LG CX and Sony A8H the picture quality is way better than Sony's OLED.  THOSE Reviews online are biased and not accurate IMO.  Not a fan of smartcast yet over android TV. TV Has some firmware glitches.  Sound from TV speakers is OK not as nice as the Sony's; however this is a one Heck of An OLED with no black Crush....", "We were looking at one but am the type of people who wi only purchase an item like this when the one we have goes bad. Now the old one will go into the basement.", "The best \u201cAmerican product 100% costumer satisfacci\u00f3n  guaranteed", "I bought this tv and set it up at home but it was quite obvious to me that the feed I was watching on this tv in the store was optimized for the tv for better picture. At home however, it was grainy and looked like motion flip art like the one you draw and flip through. The tv was so hot I thought I bought a hp laptop.", "This was my wife\u2019s and my anniversary gift to each other. We regularly watch movies, and we are amazed at how the cinematographer\u2019s vision is articulated with this tv.", "I\u2019ve had this TV for about a month of movies and gaming, couldn\u2019t be happier.", "The image on the tv is fantastic and the sleek slim design gives it that pop aesthetic that the \u201cworld\u201d within the TVs borders is almost life-like to the touch.", "Great controller! Only wish I had the halo Xbox to go with it", "This is the elite series 2 but they did an excellent job with the halo theme. The best controller with now an awesome new paint job.", "Fun game, really nice visuals. It's an easier platform so more people can enjoy it, but seasoned gamers will like the collectables available, which give replay value to the game and a bit more challenge.", "One of must fun Nintendo games I've played in a long time.", "Nintendo does it again with sweet crisp graphics and my kids love yoshi", "If you enjoyed Wooly World, you'll love Crafted world. This game is a great addition to the Yoshi series and adds fun mechanics unique to this game. It does have a 2 player mode and would be fun to play with a less experienced game. Overall presentation is great, control is simple, and platforming is fun. Nintendo game prices hardly comes down, so if price is a factor, pre-owned with PowerUp Rewards discount really helps mitigate the cost, and maybe invest those points. Either way, top notch Yoshi game and a must play for Yoshi fans.", "Great fun, reminds me of Yoshi's World from when I was a kid", "Love the extras each level has. Not a fan of yoshi smash level but in general love the game!!", "This is a proper modern evolution of the Yoshi formula.  Giving you access to the fore- and background when throwing eggs adds an extra dimension of exploration and the collectibles are definitely worth getting.  The flower requirement to progress to new areas is rarely difficult to fulfill, but it emphasizes the collection aspect in a game that gives you a lot of tools to do so and is chock-full of stuff to see.  If you've ever loved playing a platformer, you need to play this game.", "A few weeks before the game came out I downloaded the demo just to see if my six year old son was going to play it and he and when the game came out I got it for his bday and he have not put it down", "Great game! Side scrolling puzzle solver better than I anticipated and can\u2019t put it down. There is a gum ball machine for different costumes ADDICTING haha", "Yoshi\u2019s Crafted World is an amazing game! It is beautifully designed and appropriately challenging. The ability to play two players is also great as my wife and I like to game together. I would definitely recommend it to anyone who owns a switch, especially those who want to play some couch co-op.", "Bought this for a Christmas Gift for my husband and myself. ", "1 year ago", "Got this in time to have it up on the wall Christmas day. The family loved it!", "The app sometimes glitches green and I need to power cycle yhr TV to work right. Also, I can't seem to download other apps that seems to be essential. Example Crunchyroll.", "Bought the TV right before Christmas - just amazing clarity and color", "Excellent picture quality and very easy to set up!", "\"About 10 years ago I purchased my first Vizio 54\"\" just months after its release.  It held up well until one day it just didnt turn on.  Lights on", " when clearly the Amplifier is sending signal.  Looking forward to a future firmware to make this TV absolutely perfect!\"", "Very nice picture, nice sound, but, the OLED effect can cause severe headaches in certain people.  There should be some form of medical warning and available solutions.", "I purchased this 3 weeks ago and I love the picture quality. After contacting the boae surround  system its like you your in the movies! Great job vizio.", "I just bought this TV, did not plan on spending this much. This TV is worth every penny. The color is so vivid. Model is sleek and so much thinner than LED.", "I bought this one month ago and I'm glad I did this model.", "My son loves this game. Like Super Smash Bros with Kung Fu Panda characters.", "I got the game through PS Plus, and I was skeptical at first. However, after playing it with my friends for a little bit, it was some of the most fun I'd had playing a game ever. It's no Citizen Kane, but it does its job as a fun, simple fighting game well.", "We Bridges this for Christmas for my nephew everyone had a good time playing", "I bought this game for my grandson and he absolutely no loves this game...", "I bought this game for my daughter because she\u2019s very competitive. We thought it was family friendly but it\u2019s very hard to learn different moves. I had a hard time playing it also and I\u2019m good at playing games.  It\u2019s not the easiest game to play and in my opinion its not for kids either.", "My 5 ear old loves this game.  Controls are simple and each fight location has their own challenges.", "This game deserves 10 stars but I was only allowed to give 5. It is definitely better than smash. I think it should win game of the year.", "I sew the trailer and it was ok not the best and characters were alright. I heard that there was a lag in the game  but over all i give it 2 stars", "another super smash clone but horrible one at that", "i wouldn't buy this game if it was free. i dislike the game's audio and lasting appeal. so bad my children couldn't even bear it", "I have a LG OLED TV and I wish I waited for this TV. I'm very pleased. I hope the update will fix the power issues. I have to turn on multiple time before the picture would stay on.", "I\u2019ve had my VIZIO 55\u201d OLED for about 3 weeks. Clear picture from any place in the room. Color is so much better than the TV I replaced which was a VIZIO LED 55\u201d TV.", "Other than the Smartcast being a bit buggy, the picture is spot on!", "i have been facing multiple issues from the time i got this TV.", "Have had it for two weeks, perfect picture and great design. Loving it so far, great price for all the features and crystal clear picture. Just wish it had a HBO Max app preloaded in the main menu, but very easy to cast from my smart phone or iPad to the TV", "Vizio has stepped up their game, going head to head with the LG and Samsung on this one.", "Finally, someone has made an OLED TV that I could afford!", "Well worth the price. I was sold on the fact that you can see definition anytime there is a night scene and it\u2019s not just blurry.", "The colors are incredibly vivid, even with a standard HD signal. I also love that it has screen mirroring for my iPhone along with a bunch of other viewing options.", "Just had this installed yesterday the BestBuy's Geek Squad. Also installed a new sound bar. The picture is amazing and we are looking forward to seeing many of our favorite shows in a whole new light. The remote will take getting used to, but we'll learn. I wish there was an app for PBS installed. We'll have to see it by AirPlay.", "When the game trailer is a rip off of super smash bros, you know its going to flop. the chrachter selection is poor and the gameplay is choppy. I need my 20$ back...", "I really enjoy playing this game. It is fun and enjoyable for all ages.", "The game is cute but hasn\u2019t held my 6-year-old son\u2019s attention. He has beat Donkey Kong Country, Super Mario Odyssey, and SupernMario Deluxe. He only played a couple of levels of Yoshi and hasn\u2019t went back to it, over a week later.", "This game is similar to Yoshi's Woolly World.  The levels are made of things like cardboard, ribbon, straws, and construction paper.  Each level can be played in a normal mode or a reverse mode.  There are cute costumes you can unlock using coins that you collect throughout the levels.  It's a perfect game for parents to play with their kids.", "Got this for my 2 sons they love & have a lot of fun playing it together", "The game is wonderful to play through. Fun levels, extras, cute outfits, and even an easy mode for younger players. Just dont try to get everything, or you wont have a good time.", "This game is super fun and adorable. ", "This seems more like a kids game but everyone will enjoy. It\u2019s very entertaining but not very stressful. It looks so cheerful and colorful. And who doesn\u2019t like Yoshi with wings.", "Fun to play while letting those who want a challenge to be able to spend time to complete the game", "While it's easy enough for children to play, that doesn't take away from how fun it is for the whole family. Levels have a decent amount of replayability, and it's decently challenging in a casual way.  Would recommend to anyone.", "Fun game for kids and adults. More relaxed then Mario and very kid friendly!!", "Bought this on Black Friday after reviewing 4-5 other LED TV's.  I'm so glad that I did.  The OLED experience is simply stunning.  My previous TV was a Panasonic plasma which I held onto as long as I could because I didn't want to give up those deep blacks and contrast.  This TV has such great contrast - for example when you watch a dark scene with isolated bright spots (like lamps, office windows, etc) it will blow you away how bright those spots are against the deep black surroundings.  The panel is made by LG and you can get the same performance for a lot less money.", "I bought this a couple of weeks ago.  Easy to install and set up.  Fantastic picture!  We love the smart cast and look forward to our elderly relatives coming over.  We can FaceTime our loved ones and airplay it on the TV and everyone will be able to see.", "I love the tv but am on the fence on returning it or not. Fix everything people are complaining about. Also 1440p needs to be 120hz. Theres no reason why it shouldn't be. Get it together please", "I have a long time history of purchasing Vizio Television and each time of purchase I have upgraded having said that Vizio has shifted in the best way. Awesomeness!!", "\"I had a Vizio 65\"\" LED TV that I thought was still pretty good but I was intrigued by OLED. The set I bought looked great in the store and even better at home. And that's on everything", "Great picture quality and very easy to set up. Would highly recommend.", "This is the best tv I've ever owned! The picture quality is amazing! I don't have enough words to express how happy I am with this TV.", "Bought the oled Visio over the Samsung q series. Very happy except sometimes the input switches from one to another happen 2 times", "I set this TV up less than a month ago and still going through all the apps and everything it can do.", "I really want to love this TV. The picture quality is amazing. The smart cast interface is solid, and it's all packeged under an beatable price. ", " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "3", "Really fun 2 player game that seems well balanced. It looks great and feels rewarding to go collect stuff. It's really nice that the game seems to avoid many the co-op deaths that I'm used to in new super mario bros u deluxe and yoshis woolly world (we jump or egg each other and fall to our deaths).", "Its a deep 2D game with an interesting spin on yoshi island. Nintendo always amazes me with the great graphics with thier titles. Gameplay is smooth and overall fun is better with my wife.", "Simple, super fun platformer that\u2019s perfect for kids or couples to play!", "Great game for small children and entertaining for adults as well", "Great games for kids and parents to play together.", "Amazing game. Graphics are too cool. They're made out of cardboard, bottles, etc and the two player is fantastic. Highly recommend.", "I bought this game for my 8 yr old autistic daughter and she absolutely loves this game. It is her first video game bought soley for her and she just took right to it with no issues at all. For other games she has played it has been difficult for her to grasp what goes on on the screen and how that associates with what she is doing on the controller such as constantly running into walls on mario kart because it was difficult to for her to figure out how to steer but no such issues with this game and she absolutely loves it.", "It's sooo cute!! The levels are adorable but still challenging enough if you want to get 100%. My new go-to game for destressing~ <3", "This game is super fun and brings out the kid in me. Each level has multiple challenges, making the game seem like neverending fun. The voices are adorable and the choices are plentiful. Great game, highly recommended.", "It\u2019s a really relaxed game that you can pick up and play anytime. The graphics are amazing and unique. Overall, I\u2019d definitely recommend this game for anyone who is a Yoshi fan.", "Me and my 5 year old really enjoy this game, if you enjoy the Mario games this is one you can add to that list.", "An incredibly fun sequel to Yoshi's Woolly World.  Amazing graphics!", "The game is fun, and the graphics look great, some levels are hard for a children\u2019s game, but over the game is great.", "This game is a crafted masterpiece! The level of detail is gorgeous. Gameplay is a throwback to the classics while maintaining a modern feel. The two player mode is unique and available right at the start. The game is great for all ages and incredible for a good time or a family game night. I highly recommend this game!", "Entertaining game for all ages.  The levels are relatively easy to pass but become challenging if you are the type of gamer who goes for 100% completion.  The colorful graphics also help add to the fun nature of the game.", "Great game for me and my kids ages 6, 4 and 1. They can actually play it on their own and love it.", "Cute game. Just as fun if not more than Wooly World was.", "\"Whimsical, light-hearted platformer. Densely packed stages filled with collectibles, secrets, and uniquely beautiful art designs.  Tons of content adds replay value to keep you playing long after finishing the six to eight hour \"\"main\"\" adventure. Definitely a worthwhile purchase", "If you like the gameplay of Yoshi\u2019s Island, the art style of Yoshi\u2019s Woolly World, then Yoshi\u2019s Crafted World is the gamefor you... and the family!", "Sort of short, aimed more towards kids...but if you love Yoshi and want something to sit back before bed and relax and play, this is your game.  So charming, so chill, so Yoshi.", "Just bought tv a while back moved to the new house and now it won't turn on", "This TV replaced a smaller, older VIZIO I bought back in 2011/12. Was not looking for an OLED, but went with it since the price was so good. I could not be happier. The picture is GREAT. Everything we watch has looked amazing on it.", "The picture is exceptionally light and bright where it needs to be but the infinite dark reminds you it is an Oled, this tv IS IN a class of it's own!", "About my TV last month I love it love everything about it", "I am pleased with the quality of this unit. Best tv I have ever owned. Oled is off the charts, the colors pop and deep rich blacks. I'm creeping up on retirement and I didn't want to buy a quality tv on a fixed budget.", "The picture and the Vizio surround surround speakers are excellent.  Response to the remote for adjusting sound level is sluggish and remote has few features compared to other systems.", "For the picture this has been great for the price. The reason I give it 3 stars though is because I am very critical of when the operating system is not \u201csnappy\u201d.  For a modern TV, losing of apps and maneuvering through the UI should be quick. While this is better than my old Samsung TV OS, I still expected it to be quicker.   I also hate h to r banner style at the top. My first choice should be to pick an App rather than some curated selection when so turn on the TV. I haven\u2019t been able to find a feature to turn it off.", "It's better quality than I imagined! Amazing TV!", "So far I love it! The new tech for video games is awesome!", "This is my first OLED tv and I am loving it. I\u2019ve been using Vizio TVs for years and have never disappointed me. This one is super fast and there\u2019s no lag when selecting through the apps. The lag is something I hated on my previous Vizio TVs bu that\u2019s gone now. Now just bring HBO Max! One thing I don\u2019t like and hope that it\u2019s fixed in a future software update is that currently, 4K/120hz HDMI ports don\u2019t work on the PS5. Fix that and this TV will be perfect.", "It's comfortable and works great. My only frustration is that it doesn't seem to allow button remapping. I can set it up on the switch, and the buttons are changed on the switch paddles, but this controller doesn't allow the changes. Not sure if this is a switch issue or the controller. Otherwise it is great", "[This review was collected as part of a promotion.] This controller was bought for the intent to enhance the Switch Experience, and to add some more skill to certain games. The case did arrive slightly damaged, the inside plastic was torn. but the product remained in perfect condition. It is light, but doesn't mean it isn't quality. It brought a different set of skills to games that required more then a small handheld joystick. A little throwback to the classic design of a controller.", "[This review was collected as part of a promotion.] Received to try out on our gaming system and definitely enjoy it way better then the cord controller. Having wireless is more convient as you can move better and no worries about pulling a cord out of the system. The Over all grip is very comfortable and nice fitting. Not only is it convient, comfortable but also comes designed with Mario which is many favorites of alot of people. Alot of my family complement us on our new controller for the design and now wants one or something similar.", "[This review was collected as part of a promotion.] This controller was so eay to use, and dits just right in my hand. I love the colors it comes in and connects very easily.", "[This review was collected as part of a promotion.] I like having a controller to hold onto with the switch and this one gets the job done.  Set up was easy.  The only downside is no rumble, but the added buttons make up for it.  The retro mario theme is an added bonus and loved by husband and son alike.", "[This review was collected as part of a promotion.] The design on this remote is so cool. The batteries are the only drawback but that can be remedied by just buying rechargeable batteries, which I would highly recommend.", "[This review was collected as part of a promotion.] This is a great controller for the Nintendo switch. It has a great Mario design that my kids loved! It was easy to set up and it being wireless was even better. It seems to be very durable as well. And good thing because my kids are super rough on things aspect controllers. I will be purchasing a second one, so both my kids have them to play with.", "[This review was collected as part of a promotion.] This is a review for the Nintendo Switch wireless game controller. ", "[This review was collected as part of a promotion.] The pros: *feels almost identical to the official Nintendo pro controller.  ", "[This review was collected as part of a promotion.] I have been using this controller for my Nintendo Switch for a couple of weeks now and am very happy with the overall performance of it! It is very comfortable to hold and the buttons are set up perfectly.  It being a Bluetooth Wireless Controller is a huge plus! The Super Mario Bros. design is my favorite though! It's very attractive and I've received so many compliments on it!", "It\u2019s not entry level friendly but can be very rewarding.. I struggled at first, boy it was challenging but with lots of practice and doing tutorials/training I managed to not come in 12th or 10th place.. I now place at about 6th or 4th.. Boy does not wining  a race hurt but it\u2019s the grind and constant improvement.. Could lower the difficult and turn assist on but that would take the fun out of the challenge..I then went to YouTube to see pro gamers struggling or flipping cars as well so that made me feel a little better too..", "If your looking for a real rally experience buy Dirt. The handling on this game is cartoonish. You cut and you get penalties. Total garbage.", "Very detailed graphics, challenging driving, and numerous course selections. A lot of fun for multiplayer. The only semi con is that it is difficult to select changes to your driving car... but overall a must have.", "Simply gorgous to look at and play.  It says pure simulator on the box for a reason.  If you go in expecting anything less you will get plastasized.", "Good game, need to spend some more time playing it", "This is a good one. One of the best driving games I've played. The career mode is a bit of a pain but still pretty cool.", "The WRC 8 FIA World Rally Championship is a great game to play. The cars are awesome and the scenery is breathtaking. There's so much to do! I really have lots of fun playing it. Much improvement over the WRC 7 World Rally Championship. They did a really nice job in putting this game together.", "Great game. Easy to pick up and play, at home or on the go.", "ONE OF THE ABSOLUTE BEST IN THE YOSHI FRANCHISE, WELL WORTH THE WAIT.", "Cant go wrong with Yoshi. Cute, detailed and fun. You get what you see with this game. I love it.", "Super fun game that can be as easy or as challenging as you want it to be, depending on if your thing is to 100% a game or not. Another quality release on the Switch, highly recommended.", "Not a heck of a lot wrong with this game. I like to say this is the epitome of Weaponized Cuteness. The designers did a fantastic job with level design. It feels like they actually built every level in the game with cardboard and construction paper in reality and then put it into the game, and they stick with that through the entire game. The controls are tight and the yoshis are as adorable as ever.", "Very cute! And the right amount of challenges. Great game for all ages", "We love Yoshi!", "Excellent game especially for kids and new gamers looking to learn, but still complicated and fun enough for an experienced vet.", "Really boring and lackluster. Fun platforming but not much else. Good for kids, not for adults.", "Cute game I can play with the family. I love how interactive it is. You can knock over things in the foreground and background.", "This tv has been fantastic and especially since we recently purchased a 5.1 Dolby surround system. Mandalorian looks, and sounds amazing now after getting this tv. ", "Super impressed with the clarity and color of the picture.", "Great picture and easy to use enjoy it very much!!", "Bought for picture quality and I am not disappointed. It is fabulous. I am actually surprised at how wonderful the display is in my home. Very satisfied and would buy again. If it goes on sale anytime soon I will buy another one for another room in my home.", "I am really happy with my purchase. Visio knocked it out of the park with this one.", "It's a great tv. This is my first oled and it works great with my xbox series x. My only issue is that it keeps putting itself back on warm color temp very often.", "Bought this TV a couple of weeks ago to replace a five year old Visio.  Our previous TV was top of the line back then.(240 refresh rate, etc.)  This new TV is fantastic!  What a picture!  Well worth it.", "I bought the tv about a month ago and have never had as many problems with a tv in my life. Vizio has a reputable name so of course I wanted to give the oled a try. Day one when I got the tv home it wouldn\u2019t power up. So after plugging the tv up and unplugging it a few times I got it to power up. The oled does have a beautiful picture but now every morning when I want to turn on the tv it won\u2019t power up again. I have to unplug the tv for 30 minutes EVERY morning for it to come on now. While I\u2019m watching tv the sound just goes away at times and I have to reboot the tv sometimes 3 times before the sound comes back on. At times the hdmi won\u2019t recognize it has the cable or game system connected so I have to turn it off and on again when that happens. This is just unacceptable from vizio. I hear there will be firmware updates but how long will that take?  I don\u2019t know what to do should I return the tv and try another vizio oled or just stay clear of vizio because this is the beat quality they can produce right now", "I bought this TV several weeks ago and I couldn't be happier. The difference between OLED and anything else is astonishing. Highly recommended!", "I\u2019m having multiple issues with it. Tried to set it up with my Xbox X series too play in 4K resolution but the screen goes black. When I did change some settings to get the TV too play my Xbox in 4K it wouldn\u2019t turn back on after I had turned it off from playing. I had to physically unplug and plug it back into the wall too got it too come back on.", "[This review was collected as part of a promotion.] This controller works great with our Nintendo Switch! I love the fact that it is wireless and vibrates while we play. It is also easy to use and handle! We are a family of 4 so I will be buying 3 more of these soon! Highly recommend for anyone who has a Nintendo Switch!", "[This review was collected as part of a promotion.] I love the fact that it is wireless and I don't have to deal with wires being all tangled up. It's easy to hold, perfect size and weight for my hands. Very pleased with it.", "[This review was collected as part of a promotion.] The Enhanced Wireless Controller for Nintendo Switch is easy to set up and use.  I love the Mario on it.", "[This review was collected as part of a promotion.] Power A Enchanted Wireless Controller for Nintendo Switch works great! Love this item, it is easy to hold, and very easy to use and connect to console. Seems like it is very sturdy as well.", "[This review was collected as part of a promotion.] This item came in no time after ordering it which was a plus. It was easy to set up with the game system my boys were super excited and love it.. Now I\u2019m forced to buy another one so both of them can play together.", "[This review was collected as part of a promotion.] I just got the Enhanced Wireless Controller for Nintendo Switch and I must say I was surprised with the quality of it . It definitely makes playing so much easier especially when it comes to certain games.", "[This review was collected as part of a promotion.] This is a wonderful remote it\u2019s make playing the Nintendo switch so much easier. I love the remote it fits perfect in my hand as well my child\u2019s hand! This is so easy to use and much more better for the switch! I highly recommend this remote for anybody that has a Nintendo switch!", "[This review was collected as part of a promotion.] This works perfectly and has alot of extra controls and features.", "[This review was collected as part of a promotion.] I love this remote. It is easy to connect and use. The remote itself is well made and comfortable to hold. The fact that it is wireless is great and makes gaming more enjoyable. It does take batteries, but battery life is long. It is a perfect remote for any gamer.", "[This review was collected as part of a promotion.] I received this controller to test out and review. I suprised my 12 year old with it and he just loved it! He loves that it's wireless. He said it was so cool that he wanted to get his friend one for Christmas! So this is definitely kid approved. Thank you for this opportunity you made one kid very happy!", "This game is perfect for my first grader.  She can play alone, or we can add a Yoshi for a level and I can play with her.", "Awesome game.  Amateur to intermediate skill level with a few hard levels but once you get to the end you\u2019ll play like a pro.", "This game is so cute, easy and mellow. This game can be played with up to two players. My husband and I took turns playing with our 5yr old, he loved it!", "Fun and easy. Though the sound track sounds very uninspired. If only Crafted worlds soundtrack could take note from Yoshi Story.", "It\u2019s a real fun and easy game to play. I\u2019m not sure if there\u2019s a way to do increase difficulty since it only comes with two modes and I play classic. Regardless, the battles are fun, and if you want a game where you don\u2019t have to think way to hard this is it. I love the graphics and I love the creativity that goes into it.", "A charming easy to play title that's perfect for young  kids.", "Overall great game. Interesting and has different elements than other Yoshi games to date. My son absolutely loves it.", "They should know that it\u2019s fun & cute & for all ages.", "Beautifully developed with great music. It appears as only for kids but don\u2019t be fooled. This game has enough puzzles and the replay value is definatley there!", "At first glance you would think this is a kid game and has no entertainment value for adults. I will tell you first hand, that is not the case with this game. The visuals are stunning and there is plenty of action packed platforming for everyone.", "Where to start... do not buy this tv for a next gen console. You have to manually change the input setting from HDMI AUTO to HDMI 2.1 for the Xbox to recognize the 4K @ 120hz. If that wasn\u2019t annoying enough the specs said ALLM, HDR, and VRR. When you go to the TV info screen says no to HDR and VRR. Then proceeded to give the TV another chance by using the apps it offers. What a joke! The screen went green and kept flashing the picture. I tried five to six apps. All the same outcome. Finally on day three of owning it... it quit showing the picture for the Xbox. To confirm it wasn\u2019t the Xbox Series X I switched back to my Samsung Q70R TV which has a better picture and does everything, but 4K @ 120hz abs is still to this day running fine. Needless to say I shouldn\u2019t have bought a VIZIO in the first place like my gut told me. I wasted my gas and time on this TV.", "I bought this almost two weeks ago and next to my brothers LG Oled it holds its own for the price. As a pure Oled screen this is the way to go but It\u2019s not perfect which is to be expected for the price as a budget Oled. It\u2019s native apps that don\u2019t support the tv\u2019s high resolution will have noticeable pixels and it\u2019s already showing signs of Oled burn in if you keep the same image on for more than one minute, you should allow rest mode after 15 sec of inactivity, I\u2019m serious! Just be gentle with the tv and don\u2019t forget to turn it off and you will get an amazing tv.", "No other brand Tv can compete with the quality and price of this TV!", "For those having trouble gaming in 120hz, you have to change the settings to 2.1 on your hdmi 2. I almost didn't buy because the reviews on gaming saying it wouldn't do 120hz at 4k but it absolutely will and the Xbox verified that. Just change your settings to 2.1. The best picture quality on any TV I've ever owned. Truly amazing!", "I've been looking at the new OLED model tvs for a while and I'm so glad I finally purchased my very own OLED 4K tv.  The picture is incredible even if what you're watching isn't in High Def.  High def channels and movies look so good but the 4K programming is insanely sharp. It looks as if you're actually there", "This was a great purchase. Perfect blacks and beautiful color reproduction. I am impressed with the build quality and the attention to detailed such as the the wiring placement. Also the apps that\u2019s included are amazing. It also has Apple TV!! The only thing missing is a voice search on the remote. Other than that great purchase and extremely happy.", "So far so good.  Enjoying the difference that OLED offers.", "Just picked this TV up a couple weeks ago did a lot of research thanks to YouTube and saw that this was the TV to get for gaming A++", "120hrz, VRR, VRR+HDR, black screen but at 60htz it looks great! Vizio please fix.", "Excellent TV! Beautiful.picture. Easy to use, with enough extras .", "[This review was collected as part of a promotion.] This is a great addition to our Nintendo Switch. Easy to set up and easy to use. I highly recommend!!", "[This review was collected as part of a promotion.] I got this for my son and grandson who play the switch together. My son is an old school Nintendo fan so when I saw this with the old graphics I got it immediately. "], "data": [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 47, 2, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "recommended_review": {"label": ["yes: I recommend this product", "2", "No: I don\u2019t recommend this product", "4", "5", "4.2727", "4.6556", " i say it should just have a completely different name slapped onto it. Then i would of not had any quarrels with it", "11 months ago", "1 year ago", " it's a rather unfortunate decision not only because you're excluding gamers but also because of potential happenstance scenarios. Steam goes down? Sorry", " you will hate and loath this game as I did. However if you owned any Craft game or C&C and thought the above mention games were too complex", " which really adds more hassle to the game", " but no one is home", "1", " not just 4K streams and DVD's.\"", " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", " especially if you plan to play the often chaotic but always entertaining simultaneous two player co-op mode.\"", "0", "4.875"], "data": [372, 1, 92, 3, 4, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "verifed_purchaser": {"label": ["yes: I recommend this product", "4.2727", "Verified Purchaser", "4.6993", "4.6556", "363", "2390", " because i wouldn't be expecting something so different than what i knew. Now i own both of the \"\"previous\"\" games and they are both excellent", "5", "3", " you're out of luck. A few years down the road and something else happens(such as one of the companies going out of the business or whatnot) and you can't go back to play it for old times sake? Again", " strategic", " but also adds a new era of customization because instead of just going up levels 1", " type of.  So in the spirit of the shopping season i jumped at a another brand new Vizio product", " and to get 4K", "3 years ago", "32"], "data": [244, 6, 222, 1, 2, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "helpful_count": {"label": ["0", "Verified Purchaser", "363", "1", "306", "2390", "228881042", "2", "3", "228691813", "4", "127332001", "228459804", "228397838", "28", "5", "6", " and so when i found out about this \"\"sequel\"\" i ran out and bought it with out much looking into it", "127185338", "4.2727", "227806298", "227721000", "127127185", " out of luck. Move to an area with limited connectivity? Same thing. I wish developers would stop going with this route", " and epic for you", " 2", " this OLED 55\"\".  ", "7", "126525025", " I have to manually switch the input from Auto to 1.4", "226910861", "226824012", "122140626", "126297513", "126279514", "226623767"], "data": [318, 77, 6, 47, 1, 2, 1, 11, 5, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "not_helpful_count": {"label": ["0", "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "229167959", "228991912", "1", "194520876", "127408484", "2a736f40-6b79-5c49-b539-5eae6b06fe94", "2", "7", "4", "8", "6", "5", "865fb1f7-9fbc-5ec8-89fb-868f67495019", "18", "41", "3", "0a5b2e83-abcb-5537-a109-15a4b8c4f86d", "228476168", "c0fef563-2deb-5c01-acc6-9db6c6fa8368", "15bc27e2-a5ad-5a18-b47e-5f4cd100907c", "11", " i knew it had a different maker but i figured how bad could they have possibly made it... i mean it's Square Enix! Now don't get me wrong it is a good game", "4a650967-e873-5e06-a3d0-81e9530e5a78", "363", "c35409b8-9e25-5996-88e8-e3f1aa9e8065", "3adeb77d-d51a-53aa-9aa2-3908b384030d", "16", "9", " as it's very short-sighted. The graphics are significantly worse than the first one", " then give Supreme Commander 2 a try!  You should feel right at home in this slop show.\"", " 3", "227425437", "227210950", "15", "33722e22-472c-5b56-a877-599999791231", " then back to 2.1. This is very frustrating. ", "02481162-152d-5b33-ba5a-5136b0686613", "8a3401f7-4865-5764-904a-6f8cb7b42edd", "4.875", "0b338d34-27a3-56a0-9787-1d3b437f1ba9", "1962b25e-379f-515a-a961-26950bbd081d", "126289526", "95bf4328-d8c9-52b1-9074-0e246e0f9fe2", "226749057", "6e496bf1-e93c-58ac-8889-a3a9b9b69afa"], "data": [343, 77, 1, 1, 16, 1, 1, 1, 7, 2, 4, 2, 5, 3, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "reviewed_at": {"label": ["10 months ago", "fa660933-1130-5c66-9010-24d641f70bc7", "16e925e3-1e59-537e-aa67-1675b613d351", "7f69bc6a-f89c-53d4-a52a-39a8b8512c54", "16 hours ago", "1 day ago", "7 days ago", "9 days ago", "10 days ago", "17 days ago", "18 days ago", "2 years ago", "7ed32763-a3be-57d4-a35e-a166b90de2ee", "16/01/2022 16:17:57", "11 months ago", "21 days ago", "1 month ago", "16/01/2022 16:17:58", "cec7afe6-497f-5ac5-a9c8-b1ca19d4a4b0", "7 years ago", "9 years ago", "10 years ago", "11 years ago", " but i was expecting to buy SC2... Not SC2 revamped... i couldn't just jump into it", "16/01/2022 16:17:59", "228309057", "12 months ago", "16/01/2022 16:18:00", "227799226", "1 year ago", " even on the highest settings. There are ONLY small maps", "No: I don\u2019t recommend this product", " and Experimental", "2 months ago", "2903b4fb-38c1-5b18-86e4-223040292dc1", "3 years ago", "4 years ago", "5 years ago", "9aefa298-d085-5f90-b930-00b20da59e72", "16/01/2022 16:18:03", "0", "16/01/2022 16:18:04", "32", "16/01/2022 16:18:05", "512efb41-f0b9-5a8b-ac21-e6f988f04a2d", "4b63751b-d4c0-5c5f-9138-59a473a7daaa"], "data": [11, 78, 1, 1, 1, 1, 2, 1, 2, 1, 1, 136, 1, 2, 30, 2, 58, 3, 1, 1, 2, 3, 12, 1, 1, 1, 2, 3, 1, 83, 1, 1, 1, 13, 1, 22, 3, 2, 1, 2, 2, 2, 1, 3, 1, 1]}, "rating": {"label": ["5", "4", "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "16/01/2022 16:17:56", "3", "16/01/2022 16:17:57", "2", "1", "16/01/2022 16:17:58", " i had to learn the new feel to the game. In SC2 you now get to your good units by having to research most of them", "538c1919-dad5-54d8-89b1-619b8c7656e3", " and no larger maps to choose from. In the first version you had a large selection of maps", " you can have multiple branches of different customizations", "16/01/2022 16:18:02", "16/01/2022 16:18:03", "1 year ago", "2 years ago", "122158646", "16/01/2022 16:18:05"], "data": [285, 62, 95, 2, 14, 2, 9, 19, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]}, "average_rating": {"label": ["4.2727", "ef72459e-8f5c-57dc-af42-0127d2903498", "4.6993", "4.6556", "3.4091", " and experimental units are really not that great", "16/01/2022 16:17:59", "16/01/2022 16:18:00", " in SupCom2 there are around 10-15", "0", " depending on your favored style of play. You can even simply upgrade what units you have instead of the old \"\"send oldies to suicide to make room for the new guys\"\" strategy. Actually", "3.3125", "5", "4", "4.875", "4.0345"], "data": [122, 103, 81, 131, 18, 1, 1, 1, 1, 1, 1, 11, 1, 1, 19, 7]}, "reviews_count": {"label": ["363", "4.6556", "306", "2390", "22", " yea they are all based of the old games models but i think that most kinda suck comparatively... like the experimental units", " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "0", " it is BETTER to keep the oldies instead of suiciding them", "32", "4.2727", "16/01/2022 16:18:04", "29"], "data": [122, 105, 81, 131, 18, 1, 1, 1, 1, 30, 1, 1, 7]}, "comment_id": {"label": ["229196240", "229179703", "229174444", "95223899", "229131414", "229087196", "229080154", "229044038", "228960695", "198688597", "198672375", "196827630", "196827194", "196230804", "195216162", "195708350", "194329916", "194187129", "127432481", "127430959", "127420280", "127414142", "127414207", "127411122", "127409004", "127407425", "127405746", "228929144", "228928290", "228863224", "228776856", "228759010", "228750584", "228749581", "228724687", "228722869", "194027229", "194017047", "192503208", "192137369", "192087597", "192080051", "192046520", "192045625", "192042914", "192041796", "127405362", "127405229", "127404696", "127396175", "127396143", "127359093", "127348302", "127348104", "127347414", "228719614", "127345863", "228712408", "228703343", "228692495", "228632763", "228622725", "228576384", "228545194", "228523449", "192040841", "192039616", "192038437", "191969147", "191868187", "191531039", "191517192", "191510980", "191473354", "191467877", "127345574", "127333838", "127321759", "127320268", "127319595", "127299640", "127295961", "127293457", "127293081", "228523275", "228509090", "228499139", "228478134", "228397787", "228341387", "228321620", "191464723", "191463669", "191462968", "191459315", "191448343", "191443448", "191440654", "191439900", "191439828", "191439957", "127291762", "127286343", "127272761", "127262343", "127260250", "127259475", "127254841", "127250995", "127250993", "127250112", "38246272", "23501684", "23367706", "19236943", "19088941", "19030618", "15250428", "15250438", "15250426", " for so called \"\"game breakers\"\" as they were know for in the old games", "127238242", "127234219", "127230795", "127187464", "127183266", "127179492", "127178055", "127177220", "127161458", "228297521", "228244888", "228226690", "228181572", "228165736", "228114419", "228085186", "228057468", "227938540", "191439701", "191439022", "191438590", "191438462", "191438175", "191437894", "191437728", "191435985", "191434602", "191433776", "127153348", "127152461", "127151155", "127149546", "127147505", "127144002", "127140095", "127137390", "127131702", "127130838", "227875021", "227791669", "227778090", "227771273", "227732223", "227730979", "227715331", "191433462", "191432612", "191432155", "191353081", "191322300", "191322155", "191321523", "191169574", "190972289", "190971178", "127127997", "127125697", "127123561", "127120887", "127117350", "127029556", "127014676", "127012426", "126806434", "15250427", "15250430", "15250425", "15250424", "15250437", " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "15250432", "15250436", "11 years ago", " because the longer they stay on the battlefield", "227695298", "227689648", "227681843", "227672104", "227658242", "227639598", "227614951", "227582245", "227560725", "227547589", "190970117", "190958407", "190900156", "190899558", "190826055", "190820482", "190815305", "190807964", "190805061", "190803084", "126755575", "126755116", "126754711", "126754570", "126746667", "126742656", "126737441", "126736040", "126678115", "126641084", "15250434", "15250431", "190795136", "190786135", "190783552", "190766977", "190764517", "190762148", "190763953", "190763710", "190763007", "190761169", "227514155", "227512948", "227493289", "227489183", "227489075", "227469318", "227466484", "227455329", "227437332", "227433603", "190758968", "190758657", "126629986", "126619345", "126599299", "126597316", "126588300", "126586642", "126576266", "126565334", "126559156", "126552237", "227368178", "227336919", "227333306", "227330788", "227308429", "227300137", "227299158", "227277590", "227277469", "160658457", "157919507", "123364925", "118294186", "116746823", "116634709", "109093076", "108515660", "75707639", "227271113", "227216898", "227212033", "227210524", "227187244", "227186461", "227165525", "227162981", "227149188", "74341808", "126539613", "126536245", "126530828", "126528004", "126526950", "126518100", "126506130", "126498760", "126495952", "227144955", "227115495", "227099195", "227073234", "363", "226961718", "226957452", "226923078", "226915139", "126476050", "126473103", "126440879", "126432204", "126430601", "126410978", "126386211", "126374385", "126350389", "126348541", "126347731", "126346918", "126344921", "126343579", "126337946", "126325080", "126323055", "2390", "126315942", "126302586", "226900312", "226893604", "226870200", "226863307", "226855621", "226844023", "226834410", "226813954", "226754257", "190364463", "122923657", "122567098", "122446616", "122436959", "122339952", "122182335", "122102991", "154204652", "141605618", "138719704", "137193968", "136798584", "136465444", "136365231", "126301922", "126301717", "126291693", "126283489", "126279116", "126277361", "126273657", "226733824", "226732965", "226732331", "226732189", "226723463", "226718702", "226704721", "226700717", "226700432", "122087294", "122023762", "122010486", "121995492", "121974894", "121930697", "121884814", "121884636", "121868056", "121864917", "126268175", "126265497", "126261158", "126253606", "126259865", "126258810", "126258784", "126256170", "126249716", "126252644", "226679986", "226677148", "226674137", "226672941", "226663884", "226662940", "226662747", "226661973", "226608892", "121860312"], "data": [1, 1, 1, 106, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "uniq_id": {"label": ["d749678d-aeba-5a6b-b8e2-8d2121463672", "9f20312c-1047-5824-97d2-d5563b8fd046", "178b3b03-2c56-5abc-a016-c74c2633c9c2", "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "bc017585-3bc1-5a37-9e58-f0bed6de9a72", "4167ea1c-87b6-5dbd-a04b-56fc7d1948e9", "b4c20627-111c-5ad9-809f-11d6a82c675d", "ea9ef1ba-d537-5b73-ab71-790616ef3258", "3e14ceea-0717-51ac-9edf-6b0d17b9f978", "3bdf13c6-ed6c-5df7-a7cb-f87507d4b133", "92688319-f675-53b8-9468-2e7b1ea9bbc4", "ff2acd3f-f96f-5935-bdfc-8e29e518fb60", "a3a3d750-800d-5eef-a917-fd5b00598f06", "ebae6bfc-540e-5f39-9ce2-2d46db50b49a", "78865f85-196f-515f-90ed-a8dad95d9065", "89ac96f3-a6a7-5f6e-ac22-302869e30bc7", "65c38814-b259-591c-ae59-a3f0fbae81d0", "902d7992-f6fd-55bd-b5d7-408db5a49648", "540015d7-27e3-50f6-b66b-8646416c0cfb", "00bd1c61-b1e9-5996-9cb2-68f647941463", "5cf58f8e-75b2-555b-b9ac-0edb49219337", "992506c3-cb1d-5a05-afc6-cce6a4a437fd", "70c3cefe-763a-5aca-9b7d-5bd2b36c5595", "c1aea343-68b1-58fa-8a7d-07f265e664cb", "fec5af3e-7f63-5e5d-9649-1b81750f3e24", "bc585083-82d6-5cb5-af8a-7f19120e6f3a", "d92ea3bf-7fab-56df-802f-973a7be01387", "4eeca482-acc8-54f0-bf9c-1552ad6304c3", "b6503cc7-6b14-5ea4-ae9e-5e984741ae65", "4840bb9f-8063-54f1-aafd-dc779ba006b8", "5dfb09b5-3b7b-5c92-8d69-2e487ee55948", "58e11806-69db-59a1-bf1b-1931387149b4", "1b36ae98-a3b9-586b-b75c-92d0b0a64fbe", "ce1ab1c3-34c5-5b21-90d3-be7a37b215d1", "926fe7c6-6345-529c-91bc-35736576d50f", "b74cf53c-979d-5157-b1b1-28572636ecef", "f6a47493-63ec-510b-aba2-8a68eff9bc34", "9699ef26-f730-5927-bf3e-7cdf8ecbb2a5", "3de73f9b-98c9-56e2-805a-e539ab1e5e33", "a2bc0bcb-0540-5dca-b1c2-06430afdd624", "8c024bd3-193e-5631-802c-3a989f6d4f73", "1a337911-6166-5983-b5cf-944db19384c8", "8c51c627-f616-5bdf-aeff-d93bf787994c", "dfa3ef96-f70e-5e78-9ee8-8d0c57f017c2", "8c35296d-ba41-5598-a513-740f8566113e", "6ebdfa30-4058-5fa6-b76a-d8bc6977e810", "960cbf7c-2354-567a-ba9c-537f3e63810f", "69500d83-dab7-5078-9aa1-5e2200736382", "d361c95b-fd18-5024-a6fe-f997562e2d3b", "c74037cf-5c28-5aa1-894a-c9abd50cdc79", "ab03b0d3-cc3b-5cf9-9894-200631099bb4", "296f57cd-b10f-5bd0-8dd9-78048b7c2e37", "667613eb-326c-5e9c-a48d-bdd2461a770c", "603d6f26-ffc4-5059-8cd8-ed6ddd671e63", "7e989ba1-5dbc-561a-b719-01ed3cda849b", "4f131751-4d8a-5bfd-af50-9d2ce3dd046a", "8cbb57c6-0882-59dd-af92-73b57a213812", "86570fa2-2141-573f-93ea-6368fedc9d0d", "a3955d77-2dea-561b-823c-41bc60377780", "9e0d282d-056f-55c9-a62d-13e79bbb844c", "ee801ec0-c5cf-5655-8498-a9770f1a6921", "4ef37b88-1ab9-5d98-adfd-5a7790b9cdfc", "232f5009-6c44-540a-9e7a-040e815522eb", "bb5c5e36-48cd-533e-8b32-ac1840944224", "ce94d9a4-0183-5315-8521-941c99a5aa68", "0fcf6665-8e4c-55e5-8723-8ea686ad425a", "524f0643-9cda-5306-81ab-277f533b47da", "fd3b358c-a67f-5475-a1cd-04c862f97b4e", "aed215bd-32e5-5577-be72-8fe1a4273d12", "87901149-9f7d-5db6-9c6b-7f516bda5b83", "db0b55df-7fd4-5d5c-90d3-eac2b049be4c", "c026bcd2-f440-5b87-95d0-a9dbdd87d4fe", "0d5805fa-77a0-581e-9f6a-b5441020925d", "20b6e8de-5239-5339-97cd-f4a96cf19873", "d7a8c6c4-234e-5c12-a8d0-af859409bd8a", "09c6537e-9796-5aca-a264-354c489b7706", "b6dae06e-562f-5f67-b905-6a267a1b3147", "6ff43da6-1ce0-54d4-9080-221feba20bd8", "9dc8e634-e9bc-584c-b64b-bb39c8f54fce", "3025b560-5f5b-560b-9b15-d3c2ed1468b0", "2dee6b9f-1dd6-500a-9518-e48555992512", "348d2ec6-347b-50e5-9fe8-388a58176915", "de401188-0285-5ddd-93d8-f84f18f155e2", "6879d252-929f-560d-a2f6-c29114a460cf", "065df515-c00f-5674-8005-0e71aac9b6cc", "7b762f11-3f30-5648-898e-b365a7eaedd8", "df5e5870-c422-5585-9dbd-2f01e48ee872", "b9a43399-3aea-58dc-b1c2-96e5bab6e7f4", "e3d25147-7e31-5ade-b955-8c6c07276063", "37ab8cbb-cbe6-5514-bb5a-3223ae898d16", "156a2f4b-a3ee-5a50-8bf2-f2311c908491", "3da6f23f-4693-549c-9b9f-0faa66b56124", "66f84845-97c8-5cca-8bf1-4cc4cdfceead", "8a38edf4-1d13-54d2-a32c-f98303cbd0ac", "b25ea776-319f-5907-bb36-8330e0b9e736", "b7379f49-dc90-56f4-8823-769c4832168b", "92468c29-d5fb-59dc-a142-1e67d15d1ee1", "81bfcb3b-43a9-55da-84ca-2712183f9869", "77925e75-8d4b-5970-9020-ddd3517955c7", "22f370a8-e30f-5cea-9d38-0d7b9da2fd0b", "3c5e7a8f-7138-5143-a3dd-81d9f2bf87e6", "77005922-343e-5afd-8604-de6116cb0a81", "ead016dd-471c-550c-8335-e80ade7ecbb9", "3f2ea70f-6737-57b4-bbff-c6b5af771f90", "14829c73-4cad-510d-9d51-01ef577acadf", "fe7a0330-a5dd-530e-9497-80d37d07253b", "e59c376b-a912-50c5-9d04-8f7f3e7a6d45", "5104f652-46d7-5b1e-bdf2-55b7f55d4b22", "780060a5-4afc-5712-9c61-66c3df2f51ff", "333d879a-9b72-50d3-a5d7-faa0961846ca", "41044c39-03df-5ca0-b0da-9219160fa67b", "c64a9e38-39cc-50ef-9d30-1eed268a4a24", "8e31a70f-17f9-53d5-9f0f-3b578d7433e8", "42674a2c-bab8-5cd9-b2f4-a5b33733beb4", "322502c8-f81a-51b5-b3bf-e6e61a83b045", "c397a7c1-d874-554e-9004-4d7a2422f5d3", "8e0bfb12-1204-59aa-ae95-fc75ec400ba0", "c0b37854-ae65-508d-a8d8-05183e6ca822", "8af5ed1a-cca6-5a39-bcf8-bb9c25ec7806", "c5dd07cc-ca1f-52d8-82df-d13c4e129265", " u can make them with very little ease and there not nearly as effective as they use to be.... which i guess is the trade off for it", "928838d7-ee40-5739-a91c-37320381b139", "0a0d4148-507a-575b-8ca1-9ce89095fc80", "f30f8cd1-56b3-5068-bcd7-d59438a6da70", "caa8b6bd-4ca5-5ed9-b467-f4fc59e596ff", "b6fc226c-c88b-5332-88db-545da41ae9b3", "b0620603-ee01-512d-bdfe-b37993ab43ff", "41b29280-1727-5bba-ac8a-17e914bd2d00", "0efc324a-3a27-5e05-b98d-8cb6cd444775", "3bfce4cc-4c76-5c78-bc93-d740963116f3", "b72f7138-db42-5954-9039-1eebfbe44ba6", "750791b6-adfe-5127-aa53-9a502824f996", "83cdeff3-bf81-5aab-a214-4f778969e26c", "2f8a681e-1bd7-5a6c-a446-4ac731ed373b", "ef6ab344-54b7-5244-a7be-81066f12b6ba", "d29dc126-1eca-5ed3-8156-9f4d98d42b09", "21bbb55e-c631-5317-bbbe-e966c51ddc36", "7fc9e390-1992-5327-9a3f-8730d97e32b3", "e00ba275-4a07-5d26-b371-4317a039c78c", "e6b35618-1a65-58b4-b82f-91fe5c64d444", "85d2e8a6-54a4-5cfd-85b8-a40628881808", "de5d066a-fb60-5496-a2af-4708d4867650", "a803b874-c886-57b3-b93b-16a92cb2c4af", "9d0a0700-633a-5cb9-b33f-88479669ad1c", "78a38873-09a0-5f5c-8680-56bd3d8182bb", "0b9eb2b5-8735-5a5c-b3c1-e574976ff59a", "6680ec17-93e7-5d88-be84-252b6dcf4afa", "830e77d9-5c67-518a-a24d-48656e6ec23a", "9f9fe687-9b39-54dc-a594-be74dc951e9f", "7a0bc368-d016-51c1-a93a-e5255b8818b6", "c68ab9a9-35ca-50e7-8d99-61aa90cc6170", "3c2570e7-dcf8-5ca5-a2e5-cab3f469a020", "eb70dff8-04e8-5a64-a14e-63186d060a0e", "70075879-a707-5623-93eb-21a98adec3ff", "b2f4b512-cb05-54e0-8cdc-5513f11da130", "ca9738d7-fa47-5310-94c9-9abdf85f4aec", "7cdfe34c-abaf-5aef-9de4-e655f148a573", "92c805bc-a7f5-5195-a86c-1bae32b5992c", "342a7542-8347-5f47-a2a1-3210f50a807f", "7c0656aa-e5d5-5531-a479-c2da27eda948", "6344ef26-f49a-5fe7-adf8-f78f0291da78", "9d8c6279-b9ad-5934-8270-e45b1a2514a7", "bb1ba1ea-fdb3-5210-a1f0-c5dde357c6c5", "59c37463-7e8e-5dac-b39d-25c12a73e452", "4336655c-bf54-5815-8b4c-c7257f8ee373", "161d1563-a683-5027-9a7b-226dd83bacc9", "a9ead4c5-5697-5920-8415-47091cdf9b62", "be7a52a7-154c-5468-83e5-ce5d947f712d", "ee96d446-bfa0-5374-b74e-a26f96eab46d", "79fbee79-80ae-5908-8cda-70f9293e272f", "7e71ba28-f137-5fdd-80ab-d91a69dcd9ad", "10273c14-150a-59ac-86f3-2040fae23777", "1a5bd81d-12a7-5f67-b456-c557a1b6029b", "ce147da5-c01e-5a86-a357-f8d3ece4a123", "df892d55-bd89-528b-8528-ebb70103f590", "5465f272-2a25-544e-a43e-a137e0899216", "9603729f-86c8-5e52-a9c4-aea8bc2c705e", "4af31d2f-d9c0-55f4-9083-3945e69aede0", "7be993e6-155e-5555-998b-cedcee64ef71", "60e522b6-7f19-5e3f-8456-548142cd2603", "00a29941-a023-5474-a4bb-3c28f9699a6c", "bc7017a3-b713-5c27-9b55-944deacc859b", "11ca20bc-d09d-5da2-9f77-75560a67b0f2", "4ca56a88-18eb-5e1a-af3e-f09fb8a295b1", "a9aaf6b6-d248-5257-81b4-4261997b6957", "43d68c51-de66-5084-bb9b-beb70dd04227", "74124d14-3a82-5efd-8d25-925413486048", "65a5e017-1707-51de-9fa4-f01bd77a9e1c", "a6daf2c6-b2e0-56b6-942a-20ec613b3e8c", " don't make the same mistake I did. Do not buy this game.\"", "7d45dc21-cb6d-566e-829c-0b6a8f1fcb9d", "fe7d8b34-e569-5186-8dce-57c70a13d88c", "1", " the deadlier they become thanks to experience now. The much-famed and even moreso whined-about economy that made SupCom 1 and Forged Alliance so famous (or infamous", "6dbed12c-450d-541a-a190-c15f03c40aa6", "ddd95f84-96b2-5c7d-bb7c-53c36e6df414", "c636381d-0229-527d-99a8-bff81d749a13", "4d3e75a4-f345-5e58-bdec-b17eba6b54e8", "c434c843-886f-51ac-be66-1444953b1f34", "e98cc6f9-fb85-5bc5-8a5f-709d56e7a08a", "ab190533-6515-5e00-991f-36666c9cb8f4", "b69b8ac8-89ff-5e89-9697-52a682ad0e76", "b707b4b5-8acc-5c69-9279-f1029422274c", "ce132a16-19ad-5dc1-a222-9a18b7751770", "51346905-fab9-5ddd-bdc0-a3e78448129b", "6f4b378a-4b78-5beb-bcc2-2aea05ea730a", "15117320-4aa0-5f15-8d9f-44eb7891adfd", "7578b6e5-5098-5f49-b320-ee99268986f4", "e19bd9fd-6c3b-596b-9014-d6d8e6238e37", "31786614-0e1e-5a38-9e27-8f23084e6ee1", "3ae8c7e2-1f22-5cd8-9992-6d5f03e37b8b", "df9c8e11-c20e-5a8b-b090-975550d21a38", "9d91f740-ff30-5f49-a9e7-32cf33d739c5", "fed5a40d-6b6a-5212-aab1-7d644fd4c0d0", "017d9f32-3702-5eb4-b1fb-7426864383c7", "21945403-7c2d-5e53-bdec-30fc9caec384", "f9469cbd-8ad3-5f74-9b6d-3aefeaf073c7", "2c072257-f611-5e72-a1ab-5dc75ef88f59", "1fc8da0f-ab3c-5904-b6d7-e967083ec472", "3d6378f1-c8fb-53b7-9080-d2429741d858", "2d87329c-fbd9-571f-981d-46ff995fd728", "d9d6ab84-c03e-5838-a724-e49e367d0fdd", "03ef4326-bd0d-5d6d-8a82-673db2023dca", "1892e4f2-a10d-5cbe-ae9e-af24f821912b", "b773b1a6-5b9a-5f68-9670-3489f0334157", "d0cf2335-6dea-596b-8480-460279c701a9", "7597e0e9-5e76-5dde-8bf8-327904575e9f", "269f8e2e-b3e2-54a2-af5b-504e0de18999", "a2db9996-35e7-58d7-ada1-a48703f0843e", "c61a0a2e-6150-5816-827e-7d7fc7f7f94e", "2926a631-7fde-5f98-beff-434285a55c73", "c89c209b-87b7-51c6-b645-604bd2589c10", "fa3daaef-6785-5e0d-a7a0-53a2605e5a60", "6ac96e96-d51b-5c49-8a2a-f21a298a2960", "d433a372-ec33-57de-af65-ddd03d8458ed", "be19f9b0-7d18-50c2-8f4f-d22f83fd1081", "a56d9282-4860-5371-9f05-a9bd99c99914", "58a3cd56-3757-5683-bf5e-043f7dc92826", "a9fd61c1-57e1-5036-8cf4-01149ac3e34d", "c3f3597b-51a8-5aec-a613-90242e40e8d8", "cec310ca-6de1-5376-8bfb-8be08ffd1b87", "fe663898-37db-56ab-9d32-c3d52f93b4e5", "d95796b1-88cb-5c86-bc22-0bc9db290b2f", "4a2b7da3-cc8e-59cd-9dc0-ffa2af5d19c6", "0790d8e1-1514-528a-8f1e-1e5dc035db8b", "4984011a-1fca-57b5-89a6-e76c780daaf7", "7ca99b13-422b-5892-a441-b2dd7bf7a000", "f5f793cc-dd08-5247-9ace-2498e78f061d", "d8b5b07f-b13b-58cc-b896-615b9ad105d5", "de0956d4-0d06-55f1-afce-9551324185ce", "2dc7e561-ee75-5e53-ad76-2859903df7c3", "f255781b-e9a0-57c1-a451-7a35a3332573", "aaaaa9b0-6933-56cd-982c-9093972c44ea", "173c87ef-e2a6-5ad3-89a4-432c8c9b8d3b", "a5a4fa33-a821-53a1-82a9-e28573bb422f", "5cb903ed-3a8c-5949-adae-8c1573defb6d", "0458081f-b0d0-51c3-a5bf-819b1d1ea16b", "0370dddc-2aae-508a-b44d-122e6d641c33", "3b4eb371-c531-5ab8-ac2b-889dd0e24cfd", "11982b37-c606-5a12-a2fe-1999da7e9a6a", "049e260f-a2e3-5ee2-8422-c0b928f66317", "5542b8bf-ac17-55f6-937a-1d90f91b9677", "9bd8d11d-12c7-5078-8ffd-a76aad22839c", "deb423a5-9af3-5ba2-b788-afb7f1433960", "27f54783-5943-5768-8473-f46535b7d205", "984c0a44-286b-5f5c-a04b-21f0ec500bb6", "6ba4d664-9c8a-50a0-80af-696a0a693e1f", "1e939271-deb9-5fe8-a1c4-aa8dbdf78342", "23d9c3da-b664-52b4-bf69-0f8a7d077f90", "9bd2d34a-5e61-57c4-9d29-646e5cf6ba26", "b1f8541f-3d73-58d4-8fd2-91efc595fc96", "88ef6fb7-c95f-5675-9d98-c4a50cfd519a", "b337caff-962c-5242-b3d0-8abebb580064", "e04f8d1a-9267-530b-b5c0-10346dd373e0", "df5a7b8a-f709-59f5-b49d-dc724ec76b61", "859ac623-c5af-5604-91d5-8a99eb2504d5", "5f3917ab-9dd6-5929-9744-e3a2e874d7b4", "a99d570c-bdbd-5227-8609-ece8f499ebb5", "587a3ddd-1619-5729-88bf-61b91642d4c9", "33f65eb0-1f44-526d-9319-c906125ee5c6", "da0393de-bb8b-55f8-86de-58d92cfe4241", "2f7efb29-de97-5904-833a-c9a78dcb9212", "7615eeb0-1644-5875-856a-08aeefb4355c", "77d0486c-c3fa-55ce-a778-25a9ff85e1d6", "821dde30-9ad1-59e3-b367-e0a36dc2691b", "584ee887-b8e9-5831-b34c-9054af211b2e", "83fda476-c6ad-5de0-beb9-24a7cd48fdd2", "9a3be338-8648-50e4-a0f5-805fd576c024", "b79f70f4-fd02-53b5-8027-838f4073ed73", "123e30f0-b2b1-5458-8d8a-faee417f379a", "27ea1f05-cdda-5466-ba89-1578af352018", "71a0a99a-e767-5285-ad31-aabfed1b91d7", "05ca2650-238f-588e-a873-7007194759d7", "dbb361d8-d468-5822-a0a8-10bbb1e5c348", "bb53d5c0-348a-5800-87a7-d4eb984ca544", "89c9e45b-2b49-5be2-9e62-52634bc7fad7", "11338a10-215e-5f67-a575-5237fef59b16", "ece4609f-bd97-5a47-82b3-c1f5352598f3", "f3a80eb1-718b-5c8d-b318-b18bc83fb20e", "a77123ba-ba04-5c96-9775-f7933c733a37", "227010137", "93e6fc6f-7bf6-5a2e-b4a0-834fc2475980", "7b9af1f2-7b3d-5164-80f0-800133b61ce4", "f864ba04-27e1-5673-875f-6fd69443fb3e", "922e0d7d-c3f4-5b50-a543-e756033d3a1c", "4773a39c-0194-5088-af97-1597830af3cb", "23759918-be89-5c65-9bf4-80ffb801cdff", "378bfa7c-9e8d-5d24-9947-c0515f458a2c", "bc495ea9-fc64-52df-a68f-c177f7c045d4", "9d54e2ee-64d7-501b-adbe-31c0969dbe17", "1babf017-7fdf-5c87-8652-1407fa60eb90", "d7029cd7-b7f2-5db5-8963-596a04b78acd", "e1f7d79c-f4a9-505d-9273-c1de69d35bda", "8e92998d-0da9-5f08-b431-fcde798123c9", "7f06208f-0a2b-54ba-94ea-112a39a0c52e", "a4ae2322-89b3-504a-b7e0-9fa33a9ca17e", "138dec55-89dd-5a19-b289-861f05404137", "1df8ba9d-c4b7-5f94-ac1b-796c510d5a5e", "46be1ec8-0af4-56f1-89c5-a57e8a345971", "1704cd22-d544-5d71-9815-f5eb2372a044", "bd6cd803-2b83-5424-9c1e-5d536f889b79", "a8cb85ec-1fb1-592d-86dd-ad1977d95f62", "126319104", "aac40f5b-5309-54ee-b48f-8cef2b574aa1", "48d6e2a3-a18e-56d1-a6c2-3f3d10c0238f", "9b0e9798-1104-51bb-bb02-c4791677f066", "ab53e60a-a8f5-514d-b991-35bb8c11d5b5", "07271c3d-9b17-5d98-8c25-bdd77055b420", "213d7265-2a67-5a82-8be4-aedcc9d26874", "6a01d10d-880f-5927-a855-9877f163f764", "ccbc3319-a7f8-55cd-99c4-8df80b9f986e", "653adbc8-2641-556e-95bb-4e98b787d90b", "090663b7-8c74-501b-8c5c-ad3a2534b71f", "8a8d8b55-7214-5e92-b9ed-733d6bf7071a", "8625e7a7-4e27-5d30-a05b-fe5bf7c2cadd", "9bf14046-e0c5-500a-9dcf-e9c0e6afb859", "814c2ff9-f939-5b24-8c3e-41e751846aa3", "89ff972f-705a-50a7-8f9d-f001de728a39", "a881b3e6-56f2-5ed3-99fb-dc2394c9a4eb", "6ffa7acb-1ab2-53b2-b96c-7d8ffc9cad47", "11608ce6-435a-5fa7-8361-78c102e07aa6", "330fc9b1-4297-500d-b450-59e0c113c0c8", "29596331-f93b-5f15-b930-ea33a3c3da35", "e77e4e5f-c996-51ef-bb79-6354405c211b", "f2fad2ce-ed9a-598f-9e5a-a3ad7ea6a717", "6b553447-1f16-512b-b18d-81f6ffac6d98", "0cf0d647-5307-585d-8435-a37e7f419aa3", "4fd68a13-9df5-5e86-b0a8-836bae43d243", "36b7fb9b-c0eb-5073-b128-5bd4c7d72748", "3f2027c9-d810-5e8b-b6ea-5a2af73af35f", "dc10d9ff-527d-5235-8da4-213d2422ccc5", "fd6bea00-05a9-5cd4-98f9-5f0d4ed43eb0", "29337594-2061-52d7-9c1a-b31c9022a6b3", "c0601d16-e5fe-5975-a114-e857b25aef61", "c2e549f2-3344-5ca7-9e6a-2b4bd5a25504", "ea57e9d3-97b4-56a0-b046-1b7024e7f67a", "7c5e8e10-dca1-528f-875b-96f7b995033a", "60bdb40e-e15c-5bfa-967b-9aa559482629", "23656563-b23a-5a13-b5c5-5ab4eaabf6e9", "74c08633-86e1-5e62-a815-f443ab052ecd", "3ff9d937-f377-5e4e-b3a8-ba7eb733ad07", "2620434c-3ae6-501e-ae0e-15e040f9a198", "2cd61b63-9d87-5b31-a9f0-29eb39dc6df2", "3dab1ab5-cb69-58f7-819d-dff2b315d6af", "8592ca19-f069-5470-92be-ef5503f7df48", "3add2868-0cfc-5f48-8791-d926b2dbded2", "ad9b54e3-4762-590b-a852-63af3528cbbd", "385e416e-b857-55ee-ac2a-0576072e6373", "e052cd77-4a49-532c-879f-d46458da984a", "afd78dcb-1b2b-5967-bdaf-e82cc7a64652", "db126a54-89c7-5ad8-ba95-641b8c223538", "19ee363b-60a8-5ded-96af-6f28febe3495", "2d355f38-1266-5775-9058-b21faddb6072", "bef4412d-50fc-579b-a749-e67a52661770", "7b82a6a3-87e7-5cfe-876f-56a53ab2eecd", "fd975a90-b8e3-5159-8130-c50c5ac945eb", "bd4d2b81-94df-5627-889b-21872c0e777d", "ef5055a5-a02c-5472-87a9-158244c487f6", "86d8bb86-c5df-535b-9e95-d709cf4b5922", "17905c2b-6d32-56c8-b6eb-5d4ab9f2f219", "19a05085-2d6f-5a53-9fe9-8dc9942c7879", "e5c8c18d-9848-59fe-9d4a-12c604a675b0", "e6a73770-f7cd-564e-bf77-367069bbcb04", "fee58b67-3483-5b70-bcb6-74e5f0e93fdb", "f882a003-351a-5ef7-b7b7-757d81ef4495", "d736627e-a587-5ffc-b505-49e31c8867f4", "995d0ca0-de0d-58fa-90d5-7d9799b0e36d", "29f3ac3e-d2fb-5187-a780-1670136e97a0", "206cfb0b-c2bd-5c16-8699-f8f01d670f44", "268a103b-4fb8-5479-8872-9cb3d3383705", "8cceda67-4c9c-5187-8a0e-fae36799ed85", "bef97385-8ff8-50e6-940f-f0f05b81a9c4", "53298df5-7dec-51dc-b18f-29b2a7165011", "47719f17-1a09-557b-a952-c2ed310910b1", "a0548af2-8959-52a2-ab05-c73a838d9145"], "data": [1, 1, 1, 106, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "scraped_at": {"label": ["16/01/2022 16:17:56", "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "16/01/2022 16:17:57", "16/01/2022 16:17:58", "16/01/2022 16:17:59", " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "16/01/2022 16:18:00", "No: I don\u2019t recommend this product", "3.4091", " lol) has been DRASTICALLY simplified", "16/01/2022 16:18:01", "16/01/2022 16:18:02", "16/01/2022 16:18:03", "16/01/2022 16:18:04", "2bb7b6b6-1b88-5903-a898-0a754ac687d8", "16/01/2022 16:18:05", "16/01/2022 16:18:06"], "data": [13, 106, 52, 45, 47, 1, 55, 1, 1, 1, 32, 29, 27, 43, 1, 45, 1]}, "index_stringindexer_transform": {"label": ["0.0 - 49.8", "49.8 - 99.6", "99.6 - 149.4", "149.4 - 199.2", "199.2 - 249.0", "249.0 - 298.8", "298.8 - 348.6", "348.6 - 398.4", "398.4 - 448.2", "448.2 - 498.0"], "data": [51, 50, 50, 50, 49, 50, 50, 50, 50, 50]}, "name_stringindexer_transform": {"label": ["0.0 - 3.7", "3.7 - 7.4", "7.4 - 11.1", "11.1 - 14.8", "14.8 - 18.5", "18.5 - 22.2", "22.2 - 25.9", "25.9 - 29.6", "29.6 - 33.3", "33.3 - 37.0"], "data": [407, 62, 5, 3, 4, 4, 3, 4, 4, 4]}, "brand_stringindexer_transform": {"label": ["0.0 - 2.1", "2.1 - 4.2", "4.2 - 6.3", "6.3 - 8.4", "8.4 - 10.5", "10.5 - 12.6", "12.6 - 14.7", "14.7 - 16.8", "16.8 - 18.9", "18.9 - 21.0"], "data": [362, 78, 33, 13, 3, 2, 2, 2, 2, 3]}, "sku_stringindexer_transform": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [280, 132, 22, 38, 11, 10, 2, 1, 2, 2]}, "reviewer_name_stringindexer_transform": {"label": ["0.0 - 41.5", "41.5 - 83.0", "83.0 - 124.5", "124.5 - 166.0", "166.0 - 207.5", "207.5 - 249.0", "249.0 - 290.5", "290.5 - 332.0", "332.0 - 373.5", "373.5 - 415.0"], "data": [126, 41, 42, 41, 42, 41, 42, 41, 42, 42]}, "review_title_stringindexer_transform": {"label": ["0.0 - 39.2", "39.2 - 78.4", "78.4 - 117.6", "117.6 - 156.8", "156.8 - 196.0", "196.0 - 235.2", "235.2 - 274.4", "274.4 - 313.6", "313.6 - 352.8", "352.8 - 392.0"], "data": [147, 39, 39, 39, 39, 40, 39, 39, 39, 40]}, "review_description_stringindexer_transform": {"label": ["0.0 - 43.4", "43.4 - 86.8", "86.8 - 130.2", "130.2 - 173.6", "173.6 - 217.0", "217.0 - 260.4", "260.4 - 303.8", "303.8 - 347.2", "347.2 - 390.6", "390.6 - 434.0"], "data": [109, 43, 44, 43, 43, 44, 43, 44, 43, 44]}, "recommended_review_stringindexer_transform": {"label": ["0.0 - 1.9", "1.9 - 3.8", "3.8 - 5.7", "5.7 - 7.6", "7.6 - 9.5", "9.5 - 11.4", "11.4 - 13.3", "13.3 - 15.2", "15.2 - 17.1", "17.1 - 19.0"], "data": [464, 15, 7, 2, 2, 2, 2, 2, 2, 2]}, "verifed_purchaser_stringindexer_transform": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [466, 15, 6, 3, 1, 2, 2, 1, 2, 2]}, "helpful_count_stringindexer_transform": {"label": ["0.0 - 3.5", "3.5 - 7.0", "7.0 - 10.5", "10.5 - 14.0", "14.0 - 17.5", "17.5 - 21.0", "21.0 - 24.5", "24.5 - 28.0", "28.0 - 31.5", "31.5 - 35.0"], "data": [453, 15, 7, 3, 4, 3, 4, 3, 4, 4]}, "not_helpful_count_stringindexer_transform": {"label": ["0.0 - 4.6", "4.6 - 9.2", "9.2 - 13.8", "13.8 - 18.4", "18.4 - 23.0", "23.0 - 27.6", "27.6 - 32.2", "32.2 - 36.8", "36.8 - 41.4", "41.4 - 46.0"], "data": [448, 14, 5, 5, 4, 5, 5, 4, 5, 5]}, "reviewed_at_stringindexer_transform": {"label": ["0.0 - 4.5", "4.5 - 9.0", "9.0 - 13.5", "13.5 - 18.0", "18.0 - 22.5", "22.5 - 27.0", "27.0 - 31.5", "31.5 - 36.0", "36.0 - 40.5", "40.5 - 45.0"], "data": [385, 58, 15, 8, 10, 5, 5, 4, 5, 5]}, "rating_stringindexer_transform": {"label": ["0.0 - 1.8", "1.8 - 3.6", "3.6 - 5.4", "5.4 - 7.2", "7.2 - 9.0", "9.0 - 10.8", "10.8 - 12.6", "12.6 - 14.4", "14.4 - 16.2", "16.2 - 18.0"], "data": [380, 81, 23, 4, 2, 2, 2, 2, 2, 2]}, "average_rating_stringindexer_transform": {"label": ["0.0 - 1.5", "1.5 - 3.0", "3.0 - 4.5", "4.5 - 6.0", "6.0 - 7.5", "7.5 - 9.0", "9.0 - 10.5", "10.5 - 12.0", "12.0 - 13.5", "13.5 - 15.0"], "data": [253, 103, 100, 18, 18, 1, 2, 1, 2, 2]}, "reviews_count_stringindexer_transform": {"label": ["0.0 - 1.2", "1.2 - 2.4", "2.4 - 3.6", "3.6 - 4.8", "4.8 - 6.0", "6.0 - 7.2", "7.2 - 8.4", "8.4 - 9.6", "9.6 - 10.8", "10.8 - 12.0"], "data": [253, 105, 81, 30, 18, 8, 1, 1, 1, 2]}, "comment_id_stringindexer_transform": {"label": ["0.0 - 39.4", "39.4 - 78.8", "78.8 - 118.2", "118.2 - 157.6", "157.6 - 197.0", "197.0 - 236.4", "236.4 - 275.8", "275.8 - 315.2", "315.2 - 354.6", "354.6 - 394.0"], "data": [145, 39, 40, 39, 39, 40, 39, 40, 39, 40]}, "uniq_id_stringindexer_transform": {"label": ["0.0 - 39.4", "39.4 - 78.8", "78.8 - 118.2", "118.2 - 157.6", "157.6 - 197.0", "197.0 - 236.4", "236.4 - 275.8", "275.8 - 315.2", "315.2 - 354.6", "354.6 - 394.0"], "data": [145, 39, 40, 39, 39, 40, 39, 40, 39, 40]}, "scraped_at_stringindexer_transform": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [161, 99, 45, 88, 32, 56, 14, 1, 2, 2]}}}, "ManualFE": {"FE": [{"transformationsData": [{"feature_label": "index", "transformation_label": "String Indexer"}], "feature": "index", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "211.5", "stddev": "122.54", "min": "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "max": "in between each secret is so satisfying.\"", "missing": "0", "distinct": "499"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "index"}, {"transformationsData": [{"feature_label": "name", "transformation_label": "String Indexer"}], "feature": "name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "469", "mean": "", "stddev": "", "min": " and they kind of fight over it.  They really like the retro Mario on the controller", "max": "yes: I recommend this product", "missing": "31", "distinct": "38"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "name"}, {"transformationsData": [{"feature_label": "brand", "transformation_label": "String Indexer"}], "feature": "brand", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "451", "mean": "", "stddev": "", "min": " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", "max": "yes: I recommend this product", "missing": "49", "distinct": "22"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "brand"}, {"transformationsData": [{"feature_label": "sku", "transformation_label": "String Indexer"}], "feature": "sku", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "451", "mean": "266631.73", "stddev": "99207.12", "min": " #1 is eARC (awesome)", "max": "yes: I recommend this product", "missing": "49", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "sku"}, {"transformationsData": [{"feature_label": "reviewer_name", "transformation_label": "String Indexer"}], "feature": "reviewer_name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "453", "mean": "19.92", "stddev": "101.18", "min": " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "max": "zachR", "missing": "47", "distinct": "416"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviewer_name"}, {"transformationsData": [{"feature_label": "review_title", "transformation_label": "String Indexer"}], "feature": "review_title", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "445", "mean": "0.0", "stddev": "0.0", "min": " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "max": "look out gamerz, here comez awsome", "missing": "55", "distinct": "393"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "review_title"}, {"transformationsData": [{"feature_label": "review_description", "transformation_label": "String Indexer"}], "feature": "review_description", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "454", "mean": "3.84", "stddev": "1.83", "min": " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "max": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "missing": "46", "distinct": "435"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "review_description"}, {"transformationsData": [{"feature_label": "recommended_review", "transformation_label": "String Indexer"}], "feature": "recommended_review", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "425", "mean": "4.09", "stddev": "1.21", "min": " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", "max": "yes: I recommend this product", "missing": "75", "distinct": "20"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "recommended_review"}, {"transformationsData": [{"feature_label": "verifed_purchaser", "transformation_label": "String Indexer"}], "feature": "verifed_purchaser", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "258", "mean": "655.06", "stddev": "958.24", "min": " and to get 4K", "max": "yes: I recommend this product", "missing": "242", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "verifed_purchaser"}, {"transformationsData": [{"feature_label": "helpful_count", "transformation_label": "String Indexer"}], "feature": "helpful_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "424", "mean": "7017251.36", "stddev": "36576741.04", "min": " 2", "max": "Verified Purchaser", "missing": "76", "distinct": "36"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "helpful_count"}, {"transformationsData": [{"feature_label": "not_helpful_count", "transformation_label": "String Indexer"}], "feature": "not_helpful_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "424", "mean": "4495646.89", "stddev": "30454540.27", "min": " 3", "max": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "missing": "76", "distinct": "47"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "not_helpful_count"}, {"transformationsData": [{"feature_label": "reviewed_at", "transformation_label": "String Indexer"}], "feature": "reviewed_at", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "423", "mean": "91221663.0", "stddev": "124910521.85", "min": " and Experimental", "max": "fa660933-1130-5c66-9010-24d641f70bc7", "missing": "77", "distinct": "46"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviewed_at"}, {"transformationsData": [{"feature_label": "rating", "transformation_label": "String Indexer"}], "feature": "rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "406", "mean": "313231.79", "stddev": "6185743.26", "min": " and no larger maps to choose from. In the first version you had a large selection of maps", "max": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "missing": "94", "distinct": "19"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "rating"}, {"transformationsData": [{"feature_label": "average_rating", "transformation_label": "String Indexer"}], "feature": "average_rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "398", "mean": "4.44", "stddev": "0.43", "min": " and experimental units are really not that great", "max": "ef72459e-8f5c-57dc-af42-0127d2903498", "missing": "102", "distinct": "16"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "average_rating"}, {"transformationsData": [{"feature_label": "reviews_count", "transformation_label": "String Indexer"}], "feature": "reviews_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "396", "mean": "978.9", "stddev": "1006.83", "min": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "max": "4.6556", "missing": "104", "distinct": "13"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviews_count"}, {"transformationsData": [{"feature_label": "comment_id", "transformation_label": "String Indexer"}], "feature": "comment_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "165972981.36", "stddev": "56535283.62", "min": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "max": "95223899", "missing": "105", "distinct": "395"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "comment_id"}, {"transformationsData": [{"feature_label": "uniq_id", "transformation_label": "String Indexer"}], "feature": "uniq_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "117776414.0", "stddev": "113745916.96", "min": " don't make the same mistake I did. Do not buy this game.\"", "max": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "missing": "105", "distinct": "395"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "uniq_id"}, {"transformationsData": [{"feature_label": "scraped_at", "transformation_label": "String Indexer"}], "feature": "scraped_at", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "3.41", "stddev": "nan", "min": " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "max": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "missing": "105", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "scraped_at"}, {"feature": "index_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "248.5", "stddev": "144.48", "min": "0.0", "max": "498.0", "missing": "0"}, "updatedLabel": "index_stringindexer_trans..."}, {"feature": "name_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.87", "stddev": "5.64", "min": "0.0", "max": "37.0", "missing": "0"}, "updatedLabel": "name_stringindexer_transf..."}, {"feature": "brand_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.07", "stddev": "2.84", "min": "0.0", "max": "21.0", "missing": "0"}, "updatedLabel": "brand_stringindexer_trans..."}, {"feature": "sku_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.0", "stddev": "2.39", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "sku_stringindexer_transfo..."}, {"feature": "reviewer_name_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "172.75", "stddev": "134.22", "min": "0.0", "max": "415.0", "missing": "0"}, "updatedLabel": "reviewer_name_stringindex..."}, {"feature": "review_title_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "154.81", "stddev": "128.01", "min": "0.0", "max": "392.0", "missing": "0"}, "updatedLabel": "review_title_stringindexe..."}, {"feature": "review_description_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "188.88", "stddev": "138.02", "min": "0.0", "max": "434.0", "missing": "0"}, "updatedLabel": "review_description_string..."}, {"feature": "recommended_review_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.67", "stddev": "2.24", "min": "0.0", "max": "19.0", "missing": "0"}, "updatedLabel": "recommended_review_string..."}, {"feature": "verifed_purchaser_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "0.83", "stddev": "1.77", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "verifed_purchaser_stringi..."}, {"feature": "helpful_count_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.82", "stddev": "5.31", "min": "0.0", "max": "35.0", "missing": "0"}, "updatedLabel": "helpful_count_stringindex..."}, {"feature": "not_helpful_count_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "2.58", "stddev": "7.87", "min": "0.0", "max": "46.0", "missing": "0"}, "updatedLabel": "not_helpful_count_stringi..."}, {"feature": "reviewed_at_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "4.37", "stddev": "7.76", "min": "0.0", "max": "45.0", "missing": "0"}, "updatedLabel": "reviewed_at_stringindexer..."}, {"feature": "rating_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.11", "stddev": "2.26", "min": "0.0", "max": "18.0", "missing": "0"}, "updatedLabel": "rating_stringindexer_tran..."}, {"feature": "average_rating_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.89", "stddev": "2.04", "min": "0.0", "max": "15.0", "missing": "0"}, "updatedLabel": "average_rating_stringinde..."}, {"feature": "reviews_count_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "1.77", "stddev": "1.7", "min": "0.0", "max": "12.0", "missing": "0"}, "updatedLabel": "reviews_count_stringindex..."}, {"feature": "comment_id_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "155.63", "stddev": "129.4", "min": "0.0", "max": "394.0", "missing": "0"}, "updatedLabel": "comment_id_stringindexer_..."}, {"feature": "uniq_id_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "155.63", "stddev": "129.4", "min": "0.0", "max": "394.0", "missing": "0"}, "updatedLabel": "uniq_id_stringindexer_tra..."}, {"feature": "scraped_at_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "3.75", "stddev": "3.19", "min": "0.0", "max": "16.0", "missing": "0"}, "updatedLabel": "scraped_at_stringindexer_..."}], "message": "Successfully executed", "status": 1, "userid": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "autoFE_flag": true, "stageId": "678d37425351fccd0b114dbc", "FESamplePath": "/FileStore/platform/sampleData/678d37425351fccd0b114dbc_AutoFE/part-00000-1dfc3a6d-a767-451d-87bf-41339aa34ec3-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/678d37425351fccd0b114dbc_AutoFE/part-00000-1dfc3a6d-a767-451d-87bf-41339aa34ec3-c000.csv", "samplecount": 500, "originalcount": 5321, "dataPercentage": "10", "FEGraph": [{"values": {"label": ["0", "1", "2", "3", "FYI...the 65\u201d HD television I had to replace was a Samsung that was about 4 or 5 years old that stopped working after some loud cracking and popping noises that sounded like the transformer on an overhead power line blowing out. However", "4", "5", "6", "7", "8", "I am so happy to have this wonderful big one for my first OLED TV", "9", "10", "11", "12", "13", "14", "15", "16", "17", "This thing is only $20 more than the ES2", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "The \u201ccrafted world\u201d is exceptionally detailed", "The gameplay is tight", "Most importantly", "28", "29", "30", "31", "32", "He agreed this morning while watching NASCAR that I was right. Yeah for me.\"", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "Wonderful OLED TV\"", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "More color Yoshi\u2019s to choose from and a forward and backwards game in every course. It\u2019s a lovable game to play!\"", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "Pros:", "1. The picture is absolutely gorgeous and you can tune it further to your choice.", "2. The Smartcast interface is decent.", "3. The remote is also not bad at all.", "4. Very quick to connect apple play. ", "5. There are ample connection options for my bedroom", "Cons:", "1. Cast is buggy. I can never get it to run first time. This is where I would focus most of the development time if I were Vizio.", "2. Smart Cast does not have a browser app that is accessible easily.", "3. There is no easy way to add more apps that are not already in the Vizio library.", "4. The detail picture quality will not go up to the level you get out of a top line OLED. ", "5. The bezel is still not near zero bezel size. It is sizable to be noticeable.", "Overall", "95", "The Good: Smart casting features. ", "The Bad: Pre-calibrations could improve", "THE UGLY: Very Very buggy software. Doesn't start a lot of times and have to re-plug many times. Brings me Anxiety.\"", "96", "A few quirks with the PS5 too. Sometimes when I power on the TV it also turns on the PS5. Sometimes when I power on the PS5 the TV turns on too. Neither seems to be consistent. ", "Needs and HBO Max app. Also needs to be able to disable inputs from the list like in previous Vizio models. ", "All minor issues and possibly handled via software or firmware updates. The hardware is solid though.\"", "97", "98", "99", "100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "120", "121", "122", "123", "124", "125", "126", "127", "128", "129", "130", "131", "132", "133", "134", "Make", "Stuff in your house.\"", "135", "136", "137", "138", "139", "140", "The important thing you might not first look for in a TV is how black the blacks are", "The only issue I have is the speakers leave a bit to be desired. They\u2019re ok", "141", "142", "143", "144", "145", "146", "147", "148", "149", "150", "151", "152", "153", "154", "155", "156", "157", "158", "159", "160", "161", "162", "163", "164", "165", "166", "167", "168", "169", "170", "171", "The picture is beyond amazing!! OS is smooth and video games look so darn good! Im buying the 65\"\" for the front room next week!\"", "172", "I\u2019d love to be able to recommend merely because of the picture and viewing angles alone", "173", "174", "175", "176", "177", "178", "I am so glad I gave it a chance!\"", "179", "180", "181", "182", "183", "184", "185", "186", "187", "188", "189", "190", "191", "Going back and forth between each level", "in between each secret is so satisfying.\"", "192", "193", "194", "195", "196", "197", "198", "199", "200", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "211", "212", "213", "214", "215", "216", "217", "218", "219", "220", "221", "222", "223", "224", "225", "226", "227", "228", "229", "230", "231", "232", "233", "234", "235", "236", "237", "238", "239", "240", "241", "242", "243", "244", "245", "246", "247", "248", "249", "250", "251", "252", "253", "254", "255", "256", "257", "258", "259", "260", "261", "262", "263", "264", "265", "266", "267", "268", "269", "270", "271", "272", "273", "274", "It's great...color", "275", "276", "277", "278", "279", "With its easy to mount", "Out of the box it had a firmware update. and then a week later another.  the 2nd was a bit rude", "I am using the amazing OLED with a brand new 4k reciever with eARC.  So everying goes through the Amplifiter through a high end HDMI ARC certified cable to the TV's HDMI 1 (eArc).  Most days its running fantastic and smooth as expected.  Although", "280", "281", "282", "283", "284", "285", "286", "287", "288", "289", "290", "291", "292", "293", "294", "295", "296", "297", "1) airplay doesnt work 90% of the times unless i go into admin & privacy and reboot the TV.", "2) even after reboot it doesnt work 50% of the times", "3) same issue with chrome cast as well", "4) TV screen turns off while mirroring screen via my Ipad every 10-15 minutes.", "5) while connected to HDMI port when im in zoom meeting using TV as external monitor", "6) Home button doesnt work 50% of the times", "298", "299", "300", "301", "302", "303", "304", "305", "306", "307", "308", "309", "310", "Love how everything looks like crafts. ", "As a Yoshi/Poochy fan I enjoy the Yoshi games.\"", "311", "312", "313", "314", "315", "316", "317", "318", "319", "320", "321", "322", "323", "324", "HOWEVER", "This is still a really good TV. But the growing pains right now would keep me from recommending it to others. (I'm coming from a 2018 Vizio P series)\"", "325", "326", "327", "328", "329", "330", "331", "332", "333", "334", "335", "336", "337", "338", "339", "340", "341", "342", "343", "344", "345", "346", "347", "348", "349", "350", "351", "352", "My only critique is that I wish it performed @ a 1440p resolution. Everything else is great!\"", "353", "354", "355", "356", "357", "358", "359", "360", "361", "362", "I like that this is wireless with sensors ", "This controller has Bluetooth", "The motion controls are awesome", "This has a design that feels good in the hands", "My nephews prefer this over the other wireless controller we have", "363", "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "*the added mappable buttons could come in handy even though I haven't used those yet.", "*the cost is much less than the Nintendo pro controller. ", "The cons:", "*slightly unconventional setup. ", "It's not a problem though if you read the instructions. ", "*its lighter in weight which makes me wonder about durability. ", "Makes a perfect 2nd controller for kids.\"", "364", "365", "366", "367", "368", "369", "370", "371", "372", "373", "374", "Great sequel to Wooly World\"", "375", "376", "The addition of being allowed to manually aim your eggs removes some of the frustration that earlier titles had and there are collectible items in abundance for completionists. That all said", "The biggest hiccup in the game I think is the mini quests you get. Each level has multiple different set pieces that a robot will want you to collect. The issue is you can only do one at a time so the game asks you to play through one level at least 6 or 7 times and it can get rather tedious at times. My suggestion is that if you are collecting everything", "In the end the game is a relaxing adventure through a handcrafted (Almost literally) world that never fails to charm. Perfect for players of all ages", "377", "378", "It's a great game for kids and adults!\"", "379", "380", "381", "382", "The one thing that would truly be the cherry on top", "383", "384", "385", "386", "387", "388", "389", "390", "391", "392", "393", "394", "395", "396", "397", "398", "399", "400", "401", "402", "403", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417", "418", "419", "420", "Thx", "Xbox Series x\"", "421", "422", "423", "He absolutely loves it. It linked up easily and is user friendly. ", "He loves the two on the fly buttons he can map to Make his play more custom. "], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "index", "count": 499, "min": "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "max": "in between each secret is so satisfying.\""}, {"values": {"label": ["VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", " my 42\u201d VIZIO that I bought in \u201808 doesn\u2019t even have a single bad pixel. Food for thought.\"", " of which screen is fantastic and very light compared to my previous one indeed.\"", "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", " and you know they could\u2019ve easier made it $100 more and still sold out. Amazing.\"", "Yoshi's Crafted World - Nintendo Switch", " with cardboard cutouts", " with seamless reaction times and plenty of opportunities to save yourself from mistakes.  Easy enough for kids to pick up", " this game is fun!\"", "yes: I recommend this product", "No: I don\u2019t recommend this product", " for the price it is a good deal.\"", "Supreme Commander 2", " followed by how light the screen can be without a terrible contrast. This TV fit the bill for both. Also", " but if you want a theater experience", " truth is because of the issues at present with the firmware", " finding every nook and cranny ", " sound and price. We have had Visos in the past and have been very pleased.\"", " easy setup", " as it occurred in the middle of a show without warning.", " the TV has 2 behaviors that need adjusting", "Kung Fu Panda: Showdown of Legendary Legends - PlayStation 4", " i will have to reboot more than once", " it throws message no signal detected and turns off TV after few minutes", " unless TV is rebooted\"", " there are a few headaches that is keeping me from recommending it", "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", " so I'm not tied down with a cord.  ", " mappable buttons", " this is a smart product!", " it is not bulky or hard to work.  ", " and they kind of fight over it.  They really like the retro Mario on the controller", "WRC 8 FIA World Rally Championship - PlayStation 4", " the game is not meant for those looking for a challenge. I don't need dark souls levels of difficulty", " don't try to get it all at once because I assure you you will be back through that level multiple times.", " but if you're looking for a challenge I would look elsewhere.\"", " would be to have a microphone on the remote control to search for a program like the roku\u2019s do. ", " it is a good sized tv with an amazing picture. Well worth it.\""], "data": [140, 1, 1, 82, 1, 140, 1, 1, 1, 45, 2, 1, 22, 1, 1, 1, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 22, 1, 1, 1, 1, 1, 7, 1, 1, 1, 1, 1]}, "label": "name", "count": 38, "min": " and they kind of fight over it.  They really like the retro Mario on the controller", "max": "yes: I recommend this product"}, {"values": {"label": ["VIZIO", "yes: I recommend this product", "Microsoft", "Nintendo", " Pinterest worth constructions", " but easily enjoyed by gamers of all ages", "No: I don\u2019t recommend this product", "Verified Purchaser", "Square Enix", " this TV is fully ready for the Max features of the Series X and PS5.", " buy a sound bar or speakers.\"", " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", " the show just begins with its amazing ink black levels", " not sure if its me or a firmware update.  They are: the screen goes blank when new input isnt supplied", "Little Orbit", " while im still in between the meeting.", " the first is the HDMI 2.1 port. The OLED h-1 has 4 HDMI ports", "PowerA", " fully programmable", " and make fun of me because it was brand new \"\"in my day\"\".  This is fun", "Maximum Games", " but at least some sort of resistance would have been nice. Levels can basically be run through rather blind if you're not hunting for every red coin or flower. Even the challenge levels at the end of the game don't really have much bite to them."], "data": [140, 56, 82, 140, 1, 1, 2, 6, 22, 1, 1, 1, 1, 1, 11, 1, 1, 22, 1, 1, 7, 1]}, "label": "brand", "count": 22, "min": " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", "max": "yes: I recommend this product"}, {"values": {"label": ["328244", "yes: I recommend this product", "307392", "Verified Purchaser", "191609", " and vibrant colors that pop on everything from the tiny Switch screen to a 70\u201d flatscreen TV.", "0", "522023", "No: I don\u2019t recommend this product", " beautiful imagery from its 1080P to its upscaling to 4k", " ie your movie is paused. And you need to press the OK on the remote to wake it up.  Having your show resume", "119061", " #1 is eARC (awesome)", "231963", " and more.  ", " so I'd definitely recommend this product.\"", "205005"], "data": [140, 50, 82, 3, 140, 1, 16, 22, 1, 1, 1, 11, 1, 22, 1, 1, 7]}, "label": "sku", "count": 17, "min": " #1 is eARC (awesome)", "max": "yes: I recommend this product"}, {"values": {"label": ["Leeford", "DJM7", "EC82", "Weeto", "0", "LexusSC400", "Ninjaafro", "von R", "Ohio Erik", "jonck", "Bob279", "NuggetsOne", "AJ V", "Always a fool", "RootM0d", "Ozlas", "Odium Prius", "Ryan CIN3MATIX", "Punkwaste", "CosmicOwl", "Skyturtle97", "Pitbull91101", "Mykd", "Chigg", "Prieto56", "Iz B", "Angel Marred", "Derrick Evans", "Jeremy Green", "zachR", "1", "Carl78", "Alejandro Rivera", "Pixle101", "Sillypajamas", "John4", "Mike1921", "Bmitch20", "karena", "Babes70", "Koky87", "Dcm388", "SunnyS", "Spenceleoz", "Rich190", "DrKillem", "Areria", "eyesayahh", "Animehipster", "Moi93", "Geo R", "JohnHalo117", "GrabAzzery", "Chaz54", "Jukeman79", "dfint", "SamuraiMatt", "DKCBatch", "VileMKII", "LRoberto", "Philliptate7", "Toxicbug", "Bardot", "tackomoto", "Bob81", "Porkchop76", "Bino7899", "Doblado98", "Super Awesome!", "jpc3", "Terry T.", "Canothegreat", "shane19", "R Robles", "IanMan141", "Anonymous", "Gaming reviews6", "twojoesf", "Marco AP", "I own this", "Fa crediblenick", "516", "M4lmx81", "NicoleD90", "MDB3", "Bigbadbarry", "Scott79rod", "BubbaHero4All", "Diana finley", "HeliosExe", "platygirl", "2-Apr", "Candice S", "Woodbine23", "Maximus", "Pat23", "woodbine23", "Rajib", "KristovM", "goobs150", "sftaylor614", "Johnboi781", "Harbinger86", "King TJ 09", "Biobroly24", "Killerxxx08", "Parker86", "PUGLOVERRG", "Kamna", "Natees", "Nate Corneliusen", "Racheljay11", "D3vonator", "Vegas momma", "Henrio", "Jeefly", "BoJackson87", "tankgod1", "16nflp", "Joey3245", "chiknwingding", "GeneralM99", "fiddlegammer11", "Commando38", "CoD4 Veteran 13", "TheGamerGalore", "agent00aa", "jonso", "KingEdd", "Ems C", "Leon81", "Kids love i", "Marshmilo", "makeshift SP", "Marc reed", "Kwoodky", "Marieleisele", "Jb2827", "TCTV", "Mofa", "Cat711", "FXDLS110", "GASMAN", "ectaylo", "Melony", "Slair", "ll1cool1", "DK4345", "Hothroy", "Zanderspike", "N Zero", "daSurge", "James0023", "Adyn Evans", "glumee", "Azucarmamacita", "dahc", "killer_kenne", "JustWill1982", "Theraven16", "Penutt2", "TheMonty", "Drdrums", "Midwestmikey", "Chrissy in ny", "Vman", "T. Lawson", "deshon", "MPock", "DaBurghLover", "Buck Bull Stallion", "MrGregory2000", "cliff90", "Barry1226", "Timbo88", "Assassionator", "Brannon M", "Johnson1720", "Disappointeddd", "JLAxxSPARTAN", "Henroc", "Seena", "RandiBeth", "Elope90", "Cfm1985", "BubonicChronic", "Buttztallion", "Digmyearth", "JackB72", "RobertKW", "Angelrose2", "Noz 37", "AikenAidan", "Kyoungblood", "SumoSpike", "Deathsprophet", "Bumzab", "nonxaznxboi", "Kerican", "Cycephenom", "DemonWolfC6", "Gamerguy", "Mkaz", "MRDSIGN", "Rcmm", "Angela W", "Shaun7979", "Blurr60", "Twan", "Res136", "Jcompu466", "Astraeus", "dRn00bies", "Nicole F", "David Armando", "spartan19", "BxBNicX", "The name John was taken", "Jrjbaj", "PetLover62", "Gamer Man77", "Patrick Giles", "Blackfeather666", "Dadadum", "Mr Dingus", "DarkEmpressAly", "mariofamily", "DaddyRay78", "Amanda Cooper", "JA II", "MM213", "Androl123", "RayMel5", "VALumiere", "Mikeiceman", "PM117ER", "Patrick w7", "JakeO62", "Rambo34", "jws1025", "Mattoxbox", "Ellie RA", "mdfsandman", "thearchie32", "boilerone", "Quando", "None, none", "Jos\u00e9viera264", "The truth", "A-bomb", "John26", "dmartinez097", "JPez1", "Luccon7", "xTheSandman72", "Doomcrew", "Da1trueS4nch3Z", "NexusWolf", "The1stAv3ng3r", "JCMB", "cheeseman585", "Sixkids", "Jerk unit", "TheArgyleWizard", "CampM", "Carebear43055", "CWB!", "RickZ", "The Doctor", " to its true 4K Glory. ", " doesnt do it.  and the 2nd is that a few times now", "TOGA Sarge", "JMCH", "Margot", "Skeet96", "MikeOxlong69", "TimB76", "LivinLow", "Neco46", "Cbj4892", "Shaqcool", "Unlockable51", "AceZero17X", "DumbMarsupial", "mn1meii", "Greg11", "Drew6977", "Shafi", "RedRaider", "cccmak126", "RomS", "Fivonefivo", "Imagine1959", "TomDawg1", "KarateBear", "ChristyJay", "AnnB", "Sleepy Ninja", "SD Dad", "Nyxian", "Izzy28", "lenosaurio", "Kelchyd", "Mipsie", "Heather0101", "Hutchworld", "Stude", "Ybreeze5", "Kenny H", "StevieC", "Jethro2312", "ACyberPoet", "Jojo2414", "Chasd", "McFang", " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "phyra", "Anthony87", "Richard947", "Jon bc", "Justmeow0417", "halfjew22", "Eglandon", "Kittencakes", "FireWife", "Brennan91", "Josr85", "Yoshi Fan1", "ShadowKnight92", "R00T666", "Mr Eric", "Dadgames", "Weasel771q", "Anthony Nussbaum", "kschneider1231", "Rwarmander", "Randy cox", "IrishRunner", "Ray T", "SDotRinney", "Prakers", "PaulS", "Whydoihavetohaveanickname", "Britan91", "Ezirkle", "Carlos G.", "Radwithab", "Meadow", "Jess2274", "MandM", "Cheeks784", "cwinniebear24", "Mommyof2boyz", "DiamondAries999", "yes: I recommend this product", "RachelA1020", "Court the Sport", "NSU_Ant", "IAMTHEWHEELMAN", "Alllly", "The monumental", "Sarge97502", "Holden Macaque", "Christow", "ghostdph", "carauza", "Charlie from VA", "emperordesslok", "Jack Badgerlord Fox", "SusieK", "Mebunny", "Drumfreak117", "TitusJ99", "MotherMayI", "LaBestia", "Lauri49", "jmrichard427", "Tom42", "Cowboy101084", "Mugen", "Suzey", "Concerned vizio tv owner.", "mh061", "Golam41", "KLP26", "Mdcsooc7", "Joedtip", "Cvoshell4", "Missy23", "Kiki2014", "Mama", "M3WILKERSON", "Beau C", "Lisalou5150", "Videogamegente", "JJ77GB", "JDHarsh", "Greenender23", "Arjei Lynne", "Abish", "Simi90", "Davebasura", "JCMA", "Pappabear03187", "Liberty25", "Ghost Dylan", "Jasper L.", "VinnyD", "adrianiii", "Bgerald", "JON205", "Joey D215", "TomsVizio", "Ricw", "JustJess76", "Pvtcarlswife"], "data": [1, 1, 1, 1, 23, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 14, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "reviewer_name", "count": 416, "min": " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "max": "zachR"}, {"values": {"label": ["look out gamerz, here comez awsome", "Great looking screen!", "Quality", "Unbelievable picture quality!", "0", "Vizio OLED", "Bugs", "Glass like screen", "Amazing 4k picture", "Great features", "Great picture and a good price", "Awesomeness!", "Fantastic product", "Not all as it seems", "Beautiful design - Awesome feel - Must get one!", "Simply amazing", "Limited Edition Halo Controller", "Beautiful Elite Series 2", "Firing on all cylinders.", "Rad sauce", "Excellent purchase.", "Yoshi switch game", "Awesome game if you like the Mario brothers games.", "Awsome game...", "Awesome Game for Children!", "Poochy", "Not bad", "Opinion on Yoshi Crafted World", "Another Win-tendo Jewel!!", "Good game", "Best Nintendo game I ever played!", "Brilliant picture", "Absolutely amazing picture quality", "This tv is vibrant", "10 months ago", "Great picture, confusing to turn on", "Nice tv", "Gorgeous picture!", "Love this TV!!", "Great tv for value", "Best tv for the price", "TV is awesome!!", "Xbox Elite Controller 2 - Halo Edition", "Premium Halo Xbox Elite Controller", "Amazing!", "Great controller but late shipping", "Best Controller", "Great controller", "Halo Elite Series 2 Controller", "Buy one if you can find it!", "Halo Infinite Controller:)", "A High Quality Masterpiece", "Yoshi party", "BUY IT", "Tank Yoshi and the layered egg aiming", "Yoshi's Crafted World", "Good", "Super awesome", "1 or 2 player fun!", "Game play", "Love It", "Fun repeat play factor", "Outstanding!", "Deep blacks", "Great TV for the price", "Amazing tv", "11 months ago", "Great features!", "Great price, Vizio is a reliable brand", "Good TV for the Price but has some issues", "Beautiful oled screen", "Looks great!", "Best Controller!", "Elite  Series 2 Halo Wireless Controller", "Amazing", "Great looking controller!", "Buttons don\u2019t register", "Excellent controller", "Awesome controller", "Solid controller", "This is awesome design", "Awesome!", "Family time", "Yoshi Fun!", "2 years ago", "Awesome", "Great game!", "Yoshi's crafted world", "gud", "Yoshi's Crafted World... Buy it TODAY", "Classic", "Yoshi's crafted world is fun", "Excellent product", "Awesome Features!", "Buggy like no tomorrow", "Almost but not quite", "Great Clarity, Very Very buggy software.", "Gorgeous screen with a few quirks", "Vizio OLED TV", "Love / Hate Relationship", "Excellent tv great picture", "Love it", "Incredible controller!", "Halo Infinite Elite Series 2 Controller", "Halo lovers & competitive players dream", "Xbox elite series 2", "Microsoft Elite 2 Pro Controller Halo Edition", "Beautiful controller", "Worth every penny.", "It's alright", "Easy to pick up, hard to master", "Fun new twist on a Yoshi", "It\u2019s okay", "A Unique 3D Adventure that's hard to resist", "Cute Yoshi game", "A wonderful game", "Yoshi", "Great Game!", "Great game.", "Not as good as it looks", "I don't see how people can't like it", "Great...but...", "Best RTS game made so far", "good, but a little disappointed", "SC2? or sometihng completely  different?", "Crafted Family Fun", "He love it", "Big replay value", "Retro", "Kids love it", "Awesome, Nothing too Over the top", "The game", "Gotta get it!", "Great fun for everyone.", "Reasonable pricing, great OLED", "Very Nice", "Awesome picture", "Great Picture", "Picture is good, the firmware needs improvement", "Really Good TV, I\u2019m not a gamer.", "Great Picture/Horrible Software", "Beautiful picture and great sound!", "Beautiful picture, disappointing software...", "Great colors sometimes", "Xbox Halo Elite Series 2 Controller thoughts.", "Oh so pretty!", "Issues with mine, probably not everyone.", "Great Halo Controller", "Finish the fight!", "Master Chief approves", "Love this controller.", "Coolest controller", "Halo Infinite Elite Controller", "Great once I got the working product.", "Nintendo Just KNOWS Fun!", "Yoshis crafter world", "Cute and fun", "Yoshi crushes another one outta the park!!", "More Yoshi fun.", "Yoshi\u2019s Crafted World", "Beautiful game but a bit overpriced.", "Don\u2019t miss this if you like platformers!", "Great game for kids and adults", "Oled 55in TV", "Blown Away!!!!", "1 year ago", "Awesome picture, firmware need work", "OK Updates would make it better", "Excellent Oled", "Super crisp picture quality", "Okay", "Vizio oled h1", "World Class Display OLED", "Best Picture Ever", "Sticky R thumbstick Resistance.", "Great controller now a little better", "Y button doesnt work all the time.", "Xbox Halo Elite 2 Controller", "Halo LE Elite 2", "Faulty product with known issues", "Xbox Elite Controller Series 2 Halo Edition", "Elite controller", "Halo Elite controller", "Amazing!!", "Not a good game", "I love it!", "Yoshi has never been better.", "Easy but fun", "A fun single player game", "It do like be so it be good", "Cute, crafty fun!", "Surprisingly fun", "You won\u2019t be disappointed if you\u2019re a Yoshi fan!", "Great game and fun", "So where is the GAME?", "This is the WORST SC game peroid!", "dont touch it? i think i will", "Another Dissapointment of 2010 Gaming", "Sorry I'm having a hard time speaking its so Awesome!!", "Do not touch this game with a 10-foot pole", "Tons of fun", "SC 2 - mediocre game.", "Way to destroy the best RTS series ever made!", "Nothing like the first two!", "Great picture quality", "Just short of 5", "Great Value For OLED", "Beautiful Thing", "Incredibly Beautiful Display", "To many problems out the box.", "Skinny", "Price to feature king!", "Great picture", "Great video!", "Beautiful", "Solid slaying ordanince", "GAME CHANGER.", "Very Good", "Weapon of choice for Halo Infinite", "Best controller ever", "Sickest looking Halo Controller Ever", "Solid improvement over the Series 1", "Halo Fanatic Gift", "Getting what you want", "Simple game for Beginning Gamers", "#1", "Fun!", "It's okay, but not the best Yoshi title.", "Yoshi\u2019s crafted world", "Yoshi's Crafted World Review", "Yoshis Crafted World", "Great", "One of the best games!", "A fun RTS", "Sooooo disapointing", "Really nice Controller", "The best Xbox Controller for a Halo fan!!!", "Halo infinite Elite Controller", "Looks pretty - never worked", "Fast shipping. Awesome controller", "Exactly what I was looking for", "Bumpers", "Halo Elite Controller", "High quality controller", "Great picture.  easy setup", "Worth the Money!!!", "Great picture!", "No Slouch", "Wonderful Christmas present from the kids", "Bad picture", "Amazing TV", "Great features, awesome picture, and easy set up.", "Pristine Image!", "Amazing controller", "Fun game!", "Green mean Machine.", "Yoshi is awesome", "A wonderful addition to the Yoshi game series", "Great game", "Love Yoshi!!", "A Modern Take on Yoshi's Story", "Good investment", "A definitely must pickup", "Fun, Beautiful, and Appropriately Challenging", "Love it.", "Great picture Quality", "Need better smart app!", "Great features & Amazing color and clarity", "Great so far!", "Stunning Picture", " the TV just doesnt see any input on HDMI 1", "Mr", "Color", "Fun!!", "Fun With Friends", "Super fun", "Very Hard to Play!", "Nice casual game", "Game of the year", "It ok", "HORRENDOUS!!!!", "horrible", "Great price", "Crystal clear 4k", "Lot of issues with new OLED TV", "Great OLED TV", "Perfect.", "Affordable OLED", "Excellent picture! Very crisp and defined", "Great tv", "Amazing picture", "Bad Trailer, Horrible Game", "Fun", "Couldn\u2019t hold interest", "Fun for all ages", "Yoshi is great", "Great for playing, nightmare for completing", "Yoshi Crafted World", "Super cute and relaxing", "Absolute gem", "Kids will love it!!", "Stunning picture", "Fantastic TV", "Great tv but needs patches as soon as possible", "Love the cost and love the quality overall", "Amazing how far TV has come in just a few years", "EXCELLANT OLED UHD TV", "Absolutely love this TV!", "So many features", "Troublesome TV with amazing potential", " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "Fun 2 player", "Nintendo impressed me again.", "Nintendo fun for everyone!", "Perfect for the little ones", "Family game", "Great graphics, 2 player gameplay awesome", "Awesome game", "Sooo cute~ <3", "Brings out the kid in a 33 year old.", "Unique and colorful world", "Great game for all ages", "Overall Gameplay", "Yoshi at his best!", "Great game for the family", "Another Great Nintendo Game", "Fun to relax with", "Won't turn on", "Love this thing", "The picture!", "Great picture great sound overall a great TV", "Beyond excellent", "Beautiful picture and sound.  Sluggish controls", "Great picture but OS is a bit slow", "Excellent picture quality!", "Enhances Game Play and Fits Perfectly in Hands", "Wirelesa Nintendo Switch Controller", "Eaysy to Use", "excellent value for the cost", "Such a great design", "Enhanced Wireless!!!", "Very good but not perfect.", "3 years ago", "Amazing Controller!", "Like DarkSouls but with Cars! :) Love it!!!!", "Skip it.", "Lots of Fun", "Let the dirt fly and the motor cry", "Wrc8", "Crazy good WRC game.\\m/", "WRC 8 FIA World Rally Championship is great game.", "Yoshi\u2019s crafted world game", "GET THIS GAME!", "Its yoshi!", "Another quality Switch release", "Weaponized Cuteness at it's Finest", "Cute stuff", "Love love love", "Awesome game for all", "Yoshi's Flabby World", "Crafty Business", "Great tv quality - could use a microphone remote", "Beautiful color!", "Fantastic picture", "Great but...", "What a picture!", "Terrible software", "Beautiful Picture", "Great Features!", "Great Features", "Great product!", "Love", "Great product!!", "So retro!", "Works great", "Love it!", "Great for younger kids", "Fun game, awesome graphics", "Cute and fun!", "Needs a better soundtrack.", "Just my thoughts", "Short and sweet", "Beautifully Developed!", "My Yoshi Experience", "OLED55H-1 Sucks!", "Has everything you want for an Oled Tv", "All the bells and whistles!", "Great picture! Great sound!", "Great Choice", "Awesome TV for the PS5 !", "Almost great for gaming", "Great controller!!", "Great bonus features and love graphics"], "data": [56, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 5, 1, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 6, 3, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "review_title", "count": 393, "min": " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "max": "look out gamerz, here comez awsome"}, {"values": {"label": ["My new OLED is a upgrade and it's great!  This is my third Vizio TV to replace my first one that went blank after 12 years of stellar service. (I'm even thinking of getting it repaired if possible for the great grand kids.)   I have always liked the picture quality and the price of Vizio's. You cant go wrong.", "Rating is really a 4.5 but that's unavailable. The unit looks great both in and off. It is short on physical features (Bluetooth and whatnot) but I use both external sound and media units. This is a great OLED to buy if you want a great TV at a reasonable price.", "I\u2019m quite pleased with the entire product as a whole. The quality of picture and sound really speaks for itself when in use.", "I\u2019ve only had my new Visio OLED65 mounted and operating for 3 days now and I\u2019m like a kid who after Christmas can\u2019t get enough of his favorite gift. The brightness and clarity of the picture is another huge by step forward in the evolution of  the television. I find myself seeking out programming that will showcase the quality of the picture regardless of the genre or intended audience. Some of the newer, computer generated cartoons, lack any redeemable qualities (imho) save for the incredible graphics, which are stunningly colorful, bright, and almost as vivid as real life. Nature documentaries and shows involving space, especially when shot in 4K are almost mesmerizing. When I bought my 65\u201d HD tv about 10 years ago I thought I was witnessing the best quality picture that could be produced by anything this side of a mirror. I was wrong, and happily so. If you\u2019re on the fence, like I was, about whether to replace a broken or outdated television with another of similar HD quality, that is to say \u201cstandard high definition\u201d...don\u2019t even waste your time. It\u2019s increasingly difficult to find as 4K is becoming ubiquitous, so that is pretty much a given. On the subject of spending your hard earned money on the more expensive OLED technology....if you have the means, or can somehow figure out how to acquire the means...my advice is definitely do so. Whether you\u2019re into movies, sports, gaming, or even nature/space shows, you will be amazed at the latest leap in picture quality and brightness. And VIZIO offers all the quality at a substantial savings. Putting the absolute best technology within the reach of those of us for whom the strength of the stock market makes absolutely no difference to our bottom line. ", "10 months ago", "The picture is very crisp and the blacks very dark.  Beautiful color.  The Vizio SmartCast app is fantastic.  The response from selections is much faster than the traditional supplied remote.  They update it from time to time with most recent voice search function", "Picture quality is amazing, however within a week from purchasing the tv will not turn on unless I unplug and plug it back in.", "Image is so clear I feel like I\u2019m on the set of the shows.", "I purchased this TV about 2 weeks ago and am blown away by the crisp, 4k picture.  I would definitely recommend this TV to someone considering an upgrade.", "I got this today 2/25 for my birthday present from my son as a surprise gift, without any prior guess or information at all. My previous one in my master bed room was quite old Samsung 50\u201d PD TV, which was ok but heavy and bulky compared to this. ", "Best price on an OLED tv. Has a great picture and is easy to navigate the menus and connect via apple or Android devices. I always bought LG OLED tvs because I liked their quality and features. But so far, Vizio is just as good and a better price.", "Just like the elite controller v2 but halo edition one of the best controllers out there if you do not have one elite\u2019s controller\u2019s are must have.", "First foray with the elite controller. Nothing but impressed. The weight in the hand, the grip, the buttons, and changeable joysticks are all amazing. Even better is the Masterchief finish. If you can't find the halo edition I'd recommend trying the regular elite series 2, I'll never use a different Xbox controller again.", "Really bought this for the blue mode leds, just to find out they are still white leds with a blue coating on them and not that bright. All in all still an elite controller.", "At first I was asking myself why spend the crazy money on a controller!  I too am now a believer.  From the case to cable to finally making its way to the actual controller - it is special in every way.  There is so much detail to this controller.  Lets not forget it is a limited edition and carries a beautiful Halo design.", "The build of this controller is perfect and the details are amazing.", "Cortana herself lives within this controller. I am one with Halo", "This controller has always been great but this one is a work of art.", "Even lighter than my previously owned Elite Series 2, thought it would be heavier. The buttons, the triggers, the analogue sticks, everything operates better than the original Elite Series 2 at launch. ", "14 days ago", "These controllers I think are worth the money. One of my favorite things is that I no longer need double A batteries. It comes with a charging port. And how I can customize the buttons is rad", "Love the controller use it everytime I play. The remote plays excellent. Be carefull of the back buttons though do to being removable I feel like they will wear out faster than most.", "Yoshi game was awesome and still playing it thank u sooo much GameStop :))", "Great game. You will enjoy it. Good price worth it I Always have enjoyed the super Mario series since Mario brothers in the arcade", "My son loves to play this game, he's been playing it every day since he got it... Great Job!!!", "The game is great for a family and younger children. My 4 year old wnjoys the game.", "It would be better if Poochy was in all of the levels.", "It's cute and fun, but feels a little lacking in fulfilling its potential.", "Good game including game play and music also music", "The quirky style that shined in Yoshi\u2019s Wooly World has gotten a serious upgrade in this new gem from Nintendo.  Like all it\u2019s first-party titles, this game is nearly flawless.", "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "2 years ago", "She loves it good game. It easy to play and addicting.", "Yoshi\u2018s crafted world is the best Nintendo game I ever played since Yoshi\u2018s woolly world! Lots of hard challenges to complete and it\u2019s so much fun! I love this game!", "I recently bought this TV and was blown as easy with the picture quality. I never want not to go back to LED.", "I went from an old LCD TV to this Ola TV and the picture quality is amazing this TV has a deep as blocks of ever seen the sound quality is fantastic I could not be happier!", "Bought this yesterday and I am really excited. I saw how clear the picture was and had to have it. Won out over my husband who wanted the Sony.", "5", "I've had this TV for 3 weeks now, so far I really like the picture. it's hooked up to a vizio 2.1 sound bar. it is confusing when I 1st turn the TV on,  I get the Vizio sign on the screen, a few moments later the picture comes on with the TV speakers, then the tv shuts off, a few seconds pass and he comes back on with the sidebar act of and everything is OK then don't understand why it goes off comes on goes off and comes back on", "Great TV at at a reasonable price.  Happy so far with purchase", "I love that I found an OLED that did not break the bank. The picture quality is amazing and VCast is great! The only downside is the sound and it\u2019s only a small complaint on the quality.", "Easy setup and there you go...I love VIZIO TV. I will continue to buy VIZIO TV's !", "Very good image quality, beautiful design on a affordable price", "Oled is king I\u2019ll never go back to traditional led TVs again it\u2019s just not even in the same ballpark you can\u2019t beat the picture quality of and oled", "\"I'm a true fan of vizio. My old 36\"\" Vizio lasted me a very long time and that's the reason why I decided to stick with vizio. Visuals are amazing on this OLED. There are some bugs but they can be repaired by software update patches released by vizio. I also bought the Vizio Atmos soundbar and its absolutely freegin awesome. Only issue I've experienced is the sound bar doesnt activate on its own and I usually have to cycle through the settings to reactivate through HDMI-ARC. Im.sure theres a fix for it. Overall I'm happy with it and still feel vizio makes great products.\"", "It\u2019s amazing! Works perfect, just as an elite controller should. The best part is the paint job! 10/10 recommend.", "This controller provides excellent fine motor control with adjustable thumbstick tension, and removable back peddles.  It works great especially for a first person shooting game like Halo infinite.  It\u2019s on the pricey side, but you know this is a premium product for serious gamers.", "Best Xbox controller I've owned. Worth every penny. Owned for a month with no issues. Only con is I wish there were replacement joysticks, I love these but i know I'm going to wear them out, and I won't have Master Cheif green ones to replace :/", "Great controller. Purchase was definitely worth it. The only problem was the finalizing my payment and the late shipment through GameStop.", "This controller is incredibly responsive. It\u2019s fully customizable with lots of additional features & settings that can be adjusted to your preferences. I was skeptical at first due to the price but after a fair amount of use I wouldn\u2019t game with anything else", "Love the controller no probs with it the first one was lost but customer service made sure I got another one and in a timely manner", "SO BEAUTIFUL! Great addition to my Halo collection. The detail is just amazing. Performs like any other elite series 2 but that color scheme is just phenomenal.", "great controller, beautiful design, ultimate customization", "Doesn\u2019t even feel like an elite controller. But it does feel like an advance one with the grips and joystick converters. Not really worth the money but the design is amazing and there is no battery pack in the back, it\u2019s all built in, like a phone. Over all I love it! I\u2019m such a Halo fan it was a no brainer not to get.", "It feels great, it enhances gameplay thanks to the paddles and customizability, and it looks absolutely beautiful.", "Tons of fun to play with my kids! They love the look and ease of play!", "Awsome title. Loads of fun! My kids and I love it!", "This game is amazing! Almost had given up on the Switch, but this game saved that from happening! It's a great game for people of all ages!", "Fun and cute, but some of the mechanics don't work that well (Tank Yoshi and the mutil-layer egg aiming). Still fun, but needs improvement in the mentioned areas. See Caddicarus' analysis.", "It's awesome! The graphics make everything look like cardboard!", "Fun title that is a good installment to the series. A little bit easy to beat, but has plenty of extras to keep entertained while going for that 100%", "This game was fir my youngest, he picked it out from good reviews online.", "It can be 1 or 2 players. It\u2019s pretty simple mechanics, but there are so many creative was to use them. And there is a lot of replay ability. Me and wife have a blast.", "It\u2019s a game that\u2019s for kids and for adults to enjoy", "Purchased this TV a couple of weeks ago as my existing TV was 10+ years old and needed an upgrade.  Had a salesman take the time to show me the differences between an OLED and other projection systems.  Couldn't be happier with the picture that I am not experiencing.", "My wife loves it. She even lets me play the co-op mode with her sometimes. I\u2019m not that into gaming, but this game is really fun!", "This OLED is Excellent, Very Easy to Operate. I imagine that Someone may Complain but I am certain that it will be a Tribal thing.", "Great tv. I like the vizio apps.the sound is nothing special but if you are buying an OLED you probably have another option. The best part is the deep true black. The colors are very vibrant. I am very satisfied.", "Has some bugs and I know Vizio will work on them a little faster. Especially with the new Xbox series x and ps5. Other than that can\u2019t beat the price for an Oled TV. Great picture. Now Vizio please get the VRR @ 4K120 to work and give us the option to change all picture setting in game mode. No settings should be blanked out.", "I bought this for my birthday and it has been amazing!", "I love the tv and everything about it. I am a big fan of Vizio TVs, except for the sound, you will need a soundbar.", "All my Vizio TVs have held up under use. Hoping the new OLEDs will get firmware updates and continue to make this TV great now and in the future", "Very good OLED tv for the price but it does have some issues with powering on.  If you leave it idle for too long it will \u201cgo to sleep\u201d and the only way to cut it back on is to power cycle.  Other than that I love it.", "Beautiful screen! Awesome price but full of bugs. On my set had to constantly unplug my tv from the  power supply to get it to come on. Worked well with my xbox series x just a few glitches here and there. No 4k 120 for the ps5 so I had to use the 4k 60 hdmi slot. I feel this tv is still in beta and needs alot of firmware updates to address system performance issues.", "I bought this tv because I wanted to try out OLED for the first time. I\u2019m glad I bought it. The colors and contrast are on point. The price compared to the competition in the same category can\u2019t be beat. Super happy.", "Everything I wanted from a controller, in an amazing custom paint job!", "The design is very remarkable great addition to the collection of Halo Series X Console Bundle it a must have.", "I love the pro controller and this one is absolutely beautiful. Must buy", "Works good its perfect for people who game hard-core because it don't ware out as fast and last a long time cheaply priced perfect for your gaming set up!", "I love the classic colors of master Chief! Looks great with my Halo Theme Xbox!", "AXYB buttons do no register unless they are 100% fully pressed in. Annoying there is no pressure sensitivity!", "This no longer available item is excellent and you should buy one, but you can\u2019t.", "Great controller love the way it feels and all the little halo touches it has.", "So far I love the feel and look of this controller. Need to wait and see how the grips hold up to give it a 5 star rating.", "I was lucky to cop a limited edition elite controller  waiting for halo campaign to used", "This game has amazing graphics and amazing levels.", "It fun for your family and if you have kids they will enjoy hours of fun", "I loved the Yoshi yarn game on the 3DS & I love the New Yoshi Yarn game on the switch.", "Great game love every minute of it fun and entertaining", "Excellent condition. Awesome game. My fiance is enjoying it a lot.", "One of the best games I've played in a while absolutely beautiful \u2764\ufe0f", "10/10, it is a very creative, thinking out of the box game, it might be a bit easy, but it is fun to and I will 100% it even if it's the last thing I do.", "OMG, this is the ultimate of fun, silly, fantasy escapism. Sit back, relax, and give yourself an hour to let Yoshi explore the hand-made world of tape, cardboard, and pipe cleaners", "Takes me back to the 90's. Thank you Nintendo! and thank you GameStop for always having great prices and what I want in stock!", "really cute game and its pretty easy for the non gamer . its great to have a son who can help you too", "I purchased several television and soundbars from Vizio from the M series and the SB38", "I purchased this OLED over a week ago along with the Vizio Elevate Soundbar for my new Xbox Series X. I truly appreciate the picture quality experience that this TV can offer. The performance of this TV and Soundbar surely surpass its price point. I strongly recommend this TV for anyone that wants the best performance for the money. I will dare to say that based on my research, this TV will absolutely rival other brands at much more expensive price points.", "I had purchased this knowing it was going to not be perfect but omg. I had to go in and change my ps4 setting for video to even use the menu settings at all. I also cannot use netflix, it won't open from smartcast but when I press the button on the remote it freezes the whole tv on a black screen. This is a serious deal breaking bug.", "I purchased this a week ago and so far so good it's to early to make a define decision.", "I wanted to buy this for long but I am a bit disappointed. I guess my expectations were high but not really sky high.", "11 months ago", "The Best: The TV offers great contrast and clarity. ", "4", "This screen is a beauty. Very sharp, good colors and decent brightness. I hook it up to my PC for gaming and occasionally have some quirks. In the middle of a game it says no signal detected and shuts off. Sometimes it isn't detected by the PC. ", "I bought this 2 weeks ago and has a great picture. It is good for gaming on the xbox series one. The only issue is the VRR does not work and has a distorted picture when I enable it.", "I love the pristine picture, with saturated accurate colors. However, I absolutely hate not being able to turn off the fluctuating luminance. The only thing that spoils a great review is the brightness that changes with how dark the screen is to increase contrast. The TV does not need it, and if I knew who the engineer was that omitted the off selection for this annoyance, I would offer him a Vizio necklace.", "The only issue I have is. I own both ps5 and xbox series x and if I use hdmi ports 2 and 3 4k 120hz I have to unplug the tv every time I turn the tv on I worked around this by using ports 1 and 4 so I'm stuck at 4k 60hz on both consoles unless I want to constantly unplug the tv for it to work but over all I love the oled tv and you have to get a polarized power cable because vizio gives you a non polarized power cable that does not fit the TV power port", "Great item and excellent condition. Works awesome!", "Very cool design, feels great and comfortable in my hands.", "This Halo Infinite Elite Series 2 controller is so awesome with the Halo theme on it, it's beautiful.  Being able to customize the controller to my liking ranging from the controller sticks, d-pad, and how short you want your trigger throw is freaking amazing compared to a normal controller.  Only con is that it's expensive, but once you open up the whole package and unboxing experience it is well worth the price.", "Packaging was 5 stars alone but the feel and customizability of the control and the design made it over the top and it came with the full game download", "Love this controller glad GameStop pro was lookin out and it came in a decent time", "The Microsoft Elite 2 Pro Controller is perfect for the console gamer of any level. The fact that it\u2019s the Halo Edition makes it that much better! I love the controller and I\u2019m glad they came out with this limited edition.", "This is a piece of art, amazing!", "Very well design and heavy feeling, it truly makes you feel like you have a better-quality controller compared to the regular Xbox Series X controller. Would recommend to any gamer specially Halo fan!", "This was my first elite controller and I love it, it\u2019s definitely a game changer and looks beautiful.", "The controller is great but I am experiencing stick drift just two days after receiving it.", "Awesome, love this character! Love the whole game!!!", "Excellent for a relaxing time. Can be challenging if you want to %100 every level.", "Fun and exciting game if you like Yoshi and his classic games", "The game is adorable, the music isn't ear-splitting, and the levels themselves are fun. However, it ends up becoming a chore if you intend to 100% the game with multiple scavenger hunts per stage with a flip-side that is dedicated to finding three dogs under a certain amount of time for the full reward. Ultimately, it's cute and full of heart, but is not recommended to just sit down and 100% in one sitting. It's quick, easy fun enjoyable in small bursts either alone or with a friend.", "I\u2019m not a big gamer. I was so excited when this came out I had to get it. I guess I just expected more", "Nostalgically entertaining and unique 3D adventure that will make it hard for you to put the controller down", "Bought this game for my 12 yr old's birthday.  He really likes to play in multiplayer mode with me.  Definitely fun bonding time!  So far it has been fairly easy to finish each section, without being too easy (working together helps).  I do hope it gets a little harder as we get a little further in.", "Good to see Yoshi on the switch, but it is a slight step down from Yoshi\u2018s woolly world", "Truly amazing. The art style is unique and the gameplay is equally fun as it is relaxing and rewarding.", "I got this game so me and my gf can play together. Its fun and quirky but gets challenging", "Some folks didn't like this game....thought it didn't measure up to the original or Forged Alliance. Boy, are they wrong! I thought this game was great! Maybe the tech tree is a tiny bit smaller, but the game more than makes up for it with new, cool units, great graphics and effects, and awesome explosions. In fairness, I was a little perturbed that that more than one engineer cannot build on the same structure, as in the previous games, but then again, the structures go up pretty quick. Happy hunting!", "Great game. Nothing bad about it. It has many great features and story mode is cool. I think it is awesome.", "This game, in my opinion, is WAAY better than C&C and is very good in gameplay and everything else. Some people say that he storyline is horrible, but that doesn't really effect me since I just play on the skirmish and online. The story line isn't really a big concern. I just play it when I'm bored.", "The story is extremely slow and confusing until you get later into it. It forces you to play as a certain faction first, then another and end with the Cybrans. You should definitely try out the originals, they are ten times better then this. Overall, the gameplay is about the same as the last game, the graphics are much better and the sound and music is again amazing. However, the story development needs more work.", "alright here comes the best game eva, anyway herz a shout out to all of the peeps that think this game is the best eva u rock 4 ur good reviews. anyway the graphics might not be as good as the first but the graphics to me doesn't matter at all since the campaign is awsome and a good storyline. along with the campaign the units and multiplayer maps and experimentals and ect. but i honestly i think the unit count is very low there should be a higher unit count because people have things to do units to make and probably alot of them too and places 4 them to go like in others bases and stuff.", "This game is the absolute best RTS game you can play. And I have played alot of RTS games, so I know what I'm talking about. This game has very good graphics, and they will be even more enjoyable the more you paly the game, considering that you notice things like shadows cast by the terrain, and details such as distortion coming out of a walkers exhaust pipes. This game also has an amazing command system. There are more controls and options you can use to make your army do anything imaginable. This game also includes extra experimental weapons, which they balanced much better than on the first one, and actually have a general purpose rather than to walk into the enemies base and kill. And most people have heard that the nukes on the second ones are pitiful compared to the first. The difference is that on the first one, it was a bright light and smoke covering a large area of the map. On this one, it might be only a little bit smaller, but it is insanely detailed, in the fact that an extremely large portion of the map gets lit up in red, and things are actually moving with the explosion as they would in real life. When it touches water it makes steam and jets it into the air, so nukes on this one are much more enjoyable to watch, regardless of what you've heard. All in all, 10 stars.", "I don't know why people don't like this game, because if you like real-time strategy or RTS, this is the game to get.                                                                                                                                                                                                      I usually only play online and play skirmishes to get better or if no one is as good as me because I can destroy anyone.                                                                                                                                                                                                  I am a veteran at Call of Duty Modern Warfare 1 and 2 so don't try and kill me or fight me.", "What Gas Powered Games have done here is amazing, this game is packed with more units, new features, less glitches, and a lot more excitment. what i was really taken with is that there is no +mass or -mass anymore, its all based on real numbers. the tech tree feature is amazing, allowing you to upgrade old units to make them more lethal later in the game. a lot of the good things are still their like the cybran ships being able to crawl onto land. however, the story is disappointing, character extremely lack any sort of personality and emotions. also, for high end computers, this game has surprising lower graphics, units like the UEF titan look a little bit more like legos, even though some units have good deatil, others are flat out bad, although you have to appreciate that they are trying to let computers with lower hardware able to run this game. online play and skirmish mode are fun.", "\"Supreme Commander 2 is different than it's \"\"predecessors\"\"", "2 player fun for dad and 10 year old. Replay value is high with extra modes after completion.", "My son been waiting on this game for a long time. But he got it now and he love it.", "I'm in love with everything from this game and I appreciate the replay value as well. You can go back to a level and find new tasks/goals", "Brings back so many memories, I absolutely love this game.", "It actually looks crafty and there is so much to explore and you can", "The cutesy graphics and creative levels definitely added to the child-like wonder and fun of the game. Even the creepier levels were cute, but still gave you goosebumps at the same time.", "I like the simple creativity, nothing too over the top just very creative. It\u2019s sort of too easy so it\u2019s something to pass time with. Overall a good purchase", "Fun imaginative and challenging at times great deal of replay ability", "Fantastic game! The level designs are inventive and memorable.  I haven't had this much fun with a game since the days of the NES/Genesis!", "This game is so much fun.  You can easily run though a level or you can take your time and find all the hidden things.  I love to play it and so does my daughter!", "I\u2019ve been very hesitant to upgrade to an OLED because I couldn\u2019t justify the cost. But when Vizio jumped into the OLED market, I was very excited. Other brands\u2019 \u201cbudget OLEDs\u201d cut corners, whereas Vizio\u2019s track record with reasonably priced premium TVs is outstanding.", "0", "This is my 3rd Vizio TV. 1st OLED. They are all 5 star products!", "Easy to set up, to program, and assemble. Smart TV is very convenient.", "I bought this TV right before Thanksgiving and have enjoyed it ever since. I wanted a Smart TV and this did not disappoint. I bought a smaller one for my bedroom.", "As the title states, the picture is good, as expected. The only downside so far is that there are SERIOUS handshaking issues between this tv and my PS5 console. Sometimes, Ive got a black screen, and must reboot the tv to get the PS5 display to come up. Also, the tv menu will lock you out of several key picture adjustments during PS5 use. With some adjustments to the firmware to fix these issues, this tv would be nearly perfect.", "I haven\u2019t had an issue with this television like others. From what I have read, most issues are about gaming compatibility. 4.7 / 10", "Severe Issues with settings. None remain when set, audio passthrough is a nightmare. Motion settings are impossible to turn off for all HDR formats. Doesn't handle 24p content well from anything other than blu-ray source.", "This is my fourth Vizio tv and they just keep getting better. Bread brand and quality product.", "I am very pleased with the quality and picture on this TV.  I was disappointed that the streaming software runs at 720p since this is a 4K TV.  I added a 4K Firestick to resolve the issue.  Otherwise I am very happy with the design and function of this TV.", "I bought it about three weeks ago, and sometimes I am impressed with the crisp colors produced. There are times not so much, I  was watching something on Netflix the other day, and all the color except red looked good. The red color was like pigmentated almost as if it were a hole where ever there was red. I also noticed that when streaming sports live action it blurs a lot. I  am not sure that isn't the feed, but it is annoying.", "Extremely great controller! It's my first pro controller and I loved it. The design and color make it complete. Had to get used to the paddles on the back, but afterwards it made doing certain things in games easier!", "Beautiful controller! A must have for any Halo fan!", "Right joystick jumps and feels stuck sometimes. Paint in that same joystick that is gunmetal is gone and when the stick is rotated you can see the silver beneath. Wish I could have returned, but with how these are gone everywhere I don\u2019t know how I would have gotten another one\u2026", "Great design and awesome feel. This controller would be perfect if not for the horrible quality control issue Microsoft has on their controllers. Mine had stock drift, a messed up button, and a bent paddle, so I\u2019m waiting on a replacement. Fingers crossed.", "A controller worthy of a spartan you'll never play the same ever again with interchangeable thumbsticks, d-pad and mappable paddles you'll be unstoppable in any engagement.", "Happy to add this to the Halo collection! She\u2019s a beauty.", "Solid feeling controller. Love the design and halo theme of it", "Multiple parts that can be swapped. Comes with an in game code that gives a weapon charm", "Best controller ever. Toss a Halo Infinite skin on it makes it that much better. Recommend to anyone.", "Thumbstick issues straight out of box. Had to send back to Microsoft to exchange for working one. After that it\u2019s wonderful. More of a quality control issue on Microsoft\u2019s end than gamestops fault, however when I reached out to GameStop about the purchase I was told they didn\u2019t have any to replace it with. Just a general pain in the butt just for me to get a working product that I paid a lot of money for.", "Typical, classic, Nintendo fun! Challenging? Not very. Enjoyable from beginning to end? Absolutely!", "Super fun, a lot of challenges and game time. Since I bought it I haven\u2019t put it down.", "Not a hard game but a good one to relax and play after work.", "If you like yoshi, you can\u2019t go wrong here. Game is a masterpiece and provides decent challenges for even the seasoned gamer.", "More whimsical Yoshi fun that innovates on the last game without changing what we know and love.  A bit easy but still fun & heartwarming.", "Fun game, but too short.  Beat the game after only three days of casual play.", "Yoshi\u2019s Crafted World is fun and a bit challenging.  My 10-year-old loves it and I can play it with him.  Yoshi!", "Really adorable game with an imaginative landscape. This game is cute and colorful and fun for all ages. Collectibles could be a little more satisfying however, it doesn\u2019t ruin the game. Developers did a great job but the game should be priced about $20 lower.", "A fun platformer with charming visuals, interesting puzzles, and a good level of difficulty!", "An extremely fun game not only for my little sister but for me too! Easy enough for her to enjoy but it has some challenges that allows me to have fun as well.", "Oled makes a big difference in the sharpness of the picture and it can be watched from an angle.  Very happy with my new TV", "\"I bought the 55\"\" for the bedroom and at this price you cant find a better Oled. Im was a Sony guy but now I dont have to pay the premium to be lol. Finally a company that is challenging the big dogs and winning!!!!", "I realize Visio is new to OLED and this is their first go at them .., that being said, this tv has potential and I knew saving money over LG would come with some growing pains. I\u2019ve experienced several anomalies that required a power cycle to correct. Some of those issues were sound no video on all inputs (including OTA & web channels), syncing with true 120fps 4K sources. ", "Some features are missing and broken but when it works its great!", "I\u2019ve had this tv for almost 2 months and completely happy with the performance and picture", "I\u2019m happy that I made this choice. I sincerely hope this product lasts more than 15 - 20 years", "Great picture lack of updates. Need support for 1440p and Vrr 4K 120. Also android fully baked in", "This TV is my first oled.  The picture is breathtaking but the television itself has some problems.  Sometimes the television will not connect to the smart cast. Sometimes the TV will not even power on without having to pull the power plug and plugging it back in. But overall I am happy with this television. We have been promised all these things to be fixed and a future firmware update. Fingers crossed.", "I was a bit nervous buying this set being that Vizo just started making OLED's. I can tell you know after I have it in my house. IT IS BEAUTIFUL! I can not believe the qualitly of the picture. I have this set  in my main room and we have a gaming 4k TV on the same wall. Side by side this display makes the other 4k look cheap (btw... the other set is a high end display made for gaming).", "so glad I decided to spend more to get the OLED. Picture is the brst.", "This is my second series 2 elite controller. The first worked perfectly but this one looked so awesome that I had to have it! The only issue is that the R thumbstick is a little sticky when pushing to the L. No other direction, only the left. It is like there is a bit of resistance I have to push through before it releases and goes to the left. My first elite series 2 controller doesnt have this issue. It hampers FPS games a little, but not terribly. Otherwise a great controller and terrific looking product if your a Halo fan. I'm just a little bummed about the aiming thumbstick being slightly off.", "The Elite series 2 was already the best Xbox controller, now has an amazing look.", "controller is awesome. but my Y button doesnt work all the time. its very frustrating.", "Work as great as the original Series 2 Elite Controller but that Halo detail. It was great to find a code inside that gives you a weapon charm that look exactly like the controller.", "Beautiful controller. If at all possible, why not buy the limited edition controller for a small amount more. Im a huge halo fan, so getting an extra controller in this caliber of beauty was an easy choice for me. Elite controllers are an amazing controller for sure, which is part of why there is too many reasons to get this controller, really.", "Like many Elite 2 controllers, this was totally unusable out of the box.  Stick drift was suuuuuuuuuuuuuuuuuuuuuper bad.", "Love this controller. The attention to detail is out of this world.", "Great elite controller for a supa halo fan-very stylish too", "Very cool and feels really nice and comfortable in hands", "Its absolutely beautiful! Great controller", "I loved Yoshi\u2019s Wooly World, but this game came across as very childish and no real goal that you are trying to reach.", "There's so much replay value with this game.", "Awesome game.  Little less challenging but that doesn't take away from the enjoyment of the game.  Highly recommend if your into Yoshi island style games.", "Great game but kind of easy compared to Yoshi\u2019s island", "Single player is tons of fun. Nothing sticks out as being bad other than being a little too easy for mature gamers. Co-Op is a jumbled mess of accidentally getting  stuck on people and losing your eggs unpredictably.", "Pretty fun typical Yoshi game that offers more variety than usual, still not Yoshi\u2019s Island levels but pretty good nonetheless. Worth my money.", "Once you get past the cuteness factor of the game, you'll find a very fun gameplay experience. Controls seem very responsive, and the 2 player mode is loads of fun and laughs. Great game to introduce a young child to gaming. A great addition to the Yoshi themed game library.", "I haven't been a huge fan of the series since it is a easier version A Mario title but this game has been surprisingly fun", "It\u2019s so cute. I love Yoshi.  This version is built using craft materials and can get quite challenging!  I love how detailed the graphics are! Fun, fun, fun!", "Great game and fun but unlocking different types of Yoshi\u2019s with yarn in the last game was a lot better than the costumes concept.", "Got my package, installed it and got a STEAM POWERED program that starts itself every time I start my computer [no option to turn that off] and emediately takes me to thier online site with only options to buy games. The was NO GAME on the disk. No information saying that it is an Online game only [no information saying it is even an online game on thier site.] I tried to check out the Forums, registering for thier forum kept takeing me to other sites. These other sites required me to reister. This repedative nonsence went on for 4 diff registration that finnaly returned me to the STEAM forums. Unfortunately I still wasn't allowed to access thier forums.  No tech support, no contact information ,no game.. No reason to even consider getting this product.", "I own both Supreme Commander and Forged Alliance and find both games superb. When i head there was a Supreme Commander 2 coming out of course I ran right out and got it. I can honestly say this is one of the worst war games period. My reasons include the fact you must unlock a LOT of stuff to even consider playing the quick battles. There's only 6 maps, yes i said 6. The fact you cant even choose what side you want to be on until you unlock the ability, and the WORST part is you cant even see a simple overview of the maps when you are selecting them your basically better off throwing darts at your comp screen to decide what your gonna do rather than actually getting to decide anything at all about the battle ahead. The point I'm making here is don't Waste your money... This game isn't even worth getting if it cost 2.50.", "played it today and i've never played a better RTS. im lovin it every step of the way and although its a little bit more 'cartoonish' than the last one, its still definatly a fun epic story lined game. it beats AoE, UaW, and matches EtW, and C&C. i really love playing it and my slightly old system can handle it perfectly. i was a little disappointed, i though the requirements would be a little higher and i definatly see a decrease in the quality. overall, 8 out of 10. AWESOME game. right now, im a little concerned with the new unit the cybranasourus rex (yeh, i probably spelled that wrong) it seemed a little like an out of place character to be put in the game. its still a pretty cool unit and theres so much more upgrade. the most important is the eco that they had. the last one sucked and was full of glitches. this one is MUCH more stable, its brings the good parts of halo wars and not the sucky parts (because seriously, halo wars sucked) buy NOW", "The frist two games of this year that I was waiting for were Supreme Commander 2 and C&C4. Both are god awful. Supreme Commander 2 is missing the best elements and nuances of it's two predecessors. I actually think that TA was the best of them all. Sad that games just get worse and worse as they come out with new titles. What happened to the unit types??!! There is not nearly as many unit types as SC or TA. Plus, what happened to the recycling of plants and rocks... the environmental resources you could live off until you got your resource production up and running? And why are there so few multiplayer maps?  I have an idea. Take the Total Annihilation engine, give it some new graphics,new sound, a new story line and new unit types... and don't change anything else...", "Don't know what the other guys here are talking about, the game is great, ya sure they took out some of the things the sup com pros loved, but the thing is, more people want to play RTS so you can't expect a newbie to grasp every concept of the game, unlike the pros. If they left some of the things from the old sup com in, it would be so unbalanced it wouldn't been as fun to play for the newbies.  Alright so lets get down to buisness, the storyline is great and the graphics blow sup com 1's out of the water, while supporting older computers that don't have as good of processors or graphics card. Win, Win situation. At least thats what I think, and that is why you're here isn't it ??   They added a new research screen to simplify it and added a whole bunch of new features like building add ons and new experimentals. FYI to all aion illuminate fans, they don't have naval anymore. I know, ouch right? Well I think we'll live.  On to sound. They did a really good job with the music this time, its about 10 times better than sup com 1 and the sound effects really match up and exceed what you think they will sound like, when lets say someone gets blown up by a nuke or someones commander goes into meltdown.  For all those hard core gamers out there, the 10 hour battles have gone away, I know, sad right? Well they replaced with a shorter even fiercer model of online game play, that really seems to fit, and when I mean shorter, I mean average of two hours. You can still build those big armies just faster. One thing I wanna finish up with is the Interface. They kept a lot of the interface from sup com 1 and FA, but also added the research screen which I talked about earlier. It works like this: You need research points to buy any sort of research upgrades and those research points automatically come along, but you can build research facilities that increase the speed at which you get them. You can spend research points on things like, personal shields for your units, or new buildings, sight upgrades, radar upgrades, and new schematics for buildings and units. Big FYI for all those 360 gamers lookin at this. The 360 version of this game is just as good if not better than the PC version.", "\"Make no mistake - this IS Supreme Commander Lite. It almost feels like a very weak demo of SupCom 1, but worse. Even with the new research trees, you'll still end up with no where near the amount of units to choose from that you had with SupCom 1 and its tiers. Yeah, sometimes the tiers were annoying to work through and it took far too long in most instances to get anywhere close to maximizing your faction's potential in a single match in the first one - but this \"\"sequel\"\" has completely gutted it altogether. You'll likely end up mashing your mouse button or hotkey to churn out more of the exact same units.. over... and over... and over again because there's barely anything to choose from for unit diversity. The game requires the Steam client and an internet connection just to play. While it's true that most people these days have an internet connection", "If you like multiplayer or lan-parties add this on to the list because you get a lot of fun in that little box! There are many nay-sayers but i really don't know what the heck they are talking about. Graphics are great, simple neat menu, intense tug-of-war games because its hard to dominate players that are sneaky!... It runs great on both my desktops and even my laptop! So if you have a decent machine you can easily run this game because its not demanding at all. Very fun to play against you friends and the online is pretty intense. Single player story is good and easy to get into because you dont need to have played the originals to understand whats going on or anything. As of right now you can save $** if you buy it which makes it even more worth the money. 10/10! pick one up maybe ill play against ya!", "There were so high hopes for this game, as SC 1 and FA had left me hungry for more games like TA, yet unfortunately the wait would lead to disappointment. For those who enjoyed the similarities between TA and SC1 will be the biggest disappointment here. The economy of the previously mention games is utterly gone. No worrying about balancing energy usage and mass income with building and firing weapons, its all been removed. Its now a simple straight up, build up army, build base defenses, go conqueror enemy. Also gone are the tech levels, and weaker starting units, and teching up. Instead its replaced by research points that gradually come in much like all the other resources.  Without that element nothing really stood out in the game. Without the challenging economy, the campaign portion of the game becomes simple, build defenses, build army, repair defenses occasionally, attack enemy. Musically nothing really stood out, there may of been a couple times when I stopped to notice it, but again nothing inspiring. Storyline it also seems kinda lacking, it comes off like a Final Fantasy storyline mashed into brief conversations between 18 missions. There just simply is not enough there to make a great story, which once again left me greatly disappointed. Graphically the game was nice, and the small scale compared to SC1, meant I could actually stay somewhat zoomed in, to actually see the units, and not just commanding by click on the small icons. The movies were decent, just way to few of em to tell a good story. The game controls fairly well, being rather simple game now, its easy to pick up and get right into. Those with SC1 knowledge will have no trouble picking it up, as the mechanics are still basically identical to the first. Those used to Starcraft or C&C type games might take a bit longer but overall its not a hard game to get into or to start playing. The game probably has some strengths in multiplayer, as the unit balance does seem good, but I have not done any of that yet. Overall SC2 is not a bad game, everything seems to work, the game loaded smoothly, the game had no noticle lag, or slowdowns, but there is just nothing in it that simply makes it stand out. The game itself was fun to play through, and I did enjoy the limited story, and I may still by the sequel when it comes out (of course the ending had a cliff hanger for a sequel... what game doesn't do that no a days) yet this probably won't be a game I will touch all to often again now that I have beaten it. My suggestion is wait for the price to drop on this one if you simply want to see the continued storyline from the first, as the game offers very little of anything else to draw players away from other games.", "\"First there was Total Annihilation; superb, deep, endless strategy, constantly evolving, hundreds of different units, quick to learn hard to master. Then Supreme Commander and Forged alliance; made Total Annihilation (TA) larger with a better AI, beautiful graphics and much of the same elements that made TA great.  Then Supreme Commander 2; What the hell happened here? You took almost everything that made the first two stand alone and dominate and tossed it out the window. My only guess is you tried to dumb this game down to the likes of a C&C or a Craft game so it could appeal to the zerg boys.... probably thanks to Square's involvement. Really Chris Taylor how much did it cost to convince you to kill your baby?! Graphics went from sci-fi futuristic to cartoonish. Threw out the unique resource allocation and made it a click and buy system with a \"\"Research\"\" resource which is another Craft game move that sucks. Took out almost 60% of the different units in the game an dumbed base creation and defense down to arrow towers CRAFT again!. All the maps appear to be zerg/rush maps. Threw out the tier system... Sheesh I can go on and on but I won't. Bottom line: If you loved what made Total Annihilation and Supreme Commander unique and fun", "\"Okay, so yeah, it's pretty much like the first two in the basics: the three factions, the basic units (Some of the basic units are straight out of SupCom 1 and Forged Alliance), and one big war. On almost everything else it's completely revamped. Upgrading has been replaced with \"\"Researching\"\"", "I bought this to play my ps5 and not only thengames look great but movies too", "Waiting for the firmware update, then I can update to 5 stars", "\"Great TV with all up to date technology. From Dolby Vision and Atmos, HDR10 + etc... Perfect for gaming HDMI 2.1. I trust in Vizio products I bought a 60\"\" in 2012 and still running (2021).\"", "I purchased the 65 inch OLED 1 week ago!  The TV is beautiful!  Deep blacks & colors are great right out of the box!  You will have to do nothing to get this TV to look great.  I wish they had offered a 75 inch OLED but I am sure this will come!  Picture processing is good as well!  I recommend this TV to my friends!", "I picked this OLED Vizio for the intensely beautiful picture and I have not been disappointed. It's incredible for gaming on my PlayStation, and watching vivid shows.", "Problems turning OLED tv on. So I returned it and got another one.  The screen had a green tint to it so I returned it and got my money back. Plus the VRR didn\u2019t work.", "I love how skinny it is and how much cooler it runs, the picture is awesome!! Gorgeous unit !", "Wonderful image, oodles of features and an asking price that\u2019s within  reach of the average consumer, what more Can you ask for.", "I\u2019ve always liked Visio. My first 50\u201d had one backlight diode burn out after 7yrs heavy use. Replaced with 50\u201d nano Visio. I was happy with the upgrade. Figured I could get a 55\u201d within the space constraint I had. Got this one as open box. And WOW! The picture POPS of vibrancy and consistent brightness.", "I got this TV 3 weeks ago and so far I love it/ easy to operate/ easy to hook up other devices to it //Great TV", "Beautiful controller. I only changed the D-Pad and still calibrating but it is perfect.", "Glorious equipment for slaying all who oppose Spartan 117!", "I got this as a gift for my boyfriends birthday. I don\u2019t play Xbox and I\u2019ve never played halo but I was completely BLOWN AWAY by this controller. It feels amazing I think the way it was designed was incredible and totally worth the money. My bf LOVED it and made me consider becoming an Xbox gamer.", "This controller is amazing and beautiful I\u2019m glad to have it", "Love the elite series 2 controller and with a halo paintjob.... it's almost perfect. I kinda wish this would have included the updated series x/s share button but that's a minor complaint. With the latest xbox update, it's now able to quickly connect to 2 paired devices which is probably the best feature of the updated series x/s controllers so I'm happy with that. If you love Halo and were thinking about getting an elite controller, this is the one you want.", "Its similar to the regular elite it just feels lighter quality feels slightly better and it looks so hecking cool in person so many details that the pictures dont do it justice", "Performs like you expect the Elite Series 2 to do so, but with the added benefit of looking wicked. By far the coolest controller I\u2019ve owned. Hopefully it will keep nice and not develop rub marks from fingers.", "I had the series one which still works great, but decided to upgrade for the better paddles and internal battery. I am very pleased with this product not only because its Halo but it does feel like a substantial improvement over the previous generation. I'm still trash though...", "Great for Halo fanatic.  It weighs a lot more than your standard controller.  Bought as Christmas present for the Halo fanatic.  Splurged on the 2 year warranty just in case too.", "It\u2019s a great looking controller but without the console to match, it will be lonely. Very hard to pick up the items you want unless you want to pay ridiculous prices from scalpers who seem to get these items with ease. But still a great looking controller.", "Pretty simple game, great for younger games, way too many things to have to collect.", "Good game. kinda on the kid side of game, my kids like it.", "Game is great for parents to play with their kids.", "Very fun! As someone playing through sekiro, this was a nice pallet cleanser.", "I had an open mind when deciding to play this game and after clearing the first world, it just wasn't for me. Compared to Woolly World, this game was lacking in several departments; the music was repetitive, the skill level was far too low even for just the first world and the game doesn't reward you nearly as much as Woolly World did in terms of amiibo. I'd recommend this for die-hard Yoshi fans or kids age 5 through 9.", "The kids (6 and 3) love it. And I love that they can play together. My 3 year old doesn\u2019t know what she\u2019s doing but my 6 year old helps her. Yoshi\u2019s crafted world game is also fun for parents :)", "Simply amazing. My son and I are loving this game. It's so creative and well thought out.", "So much fun! For all ages! We have from age 4 to 34 who love to play.", "Bought this game for my son, but i enjoy playing it too.", "My family and I really enjoy using the Nintendo Switch and I must say this is by far one of the best games ever! Super cute yet challenging at times. There\u2019s a gum ball where you can insert coins and collect costumes. There\u2019s also a flip side to the game where you interact and catch little puppies. Just when you think you\u2019ve completely the level there\u2019s other mini challenges like a scavenger hunt. You should purchase this game you won\u2019t regret it!", "So far I've enjoyed playing SC2. there are a handful of differences between it and its predecessors both good and bad, The battles aren't as big as the ones from Supreme commander, but they are still brilliant, the new research is fun, as well as expanding buildings with tactical add on pieces even if they are minor one's, and the fact you can replace your ACU without permanently losing it now, and the new upgrades for the ACU, and units. Most of the cons I've found so far are, requiring steam, the smaller battlefields, and other minor problems which may be fixed eventually in updates. It lacks the feeling of the original game but its still fun to play I'd recommend to everyone that they try the demo on steam first before deciding. Overall I rate this 7 out of 10.", "First off, you need to have Steam installed on your computer. Thanks for the heads-up on this Square. You buy a hard copy of the game but then have to log in to Steam to download it from their servers.....really? Some people are showing a 9 hour wait time to be able to play. Again, really? Second, they destroyed the economy and the basic gameplay of the original game and its expansion. None of it even matters any more. Its just a zerg fest. Most people think its due to the console being added to this title and thereby attempting to expand their market. They broke what made the first game such a huge hit. Gone are the days of epic battles for my 3rd point. Maps are now 5kmx5km. WAY too small. Fourth, you can't save/load in skirmish play. Soooo, if you have to leave in the middle of a longer lasting game (not real sure how this will happen being that everything is so small-but want to give them the benefit of the doubt for future content added updates), too bad. Can't save. Fifth, the voice acting and story line for the campaign is just plain stupid. I guess I could go on but I'm sure I've expressed my opinion enough for folks to understand where I'm coming from. This is just insulting to people who have been really looking forward to this title. There was a reason the first game was as much of a success as it was. Well, Square Enix effectively threw that out the window and scrapped it all. Good job.", "I haven\u2019t used it yet but the unboxing was amazing. This is a really nice looking controller. It really feels right.", "This controller is GAWGEOUS!!!!! I love the cosmetic design of it, the rubberized grips, the back paddles and the accessories! It comes with it's own wireless charger, interchangeable analog thumb sticks, and D-pad. The design is reflective of Master Chiefs armor. I LOVE IT!!!!", "Amazing controller well worth the money solid feel and looks fantastic i want to buy a second one already", "It came broken\u2026. Stick drift on the right thumb stick right out of the box.", "Quality feel and looks awesome. Also arrived early on the 15th was shipped next day air.", "Exactly what I was looking for in a controller and the Halo fan in me loves the Halo theme on the controller", "Its good just sucks how the bumpers dont like to work sometimes its vrandnew", "Beautiful controller (just need the console to go with it). GameStop packaged it well and sent it super fast. It actually arrived prior to release date. Now I just need the console!", "Great controller that feels better than the standard ones. Paddles are useful in gameplay and the color scheme is great. You also recieve a code for the controller as an accessort in Halo Infinite.", "High quality packaging, nice dock and very long usb-c cord. Even the packaging was superb. Everything was secure to make sure nothing would be damaged in shipping. It is very true to the pictures and works great!", "I had no problems after mounting the TV and the set up was a breeze", "Had this TV for a month now and it's worth every penny. Don't listen to all the negative you've been hearing about Vizio. They have done a really good job with all their new high end televisions.", "I just bought this item and am so excited to watch sports and movies on it!", "Compared to the LG CX and Sony A8H the picture quality is way better than Sony's OLED.  THOSE Reviews online are biased and not accurate IMO.  Not a fan of smartcast yet over android TV. TV Has some firmware glitches.  Sound from TV speakers is OK not as nice as the Sony's; however this is a one Heck of An OLED with no black Crush....", "We were looking at one but am the type of people who wi only purchase an item like this when the one we have goes bad. Now the old one will go into the basement.", "The best \u201cAmerican product 100% costumer satisfacci\u00f3n  guaranteed", "I bought this tv and set it up at home but it was quite obvious to me that the feed I was watching on this tv in the store was optimized for the tv for better picture. At home however, it was grainy and looked like motion flip art like the one you draw and flip through. The tv was so hot I thought I bought a hp laptop.", "This was my wife\u2019s and my anniversary gift to each other. We regularly watch movies, and we are amazed at how the cinematographer\u2019s vision is articulated with this tv.", "I\u2019ve had this TV for about a month of movies and gaming, couldn\u2019t be happier.", "The image on the tv is fantastic and the sleek slim design gives it that pop aesthetic that the \u201cworld\u201d within the TVs borders is almost life-like to the touch.", "Great controller! Only wish I had the halo Xbox to go with it", "This is the elite series 2 but they did an excellent job with the halo theme. The best controller with now an awesome new paint job.", "Fun game, really nice visuals. It's an easier platform so more people can enjoy it, but seasoned gamers will like the collectables available, which give replay value to the game and a bit more challenge.", "One of must fun Nintendo games I've played in a long time.", "Nintendo does it again with sweet crisp graphics and my kids love yoshi", "If you enjoyed Wooly World, you'll love Crafted world. This game is a great addition to the Yoshi series and adds fun mechanics unique to this game. It does have a 2 player mode and would be fun to play with a less experienced game. Overall presentation is great, control is simple, and platforming is fun. Nintendo game prices hardly comes down, so if price is a factor, pre-owned with PowerUp Rewards discount really helps mitigate the cost, and maybe invest those points. Either way, top notch Yoshi game and a must play for Yoshi fans.", "Great fun, reminds me of Yoshi's World from when I was a kid", "Love the extras each level has. Not a fan of yoshi smash level but in general love the game!!", "This is a proper modern evolution of the Yoshi formula.  Giving you access to the fore- and background when throwing eggs adds an extra dimension of exploration and the collectibles are definitely worth getting.  The flower requirement to progress to new areas is rarely difficult to fulfill, but it emphasizes the collection aspect in a game that gives you a lot of tools to do so and is chock-full of stuff to see.  If you've ever loved playing a platformer, you need to play this game.", "A few weeks before the game came out I downloaded the demo just to see if my six year old son was going to play it and he and when the game came out I got it for his bday and he have not put it down", "Great game! Side scrolling puzzle solver better than I anticipated and can\u2019t put it down. There is a gum ball machine for different costumes ADDICTING haha", "Yoshi\u2019s Crafted World is an amazing game! It is beautifully designed and appropriately challenging. The ability to play two players is also great as my wife and I like to game together. I would definitely recommend it to anyone who owns a switch, especially those who want to play some couch co-op.", "Bought this for a Christmas Gift for my husband and myself. ", "1 year ago", "Got this in time to have it up on the wall Christmas day. The family loved it!", "The app sometimes glitches green and I need to power cycle yhr TV to work right. Also, I can't seem to download other apps that seems to be essential. Example Crunchyroll.", "Bought the TV right before Christmas - just amazing clarity and color", "Excellent picture quality and very easy to set up!", "\"About 10 years ago I purchased my first Vizio 54\"\" just months after its release.  It held up well until one day it just didnt turn on.  Lights on", " when clearly the Amplifier is sending signal.  Looking forward to a future firmware to make this TV absolutely perfect!\"", "Very nice picture, nice sound, but, the OLED effect can cause severe headaches in certain people.  There should be some form of medical warning and available solutions.", "I purchased this 3 weeks ago and I love the picture quality. After contacting the boae surround  system its like you your in the movies! Great job vizio.", "I just bought this TV, did not plan on spending this much. This TV is worth every penny. The color is so vivid. Model is sleek and so much thinner than LED.", "I bought this one month ago and I'm glad I did this model.", "My son loves this game. Like Super Smash Bros with Kung Fu Panda characters.", "I got the game through PS Plus, and I was skeptical at first. However, after playing it with my friends for a little bit, it was some of the most fun I'd had playing a game ever. It's no Citizen Kane, but it does its job as a fun, simple fighting game well.", "We Bridges this for Christmas for my nephew everyone had a good time playing", "I bought this game for my grandson and he absolutely no loves this game...", "I bought this game for my daughter because she\u2019s very competitive. We thought it was family friendly but it\u2019s very hard to learn different moves. I had a hard time playing it also and I\u2019m good at playing games.  It\u2019s not the easiest game to play and in my opinion its not for kids either.", "My 5 ear old loves this game.  Controls are simple and each fight location has their own challenges.", "This game deserves 10 stars but I was only allowed to give 5. It is definitely better than smash. I think it should win game of the year.", "I sew the trailer and it was ok not the best and characters were alright. I heard that there was a lag in the game  but over all i give it 2 stars", "another super smash clone but horrible one at that", "i wouldn't buy this game if it was free. i dislike the game's audio and lasting appeal. so bad my children couldn't even bear it", "I have a LG OLED TV and I wish I waited for this TV. I'm very pleased. I hope the update will fix the power issues. I have to turn on multiple time before the picture would stay on.", "I\u2019ve had my VIZIO 55\u201d OLED for about 3 weeks. Clear picture from any place in the room. Color is so much better than the TV I replaced which was a VIZIO LED 55\u201d TV.", "Other than the Smartcast being a bit buggy, the picture is spot on!", "i have been facing multiple issues from the time i got this TV.", "Have had it for two weeks, perfect picture and great design. Loving it so far, great price for all the features and crystal clear picture. Just wish it had a HBO Max app preloaded in the main menu, but very easy to cast from my smart phone or iPad to the TV", "Vizio has stepped up their game, going head to head with the LG and Samsung on this one.", "Finally, someone has made an OLED TV that I could afford!", "Well worth the price. I was sold on the fact that you can see definition anytime there is a night scene and it\u2019s not just blurry.", "The colors are incredibly vivid, even with a standard HD signal. I also love that it has screen mirroring for my iPhone along with a bunch of other viewing options.", "Just had this installed yesterday the BestBuy's Geek Squad. Also installed a new sound bar. The picture is amazing and we are looking forward to seeing many of our favorite shows in a whole new light. The remote will take getting used to, but we'll learn. I wish there was an app for PBS installed. We'll have to see it by AirPlay.", "When the game trailer is a rip off of super smash bros, you know its going to flop. the chrachter selection is poor and the gameplay is choppy. I need my 20$ back...", "I really enjoy playing this game. It is fun and enjoyable for all ages.", "The game is cute but hasn\u2019t held my 6-year-old son\u2019s attention. He has beat Donkey Kong Country, Super Mario Odyssey, and SupernMario Deluxe. He only played a couple of levels of Yoshi and hasn\u2019t went back to it, over a week later.", "This game is similar to Yoshi's Woolly World.  The levels are made of things like cardboard, ribbon, straws, and construction paper.  Each level can be played in a normal mode or a reverse mode.  There are cute costumes you can unlock using coins that you collect throughout the levels.  It's a perfect game for parents to play with their kids.", "Got this for my 2 sons they love & have a lot of fun playing it together", "The game is wonderful to play through. Fun levels, extras, cute outfits, and even an easy mode for younger players. Just dont try to get everything, or you wont have a good time.", "This game is super fun and adorable. ", "This seems more like a kids game but everyone will enjoy. It\u2019s very entertaining but not very stressful. It looks so cheerful and colorful. And who doesn\u2019t like Yoshi with wings.", "Fun to play while letting those who want a challenge to be able to spend time to complete the game", "While it's easy enough for children to play, that doesn't take away from how fun it is for the whole family. Levels have a decent amount of replayability, and it's decently challenging in a casual way.  Would recommend to anyone.", "Fun game for kids and adults. More relaxed then Mario and very kid friendly!!", "Bought this on Black Friday after reviewing 4-5 other LED TV's.  I'm so glad that I did.  The OLED experience is simply stunning.  My previous TV was a Panasonic plasma which I held onto as long as I could because I didn't want to give up those deep blacks and contrast.  This TV has such great contrast - for example when you watch a dark scene with isolated bright spots (like lamps, office windows, etc) it will blow you away how bright those spots are against the deep black surroundings.  The panel is made by LG and you can get the same performance for a lot less money.", "I bought this a couple of weeks ago.  Easy to install and set up.  Fantastic picture!  We love the smart cast and look forward to our elderly relatives coming over.  We can FaceTime our loved ones and airplay it on the TV and everyone will be able to see.", "I love the tv but am on the fence on returning it or not. Fix everything people are complaining about. Also 1440p needs to be 120hz. Theres no reason why it shouldn't be. Get it together please", "I have a long time history of purchasing Vizio Television and each time of purchase I have upgraded having said that Vizio has shifted in the best way. Awesomeness!!", "\"I had a Vizio 65\"\" LED TV that I thought was still pretty good but I was intrigued by OLED. The set I bought looked great in the store and even better at home. And that's on everything", "Great picture quality and very easy to set up. Would highly recommend.", "This is the best tv I've ever owned! The picture quality is amazing! I don't have enough words to express how happy I am with this TV.", "Bought the oled Visio over the Samsung q series. Very happy except sometimes the input switches from one to another happen 2 times", "I set this TV up less than a month ago and still going through all the apps and everything it can do.", "I really want to love this TV. The picture quality is amazing. The smart cast interface is solid, and it's all packeged under an beatable price. ", " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "3", "Really fun 2 player game that seems well balanced. It looks great and feels rewarding to go collect stuff. It's really nice that the game seems to avoid many the co-op deaths that I'm used to in new super mario bros u deluxe and yoshis woolly world (we jump or egg each other and fall to our deaths).", "Its a deep 2D game with an interesting spin on yoshi island. Nintendo always amazes me with the great graphics with thier titles. Gameplay is smooth and overall fun is better with my wife.", "Simple, super fun platformer that\u2019s perfect for kids or couples to play!", "Great game for small children and entertaining for adults as well", "Great games for kids and parents to play together.", "Amazing game. Graphics are too cool. They're made out of cardboard, bottles, etc and the two player is fantastic. Highly recommend.", "I bought this game for my 8 yr old autistic daughter and she absolutely loves this game. It is her first video game bought soley for her and she just took right to it with no issues at all. For other games she has played it has been difficult for her to grasp what goes on on the screen and how that associates with what she is doing on the controller such as constantly running into walls on mario kart because it was difficult to for her to figure out how to steer but no such issues with this game and she absolutely loves it.", "It's sooo cute!! The levels are adorable but still challenging enough if you want to get 100%. My new go-to game for destressing~ <3", "This game is super fun and brings out the kid in me. Each level has multiple challenges, making the game seem like neverending fun. The voices are adorable and the choices are plentiful. Great game, highly recommended.", "It\u2019s a really relaxed game that you can pick up and play anytime. The graphics are amazing and unique. Overall, I\u2019d definitely recommend this game for anyone who is a Yoshi fan.", "Me and my 5 year old really enjoy this game, if you enjoy the Mario games this is one you can add to that list.", "An incredibly fun sequel to Yoshi's Woolly World.  Amazing graphics!", "The game is fun, and the graphics look great, some levels are hard for a children\u2019s game, but over the game is great.", "This game is a crafted masterpiece! The level of detail is gorgeous. Gameplay is a throwback to the classics while maintaining a modern feel. The two player mode is unique and available right at the start. The game is great for all ages and incredible for a good time or a family game night. I highly recommend this game!", "Entertaining game for all ages.  The levels are relatively easy to pass but become challenging if you are the type of gamer who goes for 100% completion.  The colorful graphics also help add to the fun nature of the game.", "Great game for me and my kids ages 6, 4 and 1. They can actually play it on their own and love it.", "Cute game. Just as fun if not more than Wooly World was.", "\"Whimsical, light-hearted platformer. Densely packed stages filled with collectibles, secrets, and uniquely beautiful art designs.  Tons of content adds replay value to keep you playing long after finishing the six to eight hour \"\"main\"\" adventure. Definitely a worthwhile purchase", "If you like the gameplay of Yoshi\u2019s Island, the art style of Yoshi\u2019s Woolly World, then Yoshi\u2019s Crafted World is the gamefor you... and the family!", "Sort of short, aimed more towards kids...but if you love Yoshi and want something to sit back before bed and relax and play, this is your game.  So charming, so chill, so Yoshi.", "Just bought tv a while back moved to the new house and now it won't turn on", "This TV replaced a smaller, older VIZIO I bought back in 2011/12. Was not looking for an OLED, but went with it since the price was so good. I could not be happier. The picture is GREAT. Everything we watch has looked amazing on it.", "The picture is exceptionally light and bright where it needs to be but the infinite dark reminds you it is an Oled, this tv IS IN a class of it's own!", "About my TV last month I love it love everything about it", "I am pleased with the quality of this unit. Best tv I have ever owned. Oled is off the charts, the colors pop and deep rich blacks. I'm creeping up on retirement and I didn't want to buy a quality tv on a fixed budget.", "The picture and the Vizio surround surround speakers are excellent.  Response to the remote for adjusting sound level is sluggish and remote has few features compared to other systems.", "For the picture this has been great for the price. The reason I give it 3 stars though is because I am very critical of when the operating system is not \u201csnappy\u201d.  For a modern TV, losing of apps and maneuvering through the UI should be quick. While this is better than my old Samsung TV OS, I still expected it to be quicker.   I also hate h to r banner style at the top. My first choice should be to pick an App rather than some curated selection when so turn on the TV. I haven\u2019t been able to find a feature to turn it off.", "It's better quality than I imagined! Amazing TV!", "So far I love it! The new tech for video games is awesome!", "This is my first OLED tv and I am loving it. I\u2019ve been using Vizio TVs for years and have never disappointed me. This one is super fast and there\u2019s no lag when selecting through the apps. The lag is something I hated on my previous Vizio TVs bu that\u2019s gone now. Now just bring HBO Max! One thing I don\u2019t like and hope that it\u2019s fixed in a future software update is that currently, 4K/120hz HDMI ports don\u2019t work on the PS5. Fix that and this TV will be perfect.", "It's comfortable and works great. My only frustration is that it doesn't seem to allow button remapping. I can set it up on the switch, and the buttons are changed on the switch paddles, but this controller doesn't allow the changes. Not sure if this is a switch issue or the controller. Otherwise it is great", "[This review was collected as part of a promotion.] This controller was bought for the intent to enhance the Switch Experience, and to add some more skill to certain games. The case did arrive slightly damaged, the inside plastic was torn. but the product remained in perfect condition. It is light, but doesn't mean it isn't quality. It brought a different set of skills to games that required more then a small handheld joystick. A little throwback to the classic design of a controller.", "[This review was collected as part of a promotion.] Received to try out on our gaming system and definitely enjoy it way better then the cord controller. Having wireless is more convient as you can move better and no worries about pulling a cord out of the system. The Over all grip is very comfortable and nice fitting. Not only is it convient, comfortable but also comes designed with Mario which is many favorites of alot of people. Alot of my family complement us on our new controller for the design and now wants one or something similar.", "[This review was collected as part of a promotion.] This controller was so eay to use, and dits just right in my hand. I love the colors it comes in and connects very easily.", "[This review was collected as part of a promotion.] I like having a controller to hold onto with the switch and this one gets the job done.  Set up was easy.  The only downside is no rumble, but the added buttons make up for it.  The retro mario theme is an added bonus and loved by husband and son alike.", "[This review was collected as part of a promotion.] The design on this remote is so cool. The batteries are the only drawback but that can be remedied by just buying rechargeable batteries, which I would highly recommend.", "[This review was collected as part of a promotion.] This is a great controller for the Nintendo switch. It has a great Mario design that my kids loved! It was easy to set up and it being wireless was even better. It seems to be very durable as well. And good thing because my kids are super rough on things aspect controllers. I will be purchasing a second one, so both my kids have them to play with.", "[This review was collected as part of a promotion.] This is a review for the Nintendo Switch wireless game controller. ", "[This review was collected as part of a promotion.] The pros: *feels almost identical to the official Nintendo pro controller.  ", "[This review was collected as part of a promotion.] I have been using this controller for my Nintendo Switch for a couple of weeks now and am very happy with the overall performance of it! It is very comfortable to hold and the buttons are set up perfectly.  It being a Bluetooth Wireless Controller is a huge plus! The Super Mario Bros. design is my favorite though! It's very attractive and I've received so many compliments on it!", "It\u2019s not entry level friendly but can be very rewarding.. I struggled at first, boy it was challenging but with lots of practice and doing tutorials/training I managed to not come in 12th or 10th place.. I now place at about 6th or 4th.. Boy does not wining  a race hurt but it\u2019s the grind and constant improvement.. Could lower the difficult and turn assist on but that would take the fun out of the challenge..I then went to YouTube to see pro gamers struggling or flipping cars as well so that made me feel a little better too..", "If your looking for a real rally experience buy Dirt. The handling on this game is cartoonish. You cut and you get penalties. Total garbage.", "Very detailed graphics, challenging driving, and numerous course selections. A lot of fun for multiplayer. The only semi con is that it is difficult to select changes to your driving car... but overall a must have.", "Simply gorgous to look at and play.  It says pure simulator on the box for a reason.  If you go in expecting anything less you will get plastasized.", "Good game, need to spend some more time playing it", "This is a good one. One of the best driving games I've played. The career mode is a bit of a pain but still pretty cool.", "The WRC 8 FIA World Rally Championship is a great game to play. The cars are awesome and the scenery is breathtaking. There's so much to do! I really have lots of fun playing it. Much improvement over the WRC 7 World Rally Championship. They did a really nice job in putting this game together.", "Great game. Easy to pick up and play, at home or on the go.", "ONE OF THE ABSOLUTE BEST IN THE YOSHI FRANCHISE, WELL WORTH THE WAIT.", "Cant go wrong with Yoshi. Cute, detailed and fun. You get what you see with this game. I love it.", "Super fun game that can be as easy or as challenging as you want it to be, depending on if your thing is to 100% a game or not. Another quality release on the Switch, highly recommended.", "Not a heck of a lot wrong with this game. I like to say this is the epitome of Weaponized Cuteness. The designers did a fantastic job with level design. It feels like they actually built every level in the game with cardboard and construction paper in reality and then put it into the game, and they stick with that through the entire game. The controls are tight and the yoshis are as adorable as ever.", "Very cute! And the right amount of challenges. Great game for all ages", "We love Yoshi!", "Excellent game especially for kids and new gamers looking to learn, but still complicated and fun enough for an experienced vet.", "Really boring and lackluster. Fun platforming but not much else. Good for kids, not for adults.", "Cute game I can play with the family. I love how interactive it is. You can knock over things in the foreground and background.", "This tv has been fantastic and especially since we recently purchased a 5.1 Dolby surround system. Mandalorian looks, and sounds amazing now after getting this tv. ", "Super impressed with the clarity and color of the picture.", "Great picture and easy to use enjoy it very much!!", "Bought for picture quality and I am not disappointed. It is fabulous. I am actually surprised at how wonderful the display is in my home. Very satisfied and would buy again. If it goes on sale anytime soon I will buy another one for another room in my home.", "I am really happy with my purchase. Visio knocked it out of the park with this one.", "It's a great tv. This is my first oled and it works great with my xbox series x. My only issue is that it keeps putting itself back on warm color temp very often.", "Bought this TV a couple of weeks ago to replace a five year old Visio.  Our previous TV was top of the line back then.(240 refresh rate, etc.)  This new TV is fantastic!  What a picture!  Well worth it.", "I bought the tv about a month ago and have never had as many problems with a tv in my life. Vizio has a reputable name so of course I wanted to give the oled a try. Day one when I got the tv home it wouldn\u2019t power up. So after plugging the tv up and unplugging it a few times I got it to power up. The oled does have a beautiful picture but now every morning when I want to turn on the tv it won\u2019t power up again. I have to unplug the tv for 30 minutes EVERY morning for it to come on now. While I\u2019m watching tv the sound just goes away at times and I have to reboot the tv sometimes 3 times before the sound comes back on. At times the hdmi won\u2019t recognize it has the cable or game system connected so I have to turn it off and on again when that happens. This is just unacceptable from vizio. I hear there will be firmware updates but how long will that take?  I don\u2019t know what to do should I return the tv and try another vizio oled or just stay clear of vizio because this is the beat quality they can produce right now", "I bought this TV several weeks ago and I couldn't be happier. The difference between OLED and anything else is astonishing. Highly recommended!", "I\u2019m having multiple issues with it. Tried to set it up with my Xbox X series too play in 4K resolution but the screen goes black. When I did change some settings to get the TV too play my Xbox in 4K it wouldn\u2019t turn back on after I had turned it off from playing. I had to physically unplug and plug it back into the wall too got it too come back on.", "[This review was collected as part of a promotion.] This controller works great with our Nintendo Switch! I love the fact that it is wireless and vibrates while we play. It is also easy to use and handle! We are a family of 4 so I will be buying 3 more of these soon! Highly recommend for anyone who has a Nintendo Switch!", "[This review was collected as part of a promotion.] I love the fact that it is wireless and I don't have to deal with wires being all tangled up. It's easy to hold, perfect size and weight for my hands. Very pleased with it.", "[This review was collected as part of a promotion.] The Enhanced Wireless Controller for Nintendo Switch is easy to set up and use.  I love the Mario on it.", "[This review was collected as part of a promotion.] Power A Enchanted Wireless Controller for Nintendo Switch works great! Love this item, it is easy to hold, and very easy to use and connect to console. Seems like it is very sturdy as well.", "[This review was collected as part of a promotion.] This item came in no time after ordering it which was a plus. It was easy to set up with the game system my boys were super excited and love it.. Now I\u2019m forced to buy another one so both of them can play together.", "[This review was collected as part of a promotion.] I just got the Enhanced Wireless Controller for Nintendo Switch and I must say I was surprised with the quality of it . It definitely makes playing so much easier especially when it comes to certain games.", "[This review was collected as part of a promotion.] This is a wonderful remote it\u2019s make playing the Nintendo switch so much easier. I love the remote it fits perfect in my hand as well my child\u2019s hand! This is so easy to use and much more better for the switch! I highly recommend this remote for anybody that has a Nintendo switch!", "[This review was collected as part of a promotion.] This works perfectly and has alot of extra controls and features.", "[This review was collected as part of a promotion.] I love this remote. It is easy to connect and use. The remote itself is well made and comfortable to hold. The fact that it is wireless is great and makes gaming more enjoyable. It does take batteries, but battery life is long. It is a perfect remote for any gamer.", "[This review was collected as part of a promotion.] I received this controller to test out and review. I suprised my 12 year old with it and he just loved it! He loves that it's wireless. He said it was so cool that he wanted to get his friend one for Christmas! So this is definitely kid approved. Thank you for this opportunity you made one kid very happy!", "This game is perfect for my first grader.  She can play alone, or we can add a Yoshi for a level and I can play with her.", "Awesome game.  Amateur to intermediate skill level with a few hard levels but once you get to the end you\u2019ll play like a pro.", "This game is so cute, easy and mellow. This game can be played with up to two players. My husband and I took turns playing with our 5yr old, he loved it!", "Fun and easy. Though the sound track sounds very uninspired. If only Crafted worlds soundtrack could take note from Yoshi Story.", "It\u2019s a real fun and easy game to play. I\u2019m not sure if there\u2019s a way to do increase difficulty since it only comes with two modes and I play classic. Regardless, the battles are fun, and if you want a game where you don\u2019t have to think way to hard this is it. I love the graphics and I love the creativity that goes into it.", "A charming easy to play title that's perfect for young  kids.", "Overall great game. Interesting and has different elements than other Yoshi games to date. My son absolutely loves it.", "They should know that it\u2019s fun & cute & for all ages.", "Beautifully developed with great music. It appears as only for kids but don\u2019t be fooled. This game has enough puzzles and the replay value is definatley there!", "At first glance you would think this is a kid game and has no entertainment value for adults. I will tell you first hand, that is not the case with this game. The visuals are stunning and there is plenty of action packed platforming for everyone.", "Where to start... do not buy this tv for a next gen console. You have to manually change the input setting from HDMI AUTO to HDMI 2.1 for the Xbox to recognize the 4K @ 120hz. If that wasn\u2019t annoying enough the specs said ALLM, HDR, and VRR. When you go to the TV info screen says no to HDR and VRR. Then proceeded to give the TV another chance by using the apps it offers. What a joke! The screen went green and kept flashing the picture. I tried five to six apps. All the same outcome. Finally on day three of owning it... it quit showing the picture for the Xbox. To confirm it wasn\u2019t the Xbox Series X I switched back to my Samsung Q70R TV which has a better picture and does everything, but 4K @ 120hz abs is still to this day running fine. Needless to say I shouldn\u2019t have bought a VIZIO in the first place like my gut told me. I wasted my gas and time on this TV.", "I bought this almost two weeks ago and next to my brothers LG Oled it holds its own for the price. As a pure Oled screen this is the way to go but It\u2019s not perfect which is to be expected for the price as a budget Oled. It\u2019s native apps that don\u2019t support the tv\u2019s high resolution will have noticeable pixels and it\u2019s already showing signs of Oled burn in if you keep the same image on for more than one minute, you should allow rest mode after 15 sec of inactivity, I\u2019m serious! Just be gentle with the tv and don\u2019t forget to turn it off and you will get an amazing tv.", "No other brand Tv can compete with the quality and price of this TV!", "For those having trouble gaming in 120hz, you have to change the settings to 2.1 on your hdmi 2. I almost didn't buy because the reviews on gaming saying it wouldn't do 120hz at 4k but it absolutely will and the Xbox verified that. Just change your settings to 2.1. The best picture quality on any TV I've ever owned. Truly amazing!", "I've been looking at the new OLED model tvs for a while and I'm so glad I finally purchased my very own OLED 4K tv.  The picture is incredible even if what you're watching isn't in High Def.  High def channels and movies look so good but the 4K programming is insanely sharp. It looks as if you're actually there", "This was a great purchase. Perfect blacks and beautiful color reproduction. I am impressed with the build quality and the attention to detailed such as the the wiring placement. Also the apps that\u2019s included are amazing. It also has Apple TV!! The only thing missing is a voice search on the remote. Other than that great purchase and extremely happy.", "So far so good.  Enjoying the difference that OLED offers.", "Just picked this TV up a couple weeks ago did a lot of research thanks to YouTube and saw that this was the TV to get for gaming A++", "120hrz, VRR, VRR+HDR, black screen but at 60htz it looks great! Vizio please fix.", "Excellent TV! Beautiful.picture. Easy to use, with enough extras .", "[This review was collected as part of a promotion.] This is a great addition to our Nintendo Switch. Easy to set up and easy to use. I highly recommend!!", "[This review was collected as part of a promotion.] I got this for my son and grandson who play the switch together. My son is an old school Nintendo fan so when I saw this with the old graphics I got it immediately. "], "data": [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 47, 2, 1, 1, 1, 1, 1, 11, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "review_description", "count": 435, "min": " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "max": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this."}, {"values": {"label": ["yes: I recommend this product", "2", "No: I don\u2019t recommend this product", "4", "5", "4.2727", "4.6556", " i say it should just have a completely different name slapped onto it. Then i would of not had any quarrels with it", "11 months ago", "1 year ago", " it's a rather unfortunate decision not only because you're excluding gamers but also because of potential happenstance scenarios. Steam goes down? Sorry", " you will hate and loath this game as I did. However if you owned any Craft game or C&C and thought the above mention games were too complex", " which really adds more hassle to the game", " but no one is home", "1", " not just 4K streams and DVD's.\"", " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", " especially if you plan to play the often chaotic but always entertaining simultaneous two player co-op mode.\"", "0", "4.875"], "data": [372, 1, 92, 3, 4, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "recommended_review", "count": 20, "min": " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", "max": "yes: I recommend this product"}, {"values": {"label": ["yes: I recommend this product", "4.2727", "Verified Purchaser", "4.6993", "4.6556", "363", "2390", " because i wouldn't be expecting something so different than what i knew. Now i own both of the \"\"previous\"\" games and they are both excellent", "5", "3", " you're out of luck. A few years down the road and something else happens(such as one of the companies going out of the business or whatnot) and you can't go back to play it for old times sake? Again", " strategic", " but also adds a new era of customization because instead of just going up levels 1", " type of.  So in the spirit of the shopping season i jumped at a another brand new Vizio product", " and to get 4K", "3 years ago", "32"], "data": [244, 6, 222, 1, 2, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "verifed_purchaser", "count": 17, "min": " and to get 4K", "max": "yes: I recommend this product"}, {"values": {"label": ["0", "Verified Purchaser", "363", "1", "306", "2390", "228881042", "2", "3", "228691813", "4", "127332001", "228459804", "228397838", "28", "5", "6", " and so when i found out about this \"\"sequel\"\" i ran out and bought it with out much looking into it", "127185338", "4.2727", "227806298", "227721000", "127127185", " out of luck. Move to an area with limited connectivity? Same thing. I wish developers would stop going with this route", " and epic for you", " 2", " this OLED 55\"\".  ", "7", "126525025", " I have to manually switch the input from Auto to 1.4", "226910861", "226824012", "122140626", "126297513", "126279514", "226623767"], "data": [318, 77, 6, 47, 1, 2, 1, 11, 5, 1, 1, 1, 1, 1, 1, 4, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "helpful_count", "count": 36, "min": " 2", "max": "Verified Purchaser"}, {"values": {"label": ["0", "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "229167959", "228991912", "1", "194520876", "127408484", "2a736f40-6b79-5c49-b539-5eae6b06fe94", "2", "7", "4", "8", "6", "5", "865fb1f7-9fbc-5ec8-89fb-868f67495019", "18", "41", "3", "0a5b2e83-abcb-5537-a109-15a4b8c4f86d", "228476168", "c0fef563-2deb-5c01-acc6-9db6c6fa8368", "15bc27e2-a5ad-5a18-b47e-5f4cd100907c", "11", " i knew it had a different maker but i figured how bad could they have possibly made it... i mean it's Square Enix! Now don't get me wrong it is a good game", "4a650967-e873-5e06-a3d0-81e9530e5a78", "363", "c35409b8-9e25-5996-88e8-e3f1aa9e8065", "3adeb77d-d51a-53aa-9aa2-3908b384030d", "16", "9", " as it's very short-sighted. The graphics are significantly worse than the first one", " then give Supreme Commander 2 a try!  You should feel right at home in this slop show.\"", " 3", "227425437", "227210950", "15", "33722e22-472c-5b56-a877-599999791231", " then back to 2.1. This is very frustrating. ", "02481162-152d-5b33-ba5a-5136b0686613", "8a3401f7-4865-5764-904a-6f8cb7b42edd", "4.875", "0b338d34-27a3-56a0-9787-1d3b437f1ba9", "1962b25e-379f-515a-a961-26950bbd081d", "126289526", "95bf4328-d8c9-52b1-9074-0e246e0f9fe2", "226749057", "6e496bf1-e93c-58ac-8889-a3a9b9b69afa"], "data": [343, 77, 1, 1, 16, 1, 1, 1, 7, 2, 4, 2, 5, 3, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "not_helpful_count", "count": 47, "min": " 3", "max": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a"}, {"values": {"label": ["10 months ago", "fa660933-1130-5c66-9010-24d641f70bc7", "16e925e3-1e59-537e-aa67-1675b613d351", "7f69bc6a-f89c-53d4-a52a-39a8b8512c54", "16 hours ago", "1 day ago", "7 days ago", "9 days ago", "10 days ago", "17 days ago", "18 days ago", "2 years ago", "7ed32763-a3be-57d4-a35e-a166b90de2ee", "16/01/2022 16:17:57", "11 months ago", "21 days ago", "1 month ago", "16/01/2022 16:17:58", "cec7afe6-497f-5ac5-a9c8-b1ca19d4a4b0", "7 years ago", "9 years ago", "10 years ago", "11 years ago", " but i was expecting to buy SC2... Not SC2 revamped... i couldn't just jump into it", "16/01/2022 16:17:59", "228309057", "12 months ago", "16/01/2022 16:18:00", "227799226", "1 year ago", " even on the highest settings. There are ONLY small maps", "No: I don\u2019t recommend this product", " and Experimental", "2 months ago", "2903b4fb-38c1-5b18-86e4-223040292dc1", "3 years ago", "4 years ago", "5 years ago", "9aefa298-d085-5f90-b930-00b20da59e72", "16/01/2022 16:18:03", "0", "16/01/2022 16:18:04", "32", "16/01/2022 16:18:05", "512efb41-f0b9-5a8b-ac21-e6f988f04a2d", "4b63751b-d4c0-5c5f-9138-59a473a7daaa"], "data": [11, 78, 1, 1, 1, 1, 2, 1, 2, 1, 1, 136, 1, 2, 30, 2, 58, 3, 1, 1, 2, 3, 12, 1, 1, 1, 2, 3, 1, 83, 1, 1, 1, 13, 1, 22, 3, 2, 1, 2, 2, 2, 1, 3, 1, 1]}, "label": "reviewed_at", "count": 46, "min": " and Experimental", "max": "fa660933-1130-5c66-9010-24d641f70bc7"}, {"values": {"label": ["5", "4", "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "16/01/2022 16:17:56", "3", "16/01/2022 16:17:57", "2", "1", "16/01/2022 16:17:58", " i had to learn the new feel to the game. In SC2 you now get to your good units by having to research most of them", "538c1919-dad5-54d8-89b1-619b8c7656e3", " and no larger maps to choose from. In the first version you had a large selection of maps", " you can have multiple branches of different customizations", "16/01/2022 16:18:02", "16/01/2022 16:18:03", "1 year ago", "2 years ago", "122158646", "16/01/2022 16:18:05"], "data": [285, 62, 95, 2, 14, 2, 9, 19, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]}, "label": "rating", "count": 19, "min": " and no larger maps to choose from. In the first version you had a large selection of maps", "max": "c58d87e2-558d-5eaa-96b1-2264f00e7e67"}, {"values": {"label": ["4.2727", "ef72459e-8f5c-57dc-af42-0127d2903498", "4.6993", "4.6556", "3.4091", " and experimental units are really not that great", "16/01/2022 16:17:59", "16/01/2022 16:18:00", " in SupCom2 there are around 10-15", "0", " depending on your favored style of play. You can even simply upgrade what units you have instead of the old \"\"send oldies to suicide to make room for the new guys\"\" strategy. Actually", "3.3125", "5", "4", "4.875", "4.0345"], "data": [122, 103, 81, 131, 18, 1, 1, 1, 1, 1, 1, 11, 1, 1, 19, 7]}, "label": "average_rating", "count": 16, "min": " and experimental units are really not that great", "max": "ef72459e-8f5c-57dc-af42-0127d2903498"}, {"values": {"label": ["363", "4.6556", "306", "2390", "22", " yea they are all based of the old games models but i think that most kinda suck comparatively... like the experimental units", " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "0", " it is BETTER to keep the oldies instead of suiciding them", "32", "4.2727", "16/01/2022 16:18:04", "29"], "data": [122, 105, 81, 131, 18, 1, 1, 1, 1, 30, 1, 1, 7]}, "label": "reviews_count", "count": 13, "min": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "max": "4.6556"}, {"values": {"label": ["229196240", "229179703", "229174444", "95223899", "229131414", "229087196", "229080154", "229044038", "228960695", "198688597", "198672375", "196827630", "196827194", "196230804", "195216162", "195708350", "194329916", "194187129", "127432481", "127430959", "127420280", "127414142", "127414207", "127411122", "127409004", "127407425", "127405746", "228929144", "228928290", "228863224", "228776856", "228759010", "228750584", "228749581", "228724687", "228722869", "194027229", "194017047", "192503208", "192137369", "192087597", "192080051", "192046520", "192045625", "192042914", "192041796", "127405362", "127405229", "127404696", "127396175", "127396143", "127359093", "127348302", "127348104", "127347414", "228719614", "127345863", "228712408", "228703343", "228692495", "228632763", "228622725", "228576384", "228545194", "228523449", "192040841", "192039616", "192038437", "191969147", "191868187", "191531039", "191517192", "191510980", "191473354", "191467877", "127345574", "127333838", "127321759", "127320268", "127319595", "127299640", "127295961", "127293457", "127293081", "228523275", "228509090", "228499139", "228478134", "228397787", "228341387", "228321620", "191464723", "191463669", "191462968", "191459315", "191448343", "191443448", "191440654", "191439900", "191439828", "191439957", "127291762", "127286343", "127272761", "127262343", "127260250", "127259475", "127254841", "127250995", "127250993", "127250112", "38246272", "23501684", "23367706", "19236943", "19088941", "19030618", "15250428", "15250438", "15250426", " for so called \"\"game breakers\"\" as they were know for in the old games", "127238242", "127234219", "127230795", "127187464", "127183266", "127179492", "127178055", "127177220", "127161458", "228297521", "228244888", "228226690", "228181572", "228165736", "228114419", "228085186", "228057468", "227938540", "191439701", "191439022", "191438590", "191438462", "191438175", "191437894", "191437728", "191435985", "191434602", "191433776", "127153348", "127152461", "127151155", "127149546", "127147505", "127144002", "127140095", "127137390", "127131702", "127130838", "227875021", "227791669", "227778090", "227771273", "227732223", "227730979", "227715331", "191433462", "191432612", "191432155", "191353081", "191322300", "191322155", "191321523", "191169574", "190972289", "190971178", "127127997", "127125697", "127123561", "127120887", "127117350", "127029556", "127014676", "127012426", "126806434", "15250427", "15250430", "15250425", "15250424", "15250437", " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "15250432", "15250436", "11 years ago", " because the longer they stay on the battlefield", "227695298", "227689648", "227681843", "227672104", "227658242", "227639598", "227614951", "227582245", "227560725", "227547589", "190970117", "190958407", "190900156", "190899558", "190826055", "190820482", "190815305", "190807964", "190805061", "190803084", "126755575", "126755116", "126754711", "126754570", "126746667", "126742656", "126737441", "126736040", "126678115", "126641084", "15250434", "15250431", "190795136", "190786135", "190783552", "190766977", "190764517", "190762148", "190763953", "190763710", "190763007", "190761169", "227514155", "227512948", "227493289", "227489183", "227489075", "227469318", "227466484", "227455329", "227437332", "227433603", "190758968", "190758657", "126629986", "126619345", "126599299", "126597316", "126588300", "126586642", "126576266", "126565334", "126559156", "126552237", "227368178", "227336919", "227333306", "227330788", "227308429", "227300137", "227299158", "227277590", "227277469", "160658457", "157919507", "123364925", "118294186", "116746823", "116634709", "109093076", "108515660", "75707639", "227271113", "227216898", "227212033", "227210524", "227187244", "227186461", "227165525", "227162981", "227149188", "74341808", "126539613", "126536245", "126530828", "126528004", "126526950", "126518100", "126506130", "126498760", "126495952", "227144955", "227115495", "227099195", "227073234", "363", "226961718", "226957452", "226923078", "226915139", "126476050", "126473103", "126440879", "126432204", "126430601", "126410978", "126386211", "126374385", "126350389", "126348541", "126347731", "126346918", "126344921", "126343579", "126337946", "126325080", "126323055", "2390", "126315942", "126302586", "226900312", "226893604", "226870200", "226863307", "226855621", "226844023", "226834410", "226813954", "226754257", "190364463", "122923657", "122567098", "122446616", "122436959", "122339952", "122182335", "122102991", "154204652", "141605618", "138719704", "137193968", "136798584", "136465444", "136365231", "126301922", "126301717", "126291693", "126283489", "126279116", "126277361", "126273657", "226733824", "226732965", "226732331", "226732189", "226723463", "226718702", "226704721", "226700717", "226700432", "122087294", "122023762", "122010486", "121995492", "121974894", "121930697", "121884814", "121884636", "121868056", "121864917", "126268175", "126265497", "126261158", "126253606", "126259865", "126258810", "126258784", "126256170", "126249716", "126252644", "226679986", "226677148", "226674137", "226672941", "226663884", "226662940", "226662747", "226661973", "226608892", "121860312"], "data": [1, 1, 1, 106, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "comment_id", "count": 395, "min": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "max": "95223899"}, {"values": {"label": ["d749678d-aeba-5a6b-b8e2-8d2121463672", "9f20312c-1047-5824-97d2-d5563b8fd046", "178b3b03-2c56-5abc-a016-c74c2633c9c2", "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "bc017585-3bc1-5a37-9e58-f0bed6de9a72", "4167ea1c-87b6-5dbd-a04b-56fc7d1948e9", "b4c20627-111c-5ad9-809f-11d6a82c675d", "ea9ef1ba-d537-5b73-ab71-790616ef3258", "3e14ceea-0717-51ac-9edf-6b0d17b9f978", "3bdf13c6-ed6c-5df7-a7cb-f87507d4b133", "92688319-f675-53b8-9468-2e7b1ea9bbc4", "ff2acd3f-f96f-5935-bdfc-8e29e518fb60", "a3a3d750-800d-5eef-a917-fd5b00598f06", "ebae6bfc-540e-5f39-9ce2-2d46db50b49a", "78865f85-196f-515f-90ed-a8dad95d9065", "89ac96f3-a6a7-5f6e-ac22-302869e30bc7", "65c38814-b259-591c-ae59-a3f0fbae81d0", "902d7992-f6fd-55bd-b5d7-408db5a49648", "540015d7-27e3-50f6-b66b-8646416c0cfb", "00bd1c61-b1e9-5996-9cb2-68f647941463", "5cf58f8e-75b2-555b-b9ac-0edb49219337", "992506c3-cb1d-5a05-afc6-cce6a4a437fd", "70c3cefe-763a-5aca-9b7d-5bd2b36c5595", "c1aea343-68b1-58fa-8a7d-07f265e664cb", "fec5af3e-7f63-5e5d-9649-1b81750f3e24", "bc585083-82d6-5cb5-af8a-7f19120e6f3a", "d92ea3bf-7fab-56df-802f-973a7be01387", "4eeca482-acc8-54f0-bf9c-1552ad6304c3", "b6503cc7-6b14-5ea4-ae9e-5e984741ae65", "4840bb9f-8063-54f1-aafd-dc779ba006b8", "5dfb09b5-3b7b-5c92-8d69-2e487ee55948", "58e11806-69db-59a1-bf1b-1931387149b4", "1b36ae98-a3b9-586b-b75c-92d0b0a64fbe", "ce1ab1c3-34c5-5b21-90d3-be7a37b215d1", "926fe7c6-6345-529c-91bc-35736576d50f", "b74cf53c-979d-5157-b1b1-28572636ecef", "f6a47493-63ec-510b-aba2-8a68eff9bc34", "9699ef26-f730-5927-bf3e-7cdf8ecbb2a5", "3de73f9b-98c9-56e2-805a-e539ab1e5e33", "a2bc0bcb-0540-5dca-b1c2-06430afdd624", "8c024bd3-193e-5631-802c-3a989f6d4f73", "1a337911-6166-5983-b5cf-944db19384c8", "8c51c627-f616-5bdf-aeff-d93bf787994c", "dfa3ef96-f70e-5e78-9ee8-8d0c57f017c2", "8c35296d-ba41-5598-a513-740f8566113e", "6ebdfa30-4058-5fa6-b76a-d8bc6977e810", "960cbf7c-2354-567a-ba9c-537f3e63810f", "69500d83-dab7-5078-9aa1-5e2200736382", "d361c95b-fd18-5024-a6fe-f997562e2d3b", "c74037cf-5c28-5aa1-894a-c9abd50cdc79", "ab03b0d3-cc3b-5cf9-9894-200631099bb4", "296f57cd-b10f-5bd0-8dd9-78048b7c2e37", "667613eb-326c-5e9c-a48d-bdd2461a770c", "603d6f26-ffc4-5059-8cd8-ed6ddd671e63", "7e989ba1-5dbc-561a-b719-01ed3cda849b", "4f131751-4d8a-5bfd-af50-9d2ce3dd046a", "8cbb57c6-0882-59dd-af92-73b57a213812", "86570fa2-2141-573f-93ea-6368fedc9d0d", "a3955d77-2dea-561b-823c-41bc60377780", "9e0d282d-056f-55c9-a62d-13e79bbb844c", "ee801ec0-c5cf-5655-8498-a9770f1a6921", "4ef37b88-1ab9-5d98-adfd-5a7790b9cdfc", "232f5009-6c44-540a-9e7a-040e815522eb", "bb5c5e36-48cd-533e-8b32-ac1840944224", "ce94d9a4-0183-5315-8521-941c99a5aa68", "0fcf6665-8e4c-55e5-8723-8ea686ad425a", "524f0643-9cda-5306-81ab-277f533b47da", "fd3b358c-a67f-5475-a1cd-04c862f97b4e", "aed215bd-32e5-5577-be72-8fe1a4273d12", "87901149-9f7d-5db6-9c6b-7f516bda5b83", "db0b55df-7fd4-5d5c-90d3-eac2b049be4c", "c026bcd2-f440-5b87-95d0-a9dbdd87d4fe", "0d5805fa-77a0-581e-9f6a-b5441020925d", "20b6e8de-5239-5339-97cd-f4a96cf19873", "d7a8c6c4-234e-5c12-a8d0-af859409bd8a", "09c6537e-9796-5aca-a264-354c489b7706", "b6dae06e-562f-5f67-b905-6a267a1b3147", "6ff43da6-1ce0-54d4-9080-221feba20bd8", "9dc8e634-e9bc-584c-b64b-bb39c8f54fce", "3025b560-5f5b-560b-9b15-d3c2ed1468b0", "2dee6b9f-1dd6-500a-9518-e48555992512", "348d2ec6-347b-50e5-9fe8-388a58176915", "de401188-0285-5ddd-93d8-f84f18f155e2", "6879d252-929f-560d-a2f6-c29114a460cf", "065df515-c00f-5674-8005-0e71aac9b6cc", "7b762f11-3f30-5648-898e-b365a7eaedd8", "df5e5870-c422-5585-9dbd-2f01e48ee872", "b9a43399-3aea-58dc-b1c2-96e5bab6e7f4", "e3d25147-7e31-5ade-b955-8c6c07276063", "37ab8cbb-cbe6-5514-bb5a-3223ae898d16", "156a2f4b-a3ee-5a50-8bf2-f2311c908491", "3da6f23f-4693-549c-9b9f-0faa66b56124", "66f84845-97c8-5cca-8bf1-4cc4cdfceead", "8a38edf4-1d13-54d2-a32c-f98303cbd0ac", "b25ea776-319f-5907-bb36-8330e0b9e736", "b7379f49-dc90-56f4-8823-769c4832168b", "92468c29-d5fb-59dc-a142-1e67d15d1ee1", "81bfcb3b-43a9-55da-84ca-2712183f9869", "77925e75-8d4b-5970-9020-ddd3517955c7", "22f370a8-e30f-5cea-9d38-0d7b9da2fd0b", "3c5e7a8f-7138-5143-a3dd-81d9f2bf87e6", "77005922-343e-5afd-8604-de6116cb0a81", "ead016dd-471c-550c-8335-e80ade7ecbb9", "3f2ea70f-6737-57b4-bbff-c6b5af771f90", "14829c73-4cad-510d-9d51-01ef577acadf", "fe7a0330-a5dd-530e-9497-80d37d07253b", "e59c376b-a912-50c5-9d04-8f7f3e7a6d45", "5104f652-46d7-5b1e-bdf2-55b7f55d4b22", "780060a5-4afc-5712-9c61-66c3df2f51ff", "333d879a-9b72-50d3-a5d7-faa0961846ca", "41044c39-03df-5ca0-b0da-9219160fa67b", "c64a9e38-39cc-50ef-9d30-1eed268a4a24", "8e31a70f-17f9-53d5-9f0f-3b578d7433e8", "42674a2c-bab8-5cd9-b2f4-a5b33733beb4", "322502c8-f81a-51b5-b3bf-e6e61a83b045", "c397a7c1-d874-554e-9004-4d7a2422f5d3", "8e0bfb12-1204-59aa-ae95-fc75ec400ba0", "c0b37854-ae65-508d-a8d8-05183e6ca822", "8af5ed1a-cca6-5a39-bcf8-bb9c25ec7806", "c5dd07cc-ca1f-52d8-82df-d13c4e129265", " u can make them with very little ease and there not nearly as effective as they use to be.... which i guess is the trade off for it", "928838d7-ee40-5739-a91c-37320381b139", "0a0d4148-507a-575b-8ca1-9ce89095fc80", "f30f8cd1-56b3-5068-bcd7-d59438a6da70", "caa8b6bd-4ca5-5ed9-b467-f4fc59e596ff", "b6fc226c-c88b-5332-88db-545da41ae9b3", "b0620603-ee01-512d-bdfe-b37993ab43ff", "41b29280-1727-5bba-ac8a-17e914bd2d00", "0efc324a-3a27-5e05-b98d-8cb6cd444775", "3bfce4cc-4c76-5c78-bc93-d740963116f3", "b72f7138-db42-5954-9039-1eebfbe44ba6", "750791b6-adfe-5127-aa53-9a502824f996", "83cdeff3-bf81-5aab-a214-4f778969e26c", "2f8a681e-1bd7-5a6c-a446-4ac731ed373b", "ef6ab344-54b7-5244-a7be-81066f12b6ba", "d29dc126-1eca-5ed3-8156-9f4d98d42b09", "21bbb55e-c631-5317-bbbe-e966c51ddc36", "7fc9e390-1992-5327-9a3f-8730d97e32b3", "e00ba275-4a07-5d26-b371-4317a039c78c", "e6b35618-1a65-58b4-b82f-91fe5c64d444", "85d2e8a6-54a4-5cfd-85b8-a40628881808", "de5d066a-fb60-5496-a2af-4708d4867650", "a803b874-c886-57b3-b93b-16a92cb2c4af", "9d0a0700-633a-5cb9-b33f-88479669ad1c", "78a38873-09a0-5f5c-8680-56bd3d8182bb", "0b9eb2b5-8735-5a5c-b3c1-e574976ff59a", "6680ec17-93e7-5d88-be84-252b6dcf4afa", "830e77d9-5c67-518a-a24d-48656e6ec23a", "9f9fe687-9b39-54dc-a594-be74dc951e9f", "7a0bc368-d016-51c1-a93a-e5255b8818b6", "c68ab9a9-35ca-50e7-8d99-61aa90cc6170", "3c2570e7-dcf8-5ca5-a2e5-cab3f469a020", "eb70dff8-04e8-5a64-a14e-63186d060a0e", "70075879-a707-5623-93eb-21a98adec3ff", "b2f4b512-cb05-54e0-8cdc-5513f11da130", "ca9738d7-fa47-5310-94c9-9abdf85f4aec", "7cdfe34c-abaf-5aef-9de4-e655f148a573", "92c805bc-a7f5-5195-a86c-1bae32b5992c", "342a7542-8347-5f47-a2a1-3210f50a807f", "7c0656aa-e5d5-5531-a479-c2da27eda948", "6344ef26-f49a-5fe7-adf8-f78f0291da78", "9d8c6279-b9ad-5934-8270-e45b1a2514a7", "bb1ba1ea-fdb3-5210-a1f0-c5dde357c6c5", "59c37463-7e8e-5dac-b39d-25c12a73e452", "4336655c-bf54-5815-8b4c-c7257f8ee373", "161d1563-a683-5027-9a7b-226dd83bacc9", "a9ead4c5-5697-5920-8415-47091cdf9b62", "be7a52a7-154c-5468-83e5-ce5d947f712d", "ee96d446-bfa0-5374-b74e-a26f96eab46d", "79fbee79-80ae-5908-8cda-70f9293e272f", "7e71ba28-f137-5fdd-80ab-d91a69dcd9ad", "10273c14-150a-59ac-86f3-2040fae23777", "1a5bd81d-12a7-5f67-b456-c557a1b6029b", "ce147da5-c01e-5a86-a357-f8d3ece4a123", "df892d55-bd89-528b-8528-ebb70103f590", "5465f272-2a25-544e-a43e-a137e0899216", "9603729f-86c8-5e52-a9c4-aea8bc2c705e", "4af31d2f-d9c0-55f4-9083-3945e69aede0", "7be993e6-155e-5555-998b-cedcee64ef71", "60e522b6-7f19-5e3f-8456-548142cd2603", "00a29941-a023-5474-a4bb-3c28f9699a6c", "bc7017a3-b713-5c27-9b55-944deacc859b", "11ca20bc-d09d-5da2-9f77-75560a67b0f2", "4ca56a88-18eb-5e1a-af3e-f09fb8a295b1", "a9aaf6b6-d248-5257-81b4-4261997b6957", "43d68c51-de66-5084-bb9b-beb70dd04227", "74124d14-3a82-5efd-8d25-925413486048", "65a5e017-1707-51de-9fa4-f01bd77a9e1c", "a6daf2c6-b2e0-56b6-942a-20ec613b3e8c", " don't make the same mistake I did. Do not buy this game.\"", "7d45dc21-cb6d-566e-829c-0b6a8f1fcb9d", "fe7d8b34-e569-5186-8dce-57c70a13d88c", "1", " the deadlier they become thanks to experience now. The much-famed and even moreso whined-about economy that made SupCom 1 and Forged Alliance so famous (or infamous", "6dbed12c-450d-541a-a190-c15f03c40aa6", "ddd95f84-96b2-5c7d-bb7c-53c36e6df414", "c636381d-0229-527d-99a8-bff81d749a13", "4d3e75a4-f345-5e58-bdec-b17eba6b54e8", "c434c843-886f-51ac-be66-1444953b1f34", "e98cc6f9-fb85-5bc5-8a5f-709d56e7a08a", "ab190533-6515-5e00-991f-36666c9cb8f4", "b69b8ac8-89ff-5e89-9697-52a682ad0e76", "b707b4b5-8acc-5c69-9279-f1029422274c", "ce132a16-19ad-5dc1-a222-9a18b7751770", "51346905-fab9-5ddd-bdc0-a3e78448129b", "6f4b378a-4b78-5beb-bcc2-2aea05ea730a", "15117320-4aa0-5f15-8d9f-44eb7891adfd", "7578b6e5-5098-5f49-b320-ee99268986f4", "e19bd9fd-6c3b-596b-9014-d6d8e6238e37", "31786614-0e1e-5a38-9e27-8f23084e6ee1", "3ae8c7e2-1f22-5cd8-9992-6d5f03e37b8b", "df9c8e11-c20e-5a8b-b090-975550d21a38", "9d91f740-ff30-5f49-a9e7-32cf33d739c5", "fed5a40d-6b6a-5212-aab1-7d644fd4c0d0", "017d9f32-3702-5eb4-b1fb-7426864383c7", "21945403-7c2d-5e53-bdec-30fc9caec384", "f9469cbd-8ad3-5f74-9b6d-3aefeaf073c7", "2c072257-f611-5e72-a1ab-5dc75ef88f59", "1fc8da0f-ab3c-5904-b6d7-e967083ec472", "3d6378f1-c8fb-53b7-9080-d2429741d858", "2d87329c-fbd9-571f-981d-46ff995fd728", "d9d6ab84-c03e-5838-a724-e49e367d0fdd", "03ef4326-bd0d-5d6d-8a82-673db2023dca", "1892e4f2-a10d-5cbe-ae9e-af24f821912b", "b773b1a6-5b9a-5f68-9670-3489f0334157", "d0cf2335-6dea-596b-8480-460279c701a9", "7597e0e9-5e76-5dde-8bf8-327904575e9f", "269f8e2e-b3e2-54a2-af5b-504e0de18999", "a2db9996-35e7-58d7-ada1-a48703f0843e", "c61a0a2e-6150-5816-827e-7d7fc7f7f94e", "2926a631-7fde-5f98-beff-434285a55c73", "c89c209b-87b7-51c6-b645-604bd2589c10", "fa3daaef-6785-5e0d-a7a0-53a2605e5a60", "6ac96e96-d51b-5c49-8a2a-f21a298a2960", "d433a372-ec33-57de-af65-ddd03d8458ed", "be19f9b0-7d18-50c2-8f4f-d22f83fd1081", "a56d9282-4860-5371-9f05-a9bd99c99914", "58a3cd56-3757-5683-bf5e-043f7dc92826", "a9fd61c1-57e1-5036-8cf4-01149ac3e34d", "c3f3597b-51a8-5aec-a613-90242e40e8d8", "cec310ca-6de1-5376-8bfb-8be08ffd1b87", "fe663898-37db-56ab-9d32-c3d52f93b4e5", "d95796b1-88cb-5c86-bc22-0bc9db290b2f", "4a2b7da3-cc8e-59cd-9dc0-ffa2af5d19c6", "0790d8e1-1514-528a-8f1e-1e5dc035db8b", "4984011a-1fca-57b5-89a6-e76c780daaf7", "7ca99b13-422b-5892-a441-b2dd7bf7a000", "f5f793cc-dd08-5247-9ace-2498e78f061d", "d8b5b07f-b13b-58cc-b896-615b9ad105d5", "de0956d4-0d06-55f1-afce-9551324185ce", "2dc7e561-ee75-5e53-ad76-2859903df7c3", "f255781b-e9a0-57c1-a451-7a35a3332573", "aaaaa9b0-6933-56cd-982c-9093972c44ea", "173c87ef-e2a6-5ad3-89a4-432c8c9b8d3b", "a5a4fa33-a821-53a1-82a9-e28573bb422f", "5cb903ed-3a8c-5949-adae-8c1573defb6d", "0458081f-b0d0-51c3-a5bf-819b1d1ea16b", "0370dddc-2aae-508a-b44d-122e6d641c33", "3b4eb371-c531-5ab8-ac2b-889dd0e24cfd", "11982b37-c606-5a12-a2fe-1999da7e9a6a", "049e260f-a2e3-5ee2-8422-c0b928f66317", "5542b8bf-ac17-55f6-937a-1d90f91b9677", "9bd8d11d-12c7-5078-8ffd-a76aad22839c", "deb423a5-9af3-5ba2-b788-afb7f1433960", "27f54783-5943-5768-8473-f46535b7d205", "984c0a44-286b-5f5c-a04b-21f0ec500bb6", "6ba4d664-9c8a-50a0-80af-696a0a693e1f", "1e939271-deb9-5fe8-a1c4-aa8dbdf78342", "23d9c3da-b664-52b4-bf69-0f8a7d077f90", "9bd2d34a-5e61-57c4-9d29-646e5cf6ba26", "b1f8541f-3d73-58d4-8fd2-91efc595fc96", "88ef6fb7-c95f-5675-9d98-c4a50cfd519a", "b337caff-962c-5242-b3d0-8abebb580064", "e04f8d1a-9267-530b-b5c0-10346dd373e0", "df5a7b8a-f709-59f5-b49d-dc724ec76b61", "859ac623-c5af-5604-91d5-8a99eb2504d5", "5f3917ab-9dd6-5929-9744-e3a2e874d7b4", "a99d570c-bdbd-5227-8609-ece8f499ebb5", "587a3ddd-1619-5729-88bf-61b91642d4c9", "33f65eb0-1f44-526d-9319-c906125ee5c6", "da0393de-bb8b-55f8-86de-58d92cfe4241", "2f7efb29-de97-5904-833a-c9a78dcb9212", "7615eeb0-1644-5875-856a-08aeefb4355c", "77d0486c-c3fa-55ce-a778-25a9ff85e1d6", "821dde30-9ad1-59e3-b367-e0a36dc2691b", "584ee887-b8e9-5831-b34c-9054af211b2e", "83fda476-c6ad-5de0-beb9-24a7cd48fdd2", "9a3be338-8648-50e4-a0f5-805fd576c024", "b79f70f4-fd02-53b5-8027-838f4073ed73", "123e30f0-b2b1-5458-8d8a-faee417f379a", "27ea1f05-cdda-5466-ba89-1578af352018", "71a0a99a-e767-5285-ad31-aabfed1b91d7", "05ca2650-238f-588e-a873-7007194759d7", "dbb361d8-d468-5822-a0a8-10bbb1e5c348", "bb53d5c0-348a-5800-87a7-d4eb984ca544", "89c9e45b-2b49-5be2-9e62-52634bc7fad7", "11338a10-215e-5f67-a575-5237fef59b16", "ece4609f-bd97-5a47-82b3-c1f5352598f3", "f3a80eb1-718b-5c8d-b318-b18bc83fb20e", "a77123ba-ba04-5c96-9775-f7933c733a37", "227010137", "93e6fc6f-7bf6-5a2e-b4a0-834fc2475980", "7b9af1f2-7b3d-5164-80f0-800133b61ce4", "f864ba04-27e1-5673-875f-6fd69443fb3e", "922e0d7d-c3f4-5b50-a543-e756033d3a1c", "4773a39c-0194-5088-af97-1597830af3cb", "23759918-be89-5c65-9bf4-80ffb801cdff", "378bfa7c-9e8d-5d24-9947-c0515f458a2c", "bc495ea9-fc64-52df-a68f-c177f7c045d4", "9d54e2ee-64d7-501b-adbe-31c0969dbe17", "1babf017-7fdf-5c87-8652-1407fa60eb90", "d7029cd7-b7f2-5db5-8963-596a04b78acd", "e1f7d79c-f4a9-505d-9273-c1de69d35bda", "8e92998d-0da9-5f08-b431-fcde798123c9", "7f06208f-0a2b-54ba-94ea-112a39a0c52e", "a4ae2322-89b3-504a-b7e0-9fa33a9ca17e", "138dec55-89dd-5a19-b289-861f05404137", "1df8ba9d-c4b7-5f94-ac1b-796c510d5a5e", "46be1ec8-0af4-56f1-89c5-a57e8a345971", "1704cd22-d544-5d71-9815-f5eb2372a044", "bd6cd803-2b83-5424-9c1e-5d536f889b79", "a8cb85ec-1fb1-592d-86dd-ad1977d95f62", "126319104", "aac40f5b-5309-54ee-b48f-8cef2b574aa1", "48d6e2a3-a18e-56d1-a6c2-3f3d10c0238f", "9b0e9798-1104-51bb-bb02-c4791677f066", "ab53e60a-a8f5-514d-b991-35bb8c11d5b5", "07271c3d-9b17-5d98-8c25-bdd77055b420", "213d7265-2a67-5a82-8be4-aedcc9d26874", "6a01d10d-880f-5927-a855-9877f163f764", "ccbc3319-a7f8-55cd-99c4-8df80b9f986e", "653adbc8-2641-556e-95bb-4e98b787d90b", "090663b7-8c74-501b-8c5c-ad3a2534b71f", "8a8d8b55-7214-5e92-b9ed-733d6bf7071a", "8625e7a7-4e27-5d30-a05b-fe5bf7c2cadd", "9bf14046-e0c5-500a-9dcf-e9c0e6afb859", "814c2ff9-f939-5b24-8c3e-41e751846aa3", "89ff972f-705a-50a7-8f9d-f001de728a39", "a881b3e6-56f2-5ed3-99fb-dc2394c9a4eb", "6ffa7acb-1ab2-53b2-b96c-7d8ffc9cad47", "11608ce6-435a-5fa7-8361-78c102e07aa6", "330fc9b1-4297-500d-b450-59e0c113c0c8", "29596331-f93b-5f15-b930-ea33a3c3da35", "e77e4e5f-c996-51ef-bb79-6354405c211b", "f2fad2ce-ed9a-598f-9e5a-a3ad7ea6a717", "6b553447-1f16-512b-b18d-81f6ffac6d98", "0cf0d647-5307-585d-8435-a37e7f419aa3", "4fd68a13-9df5-5e86-b0a8-836bae43d243", "36b7fb9b-c0eb-5073-b128-5bd4c7d72748", "3f2027c9-d810-5e8b-b6ea-5a2af73af35f", "dc10d9ff-527d-5235-8da4-213d2422ccc5", "fd6bea00-05a9-5cd4-98f9-5f0d4ed43eb0", "29337594-2061-52d7-9c1a-b31c9022a6b3", "c0601d16-e5fe-5975-a114-e857b25aef61", "c2e549f2-3344-5ca7-9e6a-2b4bd5a25504", "ea57e9d3-97b4-56a0-b046-1b7024e7f67a", "7c5e8e10-dca1-528f-875b-96f7b995033a", "60bdb40e-e15c-5bfa-967b-9aa559482629", "23656563-b23a-5a13-b5c5-5ab4eaabf6e9", "74c08633-86e1-5e62-a815-f443ab052ecd", "3ff9d937-f377-5e4e-b3a8-ba7eb733ad07", "2620434c-3ae6-501e-ae0e-15e040f9a198", "2cd61b63-9d87-5b31-a9f0-29eb39dc6df2", "3dab1ab5-cb69-58f7-819d-dff2b315d6af", "8592ca19-f069-5470-92be-ef5503f7df48", "3add2868-0cfc-5f48-8791-d926b2dbded2", "ad9b54e3-4762-590b-a852-63af3528cbbd", "385e416e-b857-55ee-ac2a-0576072e6373", "e052cd77-4a49-532c-879f-d46458da984a", "afd78dcb-1b2b-5967-bdaf-e82cc7a64652", "db126a54-89c7-5ad8-ba95-641b8c223538", "19ee363b-60a8-5ded-96af-6f28febe3495", "2d355f38-1266-5775-9058-b21faddb6072", "bef4412d-50fc-579b-a749-e67a52661770", "7b82a6a3-87e7-5cfe-876f-56a53ab2eecd", "fd975a90-b8e3-5159-8130-c50c5ac945eb", "bd4d2b81-94df-5627-889b-21872c0e777d", "ef5055a5-a02c-5472-87a9-158244c487f6", "86d8bb86-c5df-535b-9e95-d709cf4b5922", "17905c2b-6d32-56c8-b6eb-5d4ab9f2f219", "19a05085-2d6f-5a53-9fe9-8dc9942c7879", "e5c8c18d-9848-59fe-9d4a-12c604a675b0", "e6a73770-f7cd-564e-bf77-367069bbcb04", "fee58b67-3483-5b70-bcb6-74e5f0e93fdb", "f882a003-351a-5ef7-b7b7-757d81ef4495", "d736627e-a587-5ffc-b505-49e31c8867f4", "995d0ca0-de0d-58fa-90d5-7d9799b0e36d", "29f3ac3e-d2fb-5187-a780-1670136e97a0", "206cfb0b-c2bd-5c16-8699-f8f01d670f44", "268a103b-4fb8-5479-8872-9cb3d3383705", "8cceda67-4c9c-5187-8a0e-fae36799ed85", "bef97385-8ff8-50e6-940f-f0f05b81a9c4", "53298df5-7dec-51dc-b18f-29b2a7165011", "47719f17-1a09-557b-a952-c2ed310910b1", "a0548af2-8959-52a2-ab05-c73a838d9145"], "data": [1, 1, 1, 106, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "uniq_id", "count": 395, "min": " don't make the same mistake I did. Do not buy this game.\"", "max": "ff3fad3f-62ee-54c5-bab0-6009af0cf671"}, {"values": {"label": ["16/01/2022 16:17:56", "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "16/01/2022 16:17:57", "16/01/2022 16:17:58", "16/01/2022 16:17:59", " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "16/01/2022 16:18:00", "No: I don\u2019t recommend this product", "3.4091", " lol) has been DRASTICALLY simplified", "16/01/2022 16:18:01", "16/01/2022 16:18:02", "16/01/2022 16:18:03", "16/01/2022 16:18:04", "2bb7b6b6-1b88-5903-a898-0a754ac687d8", "16/01/2022 16:18:05", "16/01/2022 16:18:06"], "data": [13, 106, 52, 45, 47, 1, 55, 1, 1, 1, 32, 29, 27, 43, 1, 45, 1]}, "label": "scraped_at", "count": 17, "min": " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "max": "b5141b5e-d8d2-578f-a02e-1e47f25018ab"}, {"values": {"label": ["0.0 - 49.8", "49.8 - 99.6", "99.6 - 149.4", "149.4 - 199.2", "199.2 - 249.0", "249.0 - 298.8", "298.8 - 348.6", "348.6 - 398.4", "398.4 - 448.2", "448.2 - 498.0"], "data": [51, 50, 50, 50, 49, 50, 50, 50, 50, 50]}, "label": "index_stringindexer_transform", "count": 10, "min": 0.0, "max": 498.0}, {"values": {"label": ["0.0 - 3.7", "3.7 - 7.4", "7.4 - 11.1", "11.1 - 14.8", "14.8 - 18.5", "18.5 - 22.2", "22.2 - 25.9", "25.9 - 29.6", "29.6 - 33.3", "33.3 - 37.0"], "data": [407, 62, 5, 3, 4, 4, 3, 4, 4, 4]}, "label": "name_stringindexer_transform", "count": 10, "min": 0.0, "max": 37.0}, {"values": {"label": ["0.0 - 2.1", "2.1 - 4.2", "4.2 - 6.3", "6.3 - 8.4", "8.4 - 10.5", "10.5 - 12.6", "12.6 - 14.7", "14.7 - 16.8", "16.8 - 18.9", "18.9 - 21.0"], "data": [362, 78, 33, 13, 3, 2, 2, 2, 2, 3]}, "label": "brand_stringindexer_transform", "count": 10, "min": 0.0, "max": 21.0}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [280, 132, 22, 38, 11, 10, 2, 1, 2, 2]}, "label": "sku_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}, {"values": {"label": ["0.0 - 41.5", "41.5 - 83.0", "83.0 - 124.5", "124.5 - 166.0", "166.0 - 207.5", "207.5 - 249.0", "249.0 - 290.5", "290.5 - 332.0", "332.0 - 373.5", "373.5 - 415.0"], "data": [126, 41, 42, 41, 42, 41, 42, 41, 42, 42]}, "label": "reviewer_name_stringindexer_transform", "count": 10, "min": 0.0, "max": 415.0}, {"values": {"label": ["0.0 - 39.2", "39.2 - 78.4", "78.4 - 117.6", "117.6 - 156.8", "156.8 - 196.0", "196.0 - 235.2", "235.2 - 274.4", "274.4 - 313.6", "313.6 - 352.8", "352.8 - 392.0"], "data": [147, 39, 39, 39, 39, 40, 39, 39, 39, 40]}, "label": "review_title_stringindexer_transform", "count": 10, "min": 0.0, "max": 392.0}, {"values": {"label": ["0.0 - 43.4", "43.4 - 86.8", "86.8 - 130.2", "130.2 - 173.6", "173.6 - 217.0", "217.0 - 260.4", "260.4 - 303.8", "303.8 - 347.2", "347.2 - 390.6", "390.6 - 434.0"], "data": [109, 43, 44, 43, 43, 44, 43, 44, 43, 44]}, "label": "review_description_stringindexer_transform", "count": 10, "min": 0.0, "max": 434.0}, {"values": {"label": ["0.0 - 1.9", "1.9 - 3.8", "3.8 - 5.7", "5.7 - 7.6", "7.6 - 9.5", "9.5 - 11.4", "11.4 - 13.3", "13.3 - 15.2", "15.2 - 17.1", "17.1 - 19.0"], "data": [464, 15, 7, 2, 2, 2, 2, 2, 2, 2]}, "label": "recommended_review_stringindexer_transform", "count": 10, "min": 0.0, "max": 19.0}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [466, 15, 6, 3, 1, 2, 2, 1, 2, 2]}, "label": "verifed_purchaser_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}, {"values": {"label": ["0.0 - 3.5", "3.5 - 7.0", "7.0 - 10.5", "10.5 - 14.0", "14.0 - 17.5", "17.5 - 21.0", "21.0 - 24.5", "24.5 - 28.0", "28.0 - 31.5", "31.5 - 35.0"], "data": [453, 15, 7, 3, 4, 3, 4, 3, 4, 4]}, "label": "helpful_count_stringindexer_transform", "count": 10, "min": 0.0, "max": 35.0}, {"values": {"label": ["0.0 - 4.6", "4.6 - 9.2", "9.2 - 13.8", "13.8 - 18.4", "18.4 - 23.0", "23.0 - 27.6", "27.6 - 32.2", "32.2 - 36.8", "36.8 - 41.4", "41.4 - 46.0"], "data": [448, 14, 5, 5, 4, 5, 5, 4, 5, 5]}, "label": "not_helpful_count_stringindexer_transform", "count": 10, "min": 0.0, "max": 46.0}, {"values": {"label": ["0.0 - 4.5", "4.5 - 9.0", "9.0 - 13.5", "13.5 - 18.0", "18.0 - 22.5", "22.5 - 27.0", "27.0 - 31.5", "31.5 - 36.0", "36.0 - 40.5", "40.5 - 45.0"], "data": [385, 58, 15, 8, 10, 5, 5, 4, 5, 5]}, "label": "reviewed_at_stringindexer_transform", "count": 10, "min": 0.0, "max": 45.0}, {"values": {"label": ["0.0 - 1.8", "1.8 - 3.6", "3.6 - 5.4", "5.4 - 7.2", "7.2 - 9.0", "9.0 - 10.8", "10.8 - 12.6", "12.6 - 14.4", "14.4 - 16.2", "16.2 - 18.0"], "data": [380, 81, 23, 4, 2, 2, 2, 2, 2, 2]}, "label": "rating_stringindexer_transform", "count": 10, "min": 0.0, "max": 18.0}, {"values": {"label": ["0.0 - 1.5", "1.5 - 3.0", "3.0 - 4.5", "4.5 - 6.0", "6.0 - 7.5", "7.5 - 9.0", "9.0 - 10.5", "10.5 - 12.0", "12.0 - 13.5", "13.5 - 15.0"], "data": [253, 103, 100, 18, 18, 1, 2, 1, 2, 2]}, "label": "average_rating_stringindexer_transform", "count": 10, "min": 0.0, "max": 15.0}, {"values": {"label": ["0.0 - 1.2", "1.2 - 2.4", "2.4 - 3.6", "3.6 - 4.8", "4.8 - 6.0", "6.0 - 7.2", "7.2 - 8.4", "8.4 - 9.6", "9.6 - 10.8", "10.8 - 12.0"], "data": [253, 105, 81, 30, 18, 8, 1, 1, 1, 2]}, "label": "reviews_count_stringindexer_transform", "count": 10, "min": 0.0, "max": 12.0}, {"values": {"label": ["0.0 - 39.4", "39.4 - 78.8", "78.8 - 118.2", "118.2 - 157.6", "157.6 - 197.0", "197.0 - 236.4", "236.4 - 275.8", "275.8 - 315.2", "315.2 - 354.6", "354.6 - 394.0"], "data": [145, 39, 40, 39, 39, 40, 39, 40, 39, 40]}, "label": "comment_id_stringindexer_transform", "count": 10, "min": 0.0, "max": 394.0}, {"values": {"label": ["0.0 - 39.4", "39.4 - 78.8", "78.8 - 118.2", "118.2 - 157.6", "157.6 - 197.0", "197.0 - 236.4", "236.4 - 275.8", "275.8 - 315.2", "315.2 - 354.6", "354.6 - 394.0"], "data": [145, 39, 40, 39, 39, 40, 39, 40, 39, 40]}, "label": "uniq_id_stringindexer_transform", "count": 10, "min": 0.0, "max": 394.0}, {"values": {"label": ["0.0 - 1.6", "1.6 - 3.2", "3.2 - 4.8", "4.8 - 6.4", "6.4 - 8.0", "8.0 - 9.6", "9.6 - 11.2", "11.2 - 12.8", "12.8 - 14.4", "14.4 - 16.0"], "data": [161, 99, 45, 88, 32, 56, 14, 1, 2, 2]}, "label": "scraped_at_stringindexer_transform", "count": 10, "min": 0.0, "max": 16.0}]}, "selectedFE": [{"transformationsData": [{"feature_label": "index", "transformation_label": "String Indexer"}], "feature": "index", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "211.5", "stddev": "122.54", "min": "*I like the fact it uses double A batteries compared to an internal rechargeable battery.", "max": "in between each secret is so satisfying.\"", "missing": "0", "distinct": "499"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "index"}, {"transformationsData": [{"feature_label": "name", "transformation_label": "String Indexer"}], "feature": "name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "469", "mean": "", "stddev": "", "min": " and they kind of fight over it.  They really like the retro Mario on the controller", "max": "yes: I recommend this product", "missing": "31", "distinct": "38"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "name"}, {"transformationsData": [{"feature_label": "brand", "transformation_label": "String Indexer"}], "feature": "brand", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "451", "mean": "", "stddev": "", "min": " I just wouldn\u2019t recommend now .... I\u2019m fairly certain those issues will be ironed out and I\u2019ll do a later review most likely recommending this TV.\"", "max": "yes: I recommend this product", "missing": "49", "distinct": "22"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "brand"}, {"transformationsData": [{"feature_label": "sku", "transformation_label": "String Indexer"}], "feature": "sku", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "451", "mean": "266631.73", "stddev": "99207.12", "min": " #1 is eARC (awesome)", "max": "yes: I recommend this product", "missing": "49", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "sku"}, {"transformationsData": [{"feature_label": "reviewer_name", "transformation_label": "String Indexer"}], "feature": "reviewer_name", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "453", "mean": "19.92", "stddev": "101.18", "min": " #4 is a regular 2.0 (works for most devices you want to plug in to get 1080p or 4k)", "max": "zachR", "missing": "47", "distinct": "416"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviewer_name"}, {"transformationsData": [{"feature_label": "review_title", "transformation_label": "String Indexer"}], "feature": "review_title", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "445", "mean": "0.0", "stddev": "0.0", "min": " BUT port #2 and #4 are the new HDMI2.1-120hz ports", "max": "look out gamerz, here comez awsome", "missing": "55", "distinct": "393"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "review_title"}, {"transformationsData": [{"feature_label": "review_description", "transformation_label": "String Indexer"}], "feature": "review_description", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "454", "mean": "3.84", "stddev": "1.83", "min": " and they are currently practically USELESS if you want to get 4K and Dolby 5.1 on them. They are currently not compatible with the PlayStation 5", "max": "there is no infantry, which annoys me a lot because i like the classic infantry, cavalry(armor), artillary idea. The Steam engine is annoying, its really laggy and slow, there are like 5 real units per race and then everything else is an experimental which i really dont like since they are impossible to kill and one experimental unit can kil 10 regular without even trying. The AI is ok but they are just annoying, the game is really confusing and not very fun. I have to get updates everytime i want to play, even when i dont play it online at all, I hate patches. The upgrade trees are wierd and require research to get, which takes forever. Overall this game isnt good, Starcraft 2 is much better if your looking for an RTS and Shogun Total War is also really good. Just dont get this.", "missing": "46", "distinct": "435"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "review_description"}, {"transformationsData": [{"feature_label": "recommended_review", "transformation_label": "String Indexer"}], "feature": "recommended_review", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "425", "mean": "4.09", "stddev": "1.21", "min": " and it is super buggy with the new Google Chromecast with Google TV. It will not get 5.1 audio with the new Chromecast", "max": "yes: I recommend this product", "missing": "75", "distinct": "20"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "recommended_review"}, {"transformationsData": [{"feature_label": "verifed_purchaser", "transformation_label": "String Indexer"}], "feature": "verifed_purchaser", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "258", "mean": "655.06", "stddev": "958.24", "min": " and to get 4K", "max": "yes: I recommend this product", "missing": "242", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "verifed_purchaser"}, {"transformationsData": [{"feature_label": "helpful_count", "transformation_label": "String Indexer"}], "feature": "helpful_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "424", "mean": "7017251.36", "stddev": "36576741.04", "min": " 2", "max": "Verified Purchaser", "missing": "76", "distinct": "36"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "helpful_count"}, {"transformationsData": [{"feature_label": "not_helpful_count", "transformation_label": "String Indexer"}], "feature": "not_helpful_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "424", "mean": "4495646.89", "stddev": "30454540.27", "min": " 3", "max": "e194606d-d5cb-5a98-8dc0-df3053b8aa4a", "missing": "76", "distinct": "47"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "not_helpful_count"}, {"transformationsData": [{"feature_label": "reviewed_at", "transformation_label": "String Indexer"}], "feature": "reviewed_at", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "423", "mean": "91221663.0", "stddev": "124910521.85", "min": " and Experimental", "max": "fa660933-1130-5c66-9010-24d641f70bc7", "missing": "77", "distinct": "46"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviewed_at"}, {"transformationsData": [{"feature_label": "rating", "transformation_label": "String Indexer"}], "feature": "rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "406", "mean": "313231.79", "stddev": "6185743.26", "min": " and no larger maps to choose from. In the first version you had a large selection of maps", "max": "c58d87e2-558d-5eaa-96b1-2264f00e7e67", "missing": "94", "distinct": "19"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "rating"}, {"transformationsData": [{"feature_label": "average_rating", "transformation_label": "String Indexer"}], "feature": "average_rating", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "398", "mean": "4.44", "stddev": "0.43", "min": " and experimental units are really not that great", "max": "ef72459e-8f5c-57dc-af42-0127d2903498", "missing": "102", "distinct": "16"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "average_rating"}, {"transformationsData": [{"feature_label": "reviews_count", "transformation_label": "String Indexer"}], "feature": "reviews_count", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "396", "mean": "978.9", "stddev": "1006.83", "min": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "max": "4.6556", "missing": "104", "distinct": "13"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "reviews_count"}, {"transformationsData": [{"feature_label": "comment_id", "transformation_label": "String Indexer"}], "feature": "comment_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "165972981.36", "stddev": "56535283.62", "min": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "max": "95223899", "missing": "105", "distinct": "395"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "comment_id"}, {"transformationsData": [{"feature_label": "uniq_id", "transformation_label": "String Indexer"}], "feature": "uniq_id", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "117776414.0", "stddev": "113745916.96", "min": " don't make the same mistake I did. Do not buy this game.\"", "max": "ff3fad3f-62ee-54c5-bab0-6009af0cf671", "missing": "105", "distinct": "395"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "uniq_id"}, {"transformationsData": [{"feature_label": "scraped_at", "transformation_label": "String Indexer"}], "feature": "scraped_at", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "395", "mean": "3.41", "stddev": "nan", "min": " but even hordes of units can crumble in no time it seems.  Regular units are just knock offs of the original ones and are only really good when you upgrade them via research.  However i do think the research is a cleaver aspect of the game and the brand new units/structures that were added are a nice touch", "max": "b5141b5e-d8d2-578f-a02e-1e47f25018ab", "missing": "105", "distinct": "17"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "scraped_at"}], "autoFE_flag": true}, "status": "new", "position": {"x": 62, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/transformation/feature-transformation.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "transformation", "text": "Auto FE", "slug": "auto-fe", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10"}, "ManualFE": {"FE": []}, "selectedFE": [], "autoFE_flag": true}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"inherited": true, "checked": true, "field": "index_stringindexer", "alias": "index_stringindexer", "type": "real", "position": 0}, {"inherited": true, "checked": true, "field": "name_stringindexer", "alias": "name_stringindexer", "type": "real", "position": 1}, {"inherited": true, "checked": true, "field": "brand_stringindexer", "alias": "brand_stringindexer", "type": "real", "position": 2}, {"inherited": true, "checked": true, "field": "sku_stringindexer", "alias": "sku_stringindexer", "type": "real", "position": 3}, {"inherited": true, "checked": true, "field": "reviewer_name_stringindexer", "alias": "reviewer_name_stringindexer", "type": "real", "position": 4}, {"inherited": true, "checked": true, "field": "review_title_stringindexer", "alias": "review_title_stringindexer", "type": "real", "position": 5}, {"inherited": true, "checked": true, "field": "review_description_stringindexer", "alias": "review_description_stringindexer", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "recommended_review_stringindexer", "alias": "recommended_review_stringindexer", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "verifed_purchaser_stringindexer", "alias": "verifed_purchaser_stringindexer", "type": "real", "position": 8}, {"inherited": true, "checked": true, "field": "helpful_count_stringindexer", "alias": "helpful_count_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "not_helpful_count_stringindexer", "alias": "not_helpful_count_stringindexer", "type": "real", "position": 10}, {"inherited": true, "checked": true, "field": "reviewed_at_stringindexer", "alias": "reviewed_at_stringindexer", "type": "real", "position": 11}, {"inherited": true, "checked": true, "field": "rating_stringindexer", "alias": "rating_stringindexer", "type": "real", "position": 12}, {"inherited": true, "checked": true, "field": "average_rating_stringindexer", "alias": "average_rating_stringindexer", "type": "real", "position": 13}, {"inherited": true, "checked": true, "field": "reviews_count_stringindexer", "alias": "reviews_count_stringindexer", "type": "real", "position": 14}, {"inherited": true, "checked": true, "field": "comment_id_stringindexer", "alias": "comment_id_stringindexer", "type": "real", "position": 15}, {"inherited": true, "checked": true, "field": "uniq_id_stringindexer", "alias": "uniq_id_stringindexer", "type": "real", "position": 16}, {"inherited": true, "checked": true, "field": "scraped_at_stringindexer", "alias": "scraped_at_stringindexer", "type": "real", "position": 17}], "actual_schema": [{"inherited": true, "checked": true, "field": "index", "alias": "index", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "name", "alias": "name", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "brand", "alias": "brand", "type": "String", "position": 2}, {"inherited": true, "checked": true, "field": "sku", "alias": "sku", "type": "String", "position": 3}, {"inherited": true, "checked": true, "field": "reviewer_name", "alias": "reviewer_name", "type": "String", "position": 4}, {"inherited": true, "checked": true, "field": "review_title", "alias": "review_title", "type": "String", "position": 5}, {"inherited": true, "checked": true, "field": "review_description", "alias": "review_description", "type": "String", "position": 6}, {"inherited": true, "checked": true, "field": "recommended_review", "alias": "recommended_review", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "verifed_purchaser", "alias": "verifed_purchaser", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "helpful_count", "alias": "helpful_count", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "not_helpful_count", "alias": "not_helpful_count", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "reviewed_at", "alias": "reviewed_at", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "rating", "alias": "rating", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "average_rating", "alias": "average_rating", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "reviews_count", "alias": "reviews_count", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "comment_id", "alias": "comment_id", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "uniq_id", "alias": "uniq_id", "type": "String", "position": 16}, {"inherited": true, "checked": true, "field": "scraped_at", "alias": "scraped_at", "type": "String", "position": 17}], "selected_schema": [], "created_at": "2025-01-19 17:32:50.388000", "originalcount": 5321, "samplecount": 544, "samplefile": "/FileStore/platform/sampleData/678d37425351fccd0b114dbb/part-00000-6bb59f94-0e63-4601-a3a6-3d55a8a0700f-c000.csv", "joinSchema": [], "updated_at": "2025-01-19 17:46:08.688000", "__v": 0, "datacache": 0, "sampleData": [{"index": "5", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ninjaafro", "review_title": "Bugs", "review_description": "Picture quality is amazing, however within a week from purchasing the tv will not turn on unless I unplug and plug it back in.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229087196", "uniq_id": "4167ea1c-87b6-5dbd-a04b-56fc7d1948e9", "scraped_at": "16/01/2022 16:17:56"}, {"index": "7", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ohio Erik", "review_title": "Amazing 4k picture", "review_description": "I purchased this TV about 2 weeks ago and am blown away by the crisp, 4k picture.  I would definitely recommend this TV to someone considering an upgrade.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "229044038", "uniq_id": "ea9ef1ba-d537-5b73-ab71-790616ef3258", "scraped_at": "16/01/2022 16:17:56"}, {"index": "9", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bob279", "review_title": "Great picture and a good price", "review_description": "Best price on an OLED tv. Has a great picture and is easy to navigate the menus and connect via apple or Android devices. I always bought LG OLED tvs because I liked their quality and features. But so far, Vizio is just as good and a better price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228960695", "uniq_id": "3e14ceea-0717-51ac-9edf-6b0d17b9f978", "scraped_at": "16/01/2022 16:17:56"}, {"index": "29", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Alejandro Rivera", "review_title": "Best Nintendo game I ever played!", "review_description": "Yoshi\u2018s crafted world is the best Nintendo game I ever played since Yoshi\u2018s woolly world! Lots of hard challenges to complete and it\u2019s so much fun! I love this game!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127405746", "uniq_id": "d92ea3bf-7fab-56df-802f-973a7be01387", "scraped_at": "16/01/2022 16:17:57"}, {"index": "45", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Animehipster", "review_title": "Great controller", "review_description": "Love the controller no probs with it the first one was lost but customer service made sure I got another one and in a timely manner", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "192080051", "uniq_id": "1a337911-6166-5983-b5cf-944db19384c8", "scraped_at": "16/01/2022 16:17:57"}, {"index": "61", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Bob81", "review_title": "Outstanding!", "review_description": "This OLED is Excellent, Very Easy to Operate. I imagine that Someone may Complain but I am certain that it will be a Tribal thing.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228712408", "uniq_id": "86570fa2-2141-573f-93ea-6368fedc9d0d", "scraped_at": "16/01/2022 16:17:57"}, {"index": "65", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Super Awesome!", "review_title": "Great features!", "review_description": "I love the tv and everything about it. I am a big fan of Vizio TVs, except for the sound, you will need a soundbar.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228632763", "uniq_id": "ee801ec0-c5cf-5655-8498-a9770f1a6921", "scraped_at": "16/01/2022 16:17:57"}, {"index": "68", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Canothegreat", "review_title": "Beautiful oled screen", "review_description": "Beautiful screen! Awesome price but full of bugs. On my set had to constantly unplug my tv from the  power supply to get it to come on. Worked well with my xbox series x just a few glitches here and there. No 4k 120 for the ps5 so I had to use the 4k 60 hdmi slot. I feel this tv is still in beta and needs alot of firmware updates to address system performance issues.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "2", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "228545194", "uniq_id": "bb5c5e36-48cd-533e-8b32-ac1840944224", "scraped_at": "16/01/2022 16:17:57"}, {"index": "73", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Gaming reviews6", "review_title": "Amazing", "review_description": "Works good its perfect for people who game hard-core because it don't ware out as fast and last a long time cheaply priced perfect for your gaming set up!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "6", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191969147", "uniq_id": "aed215bd-32e5-5577-be72-8fe1a4273d12", "scraped_at": "16/01/2022 16:17:58"}, {"index": "81", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "MDB3", "review_title": "Family time", "review_description": "It fun for your family and if you have kids they will enjoy hours of fun", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127333838", "uniq_id": "b6dae06e-562f-5f67-b905-6a267a1b3147", "scraped_at": "16/01/2022 16:17:58"}, {"index": "82", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Bigbadbarry", "review_title": "Yoshi Fun!", "review_description": "I loved the Yoshi yarn game on the 3DS & I love the New Yoshi Yarn game on the switch.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "More color Yoshi\u2019s to choose from and a forward and backwards game in every course. It\u2019s a lovable game to play!\"", "name": "No: I don\u2019t recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "5", "recommended_review": "4.6556", "verifed_purchaser": "2390", "helpful_count": "127332001", "not_helpful_count": "0a5b2e83-abcb-5537-a109-15a4b8c4f86d", "reviewed_at": "16/01/2022 16:17:58", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "85", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Diana finley", "review_title": "Yoshi's crafted world", "review_description": "One of the best games I've played in a while absolutely beautiful \u2764\ufe0f", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127319595", "uniq_id": "3025b560-5f5b-560b-9b15-d3c2ed1468b0", "scraped_at": "16/01/2022 16:17:58"}, {"index": "1. Cast is buggy. I can never get it to run first time. This is where I would focus most of the development time if I were Vizio.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "109", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Anonymous", "review_title": "It's alright", "review_description": "The controller is great but I am experiencing stick drift just two days after receiving it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191439957", "uniq_id": "3c5e7a8f-7138-5143-a3dd-81d9f2bf87e6", "scraped_at": "16/01/2022 16:17:58"}, {"index": "119", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "BoJackson87", "review_title": "Yoshi", "review_description": "I got this game so me and my gf can play together. Its fun and quirky but gets challenging", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127250112", "uniq_id": "41044c39-03df-5ca0-b0da-9219160fa67b", "scraped_at": "16/01/2022 16:17:58"}, {"index": "Make", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "140", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jb2827", "review_title": "Reasonable pricing, great OLED", "review_description": "I\u2019ve been very hesitant to upgrade to an OLED because I couldn\u2019t justify the cost. But when Vizio jumped into the OLED market, I was very excited. Other brands\u2019 \u201cbudget OLEDs\u201d cut corners, whereas Vizio\u2019s track record with reasonably priced premium TVs is outstanding.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "163", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "killer_kenne", "review_title": "Yoshi crushes another one outta the park!!", "review_description": "If you like yoshi, you can\u2019t go wrong here. Game is a masterpiece and provides decent challenges for even the seasoned gamer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127149546", "uniq_id": "eb70dff8-04e8-5a64-a14e-63186d060a0e", "scraped_at": "16/01/2022 16:17:59"}, {"index": "169", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Midwestmikey", "review_title": "Great game for kids and adults", "review_description": "An extremely fun game not only for my little sister but for me too! Easy enough for her to enjoy but it has some challenges that allows me to have fun as well.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "127130838", "uniq_id": "342a7542-8347-5f47-a2a1-3210f50a807f", "scraped_at": "16/01/2022 16:17:59"}, {"index": "180", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Timbo88", "review_title": "Sticky R thumbstick Resistance.", "review_description": "This is my second series 2 elite controller. The first worked perfectly but this one looked so awesome that I had to have it! The only issue is that the R thumbstick is a little sticky when pushing to the L. No other direction, only the left. It is like there is a bit of resistance I have to push through before it releases and goes to the left. My first elite series 2 controller doesnt have this issue. It hampers FPS games a little, but not terribly. Otherwise a great controller and terrific looking product if your a Halo fan. I'm just a little bummed about the aiming thumbstick being slightly off.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "191433462", "uniq_id": "a9ead4c5-5697-5920-8415-47091cdf9b62", "scraped_at": "16/01/2022 16:18:00"}, {"index": "205", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Bumzab", "review_title": "Do not touch this game with a 10-foot pole", "review_description": "\"Make no mistake - this IS Supreme Commander Lite. It almost feels like a very weak demo of SupCom 1, but worse. Even with the new research trees, you'll still end up with no where near the amount of units to choose from that you had with SupCom 1 and its tiers. Yeah, sometimes the tiers were annoying to work through and it took far too long in most instances to get anywhere close to maximizing your faction's potential in a single match in the first one - but this \"\"sequel\"\" has completely gutted it altogether. You'll likely end up mashing your mouse button or hotkey to churn out more of the exact same units.. over... and over... and over again because there's barely anything to choose from for unit diversity. The game requires the Steam client and an internet connection just to play. While it's true that most people these days have an internet connection", "recommended_review": " it's a rather unfortunate decision not only because you're excluding gamers but also because of potential happenstance scenarios. Steam goes down? Sorry", "verifed_purchaser": " you're out of luck. A few years down the road and something else happens(such as one of the companies going out of the business or whatnot) and you can't go back to play it for old times sake? Again", "helpful_count": " out of luck. Move to an area with limited connectivity? Same thing. I wish developers would stop going with this route", "not_helpful_count": " as it's very short-sighted. The graphics are significantly worse than the first one", "reviewed_at": " even on the highest settings. There are ONLY small maps", "rating": " and no larger maps to choose from. In the first version you had a large selection of maps", "average_rating": " in SupCom2 there are around 10-15", "reviews_count": " and all of them are the same size pretty much. I want to be clear one more time about the gameplay here: This is not a merely \"\"different\"\" approach. I'm pretty open-minded and I'll try just about anything. This is a GUTTED approach to the first version's gameplay. It takes many of the great features out", "comment_id": " and doesn't replace them - it does away with them altogether. Fewer units with no tiers or variety. Smaller selection of maps with almost no size difference in any. Worse graphics. Weak experimental units. Gameplay consists primarily of unit churning and zerg tactics. I gave this game the benefit of the doubt because the first one was so great. Please", "uniq_id": " don't make the same mistake I did. Do not buy this game.\"", "scraped_at": "No: I don\u2019t recommend this product"}, {"index": "207", "name": "Supreme Commander 2", "brand": "Square Enix", "sku": "522023", "reviewer_name": "Kerican", "review_title": "SC 2 - mediocre game.", "review_description": "There were so high hopes for this game, as SC 1 and FA had left me hungry for more games like TA, yet unfortunately the wait would lead to disappointment. For those who enjoyed the similarities between TA and SC1 will be the biggest disappointment here. The economy of the previously mention games is utterly gone. No worrying about balancing energy usage and mass income with building and firing weapons, its all been removed. Its now a simple straight up, build up army, build base defenses, go conqueror enemy. Also gone are the tech levels, and weaker starting units, and teching up. Instead its replaced by research points that gradually come in much like all the other resources.  Without that element nothing really stood out in the game. Without the challenging economy, the campaign portion of the game becomes simple, build defenses, build army, repair defenses occasionally, attack enemy. Musically nothing really stood out, there may of been a couple times when I stopped to notice it, but again nothing inspiring. Storyline it also seems kinda lacking, it comes off like a Final Fantasy storyline mashed into brief conversations between 18 missions. There just simply is not enough there to make a great story, which once again left me greatly disappointed. Graphically the game was nice, and the small scale compared to SC1, meant I could actually stay somewhat zoomed in, to actually see the units, and not just commanding by click on the small icons. The movies were decent, just way to few of em to tell a good story. The game controls fairly well, being rather simple game now, its easy to pick up and get right into. Those with SC1 knowledge will have no trouble picking it up, as the mechanics are still basically identical to the first. Those used to Starcraft or C&C type games might take a bit longer but overall its not a hard game to get into or to start playing. The game probably has some strengths in multiplayer, as the unit balance does seem good, but I have not done any of that yet. Overall SC2 is not a bad game, everything seems to work, the game loaded smoothly, the game had no noticle lag, or slowdowns, but there is just nothing in it that simply makes it stand out. The game itself was fun to play through, and I did enjoy the limited story, and I may still by the sequel when it comes out (of course the ending had a cliff hanger for a sequel... what game doesn't do that no a days) yet this probably won't be a game I will touch all to often again now that I have beaten it. My suggestion is wait for the price to drop on this one if you simply want to see the continued storyline from the first, as the game offers very little of anything else to draw players away from other games.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "11 years ago", "rating": "3", "average_rating": "3.4091", "reviews_count": "22", "comment_id": "15250436", "uniq_id": "fe7d8b34-e569-5186-8dce-57c70a13d88c", "scraped_at": "16/01/2022 16:18:00"}, {"index": "211", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Mkaz", "review_title": "Just short of 5", "review_description": "Waiting for the firmware update, then I can update to 5 stars", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227689648", "uniq_id": "ddd95f84-96b2-5c7d-bb7c-53c36e6df414", "scraped_at": "16/01/2022 16:18:00"}, {"index": "218", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Res136", "review_title": "Great picture", "review_description": "I\u2019ve always liked Visio. My first 50\u201d had one backlight diode burn out after 7yrs heavy use. Replaced with 50\u201d nano Visio. I was happy with the upgrade. Figured I could get a 55\u201d within the space constraint I had. Got this one as open box. And WOW! The picture POPS of vibrancy and consistent brightness.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227560725", "uniq_id": "b707b4b5-8acc-5c69-9279-f1029422274c", "scraped_at": "16/01/2022 16:18:00"}, {"index": "227", "name": "Microsoft Xbox Elite Series 2 Wireless Controller for Xbox Series X Halo Infinite", "brand": "Microsoft", "sku": "307392", "reviewer_name": "Jrjbaj", "review_title": "Solid improvement over the Series 1", "review_description": "I had the series one which still works great, but decided to upgrade for the better paddles and internal battery. I am very pleased with this product not only because its Halo but it does feel like a substantial improvement over the previous generation. I'm still trash though...", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.6993", "reviews_count": "306", "comment_id": "190807964", "uniq_id": "df9c8e11-c20e-5a8b-b090-975550d21a38", "scraped_at": "16/01/2022 16:18:00"}, {"index": "255", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Quando", "review_title": "No Slouch", "review_description": "Compared to the LG CX and Sony A8H the picture quality is way better than Sony's OLED.  THOSE Reviews online are biased and not accurate IMO.  Not a fan of smartcast yet over android TV. TV Has some firmware glitches.  Sound from TV speakers is OK not as nice as the Sony's; however this is a one Heck of An OLED with no black Crush....", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227489183", "uniq_id": "c3f3597b-51a8-5aec-a613-90242e40e8d8", "scraped_at": "16/01/2022 16:18:01"}, {"index": "273", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "TheArgyleWizard", "review_title": "Fun, Beautiful, and Appropriately Challenging", "review_description": "Yoshi\u2019s Crafted World is an amazing game! It is beautifully designed and appropriately challenging. The ability to play two players is also great as my wife and I like to game together. I would definitely recommend it to anyone who owns a switch, especially those who want to play some couch co-op.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126552237", "uniq_id": "0370dddc-2aae-508a-b44d-122e6d641c33", "scraped_at": "16/01/2022 16:18:02"}, {"index": "277", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "CWB!", "review_title": "Great features & Amazing color and clarity", "review_description": "Bought the TV right before Christmas - just amazing clarity and color", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227333306", "uniq_id": "049e260f-a2e3-5ee2-8422-c0b928f66317", "scraped_at": "16/01/2022 16:18:02"}, {"index": "Out of the box it had a firmware update. and then a week later another.  the 2nd was a bit rude", "name": " as it occurred in the middle of a show without warning.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "280", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TOGA Sarge", "review_title": "Mr", "review_description": "Very nice picture, nice sound, but, the OLED effect can cause severe headaches in certain people.  There should be some form of medical warning and available solutions.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "2", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227300137", "uniq_id": "deb423a5-9af3-5ba2-b788-afb7f1433960", "scraped_at": "16/01/2022 16:18:02"}, {"index": "297", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Shafi", "review_title": "Lot of issues with new OLED TV", "review_description": "i have been facing multiple issues from the time i got this TV.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3) same issue with chrome cast as well", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "314", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Heather0101", "review_title": "Kids will love it!!", "review_description": "Fun game for kids and adults. More relaxed then Mario and very kid friendly!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126495952", "uniq_id": "89c9e45b-2b49-5be2-9e62-52634bc7fad7", "scraped_at": "16/01/2022 16:18:03"}, {"index": "317", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ybreeze5", "review_title": "Great tv but needs patches as soon as possible", "review_description": "I love the tv but am on the fence on returning it or not. Fix everything people are complaining about. Also 1440p needs to be 120hz. Theres no reason why it shouldn't be. Get it together please", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "227099195", "uniq_id": "f3a80eb1-718b-5c8d-b318-b18bc83fb20e", "scraped_at": "16/01/2022 16:18:03"}, {"index": "320", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jethro2312", "review_title": "EXCELLANT OLED UHD TV", "review_description": "Great picture quality and very easy to set up. Would highly recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226961718", "uniq_id": "93e6fc6f-7bf6-5a2e-b4a0-834fc2475980", "scraped_at": "16/01/2022 16:18:03"}, {"index": "322", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Jojo2414", "review_title": "Awesome", "review_description": "Bought the oled Visio over the Samsung q series. Very happy except sometimes the input switches from one to another happen 2 times", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226923078", "uniq_id": "f864ba04-27e1-5673-875f-6fd69443fb3e", "scraped_at": "16/01/2022 16:18:03"}, {"index": "324", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "McFang", "review_title": "Troublesome TV with amazing potential", "review_description": "I really want to love this TV. The picture quality is amazing. The smart cast interface is solid, and it's all packeged under an beatable price. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "This is still a really good TV. But the growing pains right now would keep me from recommending it to others. (I'm coming from a 2018 Vizio P series)\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "3", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "226910861", "not_helpful_count": "02481162-152d-5b33-ba5a-5136b0686613", "reviewed_at": "16/01/2022 16:18:03", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "343", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "kschneider1231", "review_title": "Yoshi\u2019s Crafted World", "review_description": "If you like the gameplay of Yoshi\u2019s Island, the art style of Yoshi\u2019s Woolly World, then Yoshi\u2019s Crafted World is the gamefor you... and the family!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126315942", "uniq_id": "aac40f5b-5309-54ee-b48f-8cef2b574aa1", "scraped_at": "16/01/2022 16:18:04"}, {"index": "348", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "SDotRinney", "review_title": "Great picture great sound overall a great TV", "review_description": "About my TV last month I love it love everything about it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226863307", "uniq_id": "213d7265-2a67-5a82-8be4-aedcc9d26874", "scraped_at": "16/01/2022 16:18:04"}, {"index": "This has a design that feels good in the hands", "name": " it is not bulky or hard to work.  ", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "363", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "RachelA1020", "review_title": "Very good but not perfect.", "review_description": "[This review was collected as part of a promotion.] The pros: *feels almost identical to the official Nintendo pro controller.  ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "The cons:", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "369", "name": "WRC 8 FIA World Rally Championship - PlayStation 4", "brand": "Maximum Games", "sku": "205005", "reviewer_name": "Sarge97502", "review_title": "Wrc8", "review_description": "Good game, need to spend some more time playing it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.0345", "reviews_count": "29", "comment_id": "136798584", "uniq_id": "0cf0d647-5307-585d-8435-a37e7f419aa3", "scraped_at": "16/01/2022 16:18:04"}, {"index": "385", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Tom42", "review_title": "Great picture", "review_description": "Bought for picture quality and I am not disappointed. It is fabulous. I am actually surprised at how wonderful the display is in my home. Very satisfied and would buy again. If it goes on sale anytime soon I will buy another one for another room in my home.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226732331", "uniq_id": "23656563-b23a-5a13-b5c5-5ab4eaabf6e9", "scraped_at": "16/01/2022 16:18:05"}, {"index": "399", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "M3WILKERSON", "review_title": "So retro!", "review_description": "[This review was collected as part of a promotion.] This works perfectly and has alot of extra controls and features.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.875", "reviews_count": "32", "comment_id": "121884636", "uniq_id": "2d355f38-1266-5775-9058-b21faddb6072", "scraped_at": "16/01/2022 16:18:05"}, {"index": "408", "name": "Yoshi's Crafted World - Nintendo Switch", "brand": "Nintendo", "sku": "191609", "reviewer_name": "Simi90", "review_title": "Great game", "review_description": "Overall great game. Interesting and has different elements than other Yoshi games to date. My son absolutely loves it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6556", "reviews_count": "2390", "comment_id": "126258784", "uniq_id": "e5c8c18d-9848-59fe-9d4a-12c604a675b0", "scraped_at": "16/01/2022 16:18:05"}, {"index": "416", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "adrianiii", "review_title": "Great picture! Great sound!", "review_description": "I've been looking at the new OLED model tvs for a while and I'm so glad I finally purchased my very own OLED 4K tv.  The picture is incredible even if what you're watching isn't in High Def.  High def channels and movies look so good but the 4K programming is insanely sharp. It looks as if you're actually there", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226663884", "uniq_id": "268a103b-4fb8-5479-8872-9cb3d3383705", "scraped_at": "16/01/2022 16:18:05"}, {"index": "Xbox Series x\"", "name": "yes: I recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "3", "recommended_review": "4.2727", "verifed_purchaser": "363", "helpful_count": "226623767", "not_helpful_count": "6e496bf1-e93c-58ac-8889-a3a9b9b69afa", "reviewed_at": "16/01/2022 16:18:05", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "423", "name": "PowerA Enhanced Wireless Controller for Nintendo Switch Link Gold", "brand": "PowerA", "sku": "231963", "reviewer_name": "Pvtcarlswife", "review_title": "Great bonus features and love graphics", "review_description": "[This review was collected as part of a promotion.] I got this for my son and grandson who play the switch together. My son is an old school Nintendo fan so when I saw this with the old graphics I got it immediately. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "He absolutely loves it. It linked up easily and is user friendly. ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "444", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Johnwicked", "review_title": "Almost perfect", "review_description": "I bought this TV about a month ago. The picture is out of this world good. Since about th 2nd firmware update the TV does not always turn on. I had worked for Geek squad in the past so I know how these products work It is not user error. I contacted support through chat and they say it is not a known issue. If you go on about forums you can see it is a widespread problem. I'd this would be corrected I try would be a 5 star review. I am out of my return window so I certainly hope this issue is corrected.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226599103", "uniq_id": "a55472fc-0d7a-5056-b86f-64b5c181a6cb", "scraped_at": "16/01/2022 16:18:06"}, {"index": "446", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "GayleT", "review_title": "Vizio OLED65 Class 4K HDR Smart TV", "review_description": "Got less than a month ago, was simple to set up and the picture/sound are great!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226596552", "uniq_id": "70d90ef2-c011-5264-ba37-3b63dfe85cac", "scraped_at": "16/01/2022 16:18:06"}, {"index": "450", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Especialsov", "review_title": "Vizio Has finally joined the ranks of OLED", "review_description": "Excellent on picture quality. The only issue that kept me from giving it a five star rating was the software and intuitive control. Not too snappy or fast enough but is workable. Doesn\u2019t let other apps to be added like ESPN and so forth. Also there is an issue with hdmi port 4. I tried adding a fire stick to this port and it will not pick up the signal. The stick doesn\u2019t fit on the other three ports in the back. But as far as the picture quality is right up there with the other OLED television from other competitors. For the Black Friday price I paid in comparison to the competition it cannot be beat. No remorse whatsoever on that. Also the picture quality is excellent. Some calibration maybe required for those videophile fans like myself. But is an excellent choice if you can live with the small glitches I mentioned. Oh the remote should have been upgraded. The remote is not great for a television of this caliber. It should had came with a better clicker in my view.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226561343", "uniq_id": "51236317-a0cc-5597-af24-606c661321b0", "scraped_at": "16/01/2022 16:18:06"}, {"index": "464", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "HolgerHelmut", "review_title": "Great value", "review_description": "I got the OLED 55 and I love it but it depends on your needs. The TV itself is gorgeous. It has fantastic picture quality and supports lots of outputs and HD formats as well as smart integration. But it is Web-OS not Android. I don\u2019t care because I use Apple TV but.....if you rely on the build-in smart OS of your TV...Web-OS is ...well it sucks.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226544974", "uniq_id": "9f5825e8-5f5c-5377-b046-9d39eec764a8", "scraped_at": "16/01/2022 16:18:07"}, {"index": "468", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Fabioshy", "review_title": "Perfection in all ways", "review_description": "It is perfect from the start I however am still waiting for the vrr update as I wanna use vrr with 120hz but everything else works like a charm", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226530075", "uniq_id": "24c43f48-c774-5dd0-8461-06df8ce1e414", "scraped_at": "16/01/2022 16:18:07"}, {"index": "472", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "chrissyfire", "review_title": "Great picture", "review_description": "Very pleased with the quality of this Tv, wish there was a app for VRV and Funimation. Fair amount of HDMI for my many gaming consoles and VR/streaming computer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226511467", "uniq_id": "315efed1-14d3-5c84-a384-7787e64c9d65", "scraped_at": "16/01/2022 16:18:07"}, {"index": "475", "name": "Fortnite Solo Mode Core Ex Series 8 Action Figure", "brand": "Jazwares", "sku": "232574", "reviewer_name": "Nikxons Dad", "review_title": "Fort nite figures", "review_description": "The kids love it!!! Don\u2019t really have a review but they definitely have been playing with it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "5", "reviews_count": "4", "comment_id": "190783256", "uniq_id": "e311cd0b-1ae2-58c1-834a-a1c931d51442", "scraped_at": "16/01/2022 16:18:07"}, {"index": "486", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Robert.Rob", "review_title": "Great TV", "review_description": "We\u2019ve had the TV up and running for two days. So far, it\u2019s been an amazing addition to our HomeKit connected home.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226509543", "uniq_id": "cd39e728-95d5-59b9-b12b-7c91ab92de88", "scraped_at": "16/01/2022 16:18:07"}, {"index": "511", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "TexasTV", "review_title": "Beautiful display", "review_description": "We purchased this TV a few weeks ago to replace an older Samsung. We are very happy with the quality of the TV. Vizio is definitely stepping up their game. However, a large issue we had is the power cable is not made correctly for the TV. We kind of have to wiggle it in, but it needs to be L-shaped. We were also extremely worried having to lay it down when installing the base. It is very thin and sleek, but it is deceptively heavy. Two of us were able to set it up and did not have any damage. They have stickers on where to not hold and to hold that do help. A small issue with the TV is that it goes dark after a very short period of time, we figure we can adjust this, however, it is annoying that the Chromecast cannot turn on the TV. The show may start playing, but you have to find the remote to turn the TV on if it was off. Overall, we are happy with our purchase and think the technology in the TV is better than what a lot of the content you watch is recorded in. We expect to have many years out of the TV and think the shows will catch up to its technology.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226475194", "uniq_id": "6bd21118-2e50-5447-940b-895932d21050", "scraped_at": "16/01/2022 16:18:08"}, {"index": "One being the bugs. Like VRR not working when 4K 120 is enabled on Game Consoles. ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "516", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "rerun", "review_title": "Eventually....It's gets AWESOME!", "review_description": "At first when setting up the tv and hooking up my PS5, things were not looking 4k at all. At first, the HDMI slots were giving a grainy picture that did nothing on screen so I had to unplug the TV and start again. Even at times switching between sources would put the TV in a hiccup and would not respond to any commands...unplug and start again.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "520", "name": "License 2 Play Toys Cats vs Pickles Mystery Collectible 3-in Figure", "brand": "License 2 Play", "sku": "321738", "reviewer_name": "Lizziebear500", "review_title": "Only at GameStop", "review_description": "They exclusively sell these at GameStop only, which makes them more valuable.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "17 days ago", "rating": "5", "average_rating": "5", "reviews_count": "5", "comment_id": "194293192", "uniq_id": "4d99cbd6-36a8-5456-8625-30f123cf9ebd", "scraped_at": "16/01/2022 16:18:08"}, {"index": "541", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "WillDaBeastBD", "review_title": "Celebrate 20 years of Xbox with comfort and joy.", "review_description": "Awesome Xbox controller!  Exceeded my expectations.  Love the green grips, and the transparent front shell.  Makes me proud to be an Xbox fan for 20 years now.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "20 hours ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "198679885", "uniq_id": "2330a036-9a1a-5826-a2d4-241950d59eff", "scraped_at": "16/01/2022 16:18:09"}, {"index": "546", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "Yoan", "review_title": "Xbox has the best controller.", "review_description": "I love the textures on the back is so much better than the regular ones. A great addition to my small collection.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "20 days ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "194076890", "uniq_id": "4cf24bf2-8511-5dfb-83b3-352e81e4ce9e", "scraped_at": "16/01/2022 16:18:09"}, {"index": "549", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "HintOfMayhem", "review_title": "Awesome", "review_description": "The new Xbox controllers are refined to near perfection. This translucent design is just what was waiting for", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "25 days ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "193412547", "uniq_id": "d4ce64a4-dc34-5978-a0ef-1b598862be84", "scraped_at": "16/01/2022 16:18:09"}, {"index": "555", "name": "STORY OF SEASONS: Friends of Mineral Town  - PlayStation 4", "brand": "XSEED Games", "sku": "300917", "reviewer_name": "Neon_Tulips", "review_title": "Addicting Little Game But Pretty Bare Bones", "review_description": "Take this with a grain of salt as I've never played the original version. But it's a perfectly serviceable SOS game; pretty fun, addicting even, but doesn't go out of it's way to be anything spectacular. The character portraits are great, but the 3D models are sub par. The gameplay is fun and gives you plenty to do and unlock, but the Fatigue animations have no right being that long and often, and seems it was only put in there to pad out the game and/or annoy you. There are also issues of you getting stuck in your horse after you dismount, and getting blocked by villagers (you have to wiggle to get unstuck) which could've been avoided if they made the hitboxes a little smaller. As much as I criticize; I still get a lot of enjoyment out of it. I love taking care of my animals and wooing the bachelors/bachelorettes (the dialogue is cute and funny too). If you like the SOS or the HM series I believe you will enjoy it; it's just a shame that it's pretty bare bones.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "3", "average_rating": "4.6667", "reviews_count": "6", "comment_id": "190290831", "uniq_id": "7a2312e4-8c78-514e-88af-d88a92183dec", "scraped_at": "16/01/2022 16:18:09"}, {"index": "568", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "subratam99", "review_title": "Excellent picture quality,", "review_description": "It is a good product with excellent picture quality.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "226251069", "uniq_id": "6e77ce93-0237-5ed7-a8d1-af3bb8bb4e79", "scraped_at": "16/01/2022 16:18:09"}, {"index": "So far I only have 2 minor criticisms. ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "584", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "Daniel Saini", "review_title": "Art", "review_description": "Beautiful representation of Japanese folklore through ukiyo-e like cellshading. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "594", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "CyberWRAT", "review_title": "Look out for the blacklight", "review_description": "Big xbox fan, this is one of the coolest controllers o have held. Pretty awesome when you look at the box with a blacklight you see the original DUKE controller shadowed in.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "191759885", "uniq_id": "03d8bc6f-83af-5580-a4a5-db47f606a410", "scraped_at": "16/01/2022 16:18:09"}, {"index": "612", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "TaylersGirlfriend", "review_title": "Okami", "review_description": "I do not really appreciate all the talking because it sounds extremely weird, but besides that everything is good the plot is great and the art is wonderful.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.6512", "reviews_count": "129", "comment_id": "123314516", "uniq_id": "9d90baf1-7ec7-5ed4-97ee-cc7e60fa49f3", "scraped_at": "16/01/2022 16:18:09"}, {"index": "617", "name": "Okami HD - PlayStation 4", "brand": "Capcom", "sku": "158945", "reviewer_name": "FoxfireLockhart", "review_title": "Beautiful Game and Fun to Play", "review_description": "I wanted to play Okami from the time it was released but it wasn't available for Playstation. Now that it is I am playing almost every day and enjoying the heck out of it. The only complaint I have is the camera is a bit tricky to work with, but I'm not an avid game player so maybe for someone who plays more often it's not as big a deal. Still deserves five stars!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6512", "reviews_count": "129", "comment_id": "122696522", "uniq_id": "4338f942-4488-5e00-a710-30f372855afb", "scraped_at": "16/01/2022 16:18:09"}, {"index": "625", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Willie OLED 55", "review_title": "Overall, Amazing Performance", "review_description": "It is a great experience to sit and watch a movie, cable network, sports, etc. with this TV.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "225783666", "uniq_id": "d93711b2-48ca-5c77-a454-8b701c5a15d3", "scraped_at": "16/01/2022 16:18:10"}, {"index": "629", "name": "LucidSound LS35X Black Direct Connect Wireless Gaming Headset for Xbox One", "brand": "LucidSound", "sku": "150229", "reviewer_name": "Jferron", "review_title": "Super Good!!!", "review_description": "My son loves them and says\u2026\u201d works super good\u201d lol, he\u2019s so happy! Great purchase", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "13 days ago", "rating": "5", "average_rating": "4.125", "reviews_count": "56", "comment_id": "194580031", "uniq_id": "d1332f13-b475-5b7f-ac9f-c709f6d37d32", "scraped_at": "16/01/2022 16:18:10"}, {"index": "630", "name": "LucidSound LS35X Black Direct Connect Wireless Gaming Headset for Xbox One", "brand": "LucidSound", "sku": "150229", "reviewer_name": "Tina mateo", "review_title": "Headset", "review_description": "Very comfortable. Love the base and quality sound.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "18 days ago", "rating": "4", "average_rating": "4.125", "reviews_count": "56", "comment_id": "194240466", "uniq_id": "816693f2-6813-595d-b3ab-3835b735cd66", "scraped_at": "16/01/2022 16:18:10"}, {"index": "634", "name": "LucidSound LS35X Black Direct Connect Wireless Gaming Headset for Xbox One", "brand": "LucidSound", "sku": "150229", "reviewer_name": "JdMtheirishking", "review_title": "X one LS35X", "review_description": "Great headset, clear hearding, great for first person shooters.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.125", "reviews_count": "56", "comment_id": "191422699", "uniq_id": "b9bd2768-e641-5e8f-b7f7-e83f257f7ddf", "scraped_at": "16/01/2022 16:18:10"}, {"index": "635", "name": "LucidSound LS35X Black Direct Connect Wireless Gaming Headset for Xbox One", "brand": "LucidSound", "sku": "150229", "reviewer_name": "Anthony Villafan", "review_title": "LS35X Headset", "review_description": "Sound quality is awesome. The mic monitoring doesn\u2019t pick up much background noise unless it\u2019s shouting or something particularly loud outside. The volume dials for the game volume as well as party chat are a plus. I love the mute buttons being built into the dial and the fact that there is one for game volume and one for chat volume.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.125", "reviews_count": "56", "comment_id": "191080623", "uniq_id": "1acae527-b6a8-53fe-8b03-352c500972f8", "scraped_at": "16/01/2022 16:18:10"}, {"index": "663", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Ricardo20", "review_title": "Vizio OLED Review", "review_description": "I bought these tv a month ago, and I so very happy I did, beautiful picture, I can\u2019t wait to buy my Xbox Series X to see how great it plays games.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "225321740", "uniq_id": "8834963e-4106-54f9-a85c-8d49ce4e8615", "scraped_at": "16/01/2022 16:18:10"}, {"index": "Best move ever", "name": " no comparison.\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "5", "verifed_purchaser": "4.2727", "helpful_count": "363", "not_helpful_count": "225307243", "reviewed_at": "d3614834-4db3-58d8-bf84-875024fffa4a", "rating": "16/01/2022 16:18:10", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "681", "name": "LucidSound LS35X Black Direct Connect Wireless Gaming Headset for Xbox One", "brand": "LucidSound", "sku": "150229", "reviewer_name": "Lord Drol", "review_title": "Comfortable headphones", "review_description": "The headphones are a comfortable fit. Sound quality is very adequate. There does seem to be a small connection issue from time to time. Overall a purchase worth making", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "4", "average_rating": "4.125", "reviews_count": "56", "comment_id": "172529273", "uniq_id": "2fa66c4f-117a-5039-9740-8dc16043f8d4", "scraped_at": "16/01/2022 16:18:11"}, {"index": "685", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "TheDudeofLife", "review_title": "Party like its 2001!", "review_description": "Looks really cool, a nice item to have to celebrate 20 years of Xbox!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "191031988", "uniq_id": "18f4352f-3e46-5f3f-8f3c-2199f34e358b", "scraped_at": "16/01/2022 16:18:11"}, {"index": "687", "name": "Microsoft Wireless Controller for Xbox Series X 20th Anniversary Special Edition", "brand": "Microsoft", "sku": "307382", "reviewer_name": "Teron B", "review_title": "Fantastic controller!", "review_description": "Great product to celebrate the 20th anniversary. Try using a blue light on the box;)", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.7707", "reviews_count": "157", "comment_id": "190969614", "uniq_id": "3d4bfba6-14f9-5eac-b246-075de8463963", "scraped_at": "16/01/2022 16:18:11"}, {"index": "690", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "JimFH", "review_title": "OLED for an affordable price", "review_description": "This VISIO compares very well with LG but also includes SmartCast. Easy and Lots of tweaking settings. I don't use the speakers, so I can't say how well they are. The TV is so new that they don't have a manual for it yet.  But the settings have pretty clear hints when you are ready to try them.  It has a beautiful picture with a wide field of view. There are 4 HDMI inputs with 3 on the back and one on the side. I'm very pleased with my purchase.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "224806727", "uniq_id": "0e9cd441-2342-52b5-815c-dc4ab5a54001", "scraped_at": "16/01/2022 16:18:11"}, {"index": "691", "name": "VIZIO 55-in Class OLED 4K HDR Smart TV OLED55-H1", "brand": "VIZIO", "sku": "328244", "reviewer_name": "Tomwbigredone", "review_title": "Great picture", "review_description": "Best vizio ever and I have 4 vizio TVs picture is great gaming experience is great", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2727", "reviews_count": "363", "comment_id": "224795548", "uniq_id": "82be4a24-8e01-5fd7-a965-276bea8b3c8a", "scraped_at": "16/01/2022 16:18:11"}, {"index": "700", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Anonymously anonymous mus", "review_title": "Facts over opinion", "review_description": "Bought this for a buddy since he was twitch streaming w just a mic, he loves it as do I bc I get to see his pretty lil face now. Ohhh an btw this literally shipped in a day. He was goin in vaca for the weekend and it showed up a half hour before he left. Seriously excellent timing GameStop!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.969", "reviews_count": "129", "comment_id": "190894313", "uniq_id": "89b2f7d5-2766-5a33-a39f-c597c0f1591e", "scraped_at": "16/01/2022 16:18:13"}, {"index": "719", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Derek NN", "review_title": "Good service and product", "review_description": "The shipping and delivery was perfect, arrived earlier than expected and works well. Has helped make my stream feel more personal and professional. Wish that it was able to zoom more, but that is a minor gripe and not the fault of GameStop.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "4 months ago", "rating": "4", "average_rating": "3.969", "reviews_count": "129", "comment_id": "187203531", "uniq_id": "efbb9c17-bd31-544c-af4a-c69ea42fe59e", "scraped_at": "16/01/2022 16:18:14"}, {"index": "722", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Anonymous", "review_title": "Ps5 camera", "review_description": "Very good", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "4 months ago", "rating": "5", "average_rating": "3.969", "reviews_count": "129", "comment_id": "185928036", "uniq_id": "7d1f442f-7ec6-527b-ae93-45da43e1810e", "scraped_at": "16/01/2022 16:18:14"}, {"index": "724", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Connie 234", "review_title": "It doesn't work", "review_description": "It doesn't work trying too get invoice too take it back", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "5 months ago", "rating": "1", "average_rating": "3.969", "reviews_count": "129", "comment_id": "184487727", "uniq_id": "f29c5885-2e2b-54fc-9e15-f01f746ca57e", "scraped_at": "16/01/2022 16:18:14"}, {"index": "735", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Satisfied Customer AF", "review_title": "Happy Review", "review_description": "Delivered timely, like brand new, great 1 year warranty. Very satisfied!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "171167134", "uniq_id": "2ee4f7ec-4b3f-58fd-9231-6297a710af1c", "scraped_at": "16/01/2022 16:18:14"}, {"index": "738", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Anonymous", "review_title": "An ok camera", "review_description": "The mechanism that holds the camera up can be adjusted easily as a stand. Picture quality is just \u201cok\u201d but it gets the job done. Make sure you have enough lighting ro give the image quality the best chance.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "9 months ago", "rating": "4", "average_rating": "3.969", "reviews_count": "129", "comment_id": "175997956", "uniq_id": "1dbc48cb-7f7b-51c8-b01a-b4013ee612f4", "scraped_at": "16/01/2022 16:18:14"}, {"index": "740", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "Jay 0mega", "review_title": "Beautiful Camera.", "review_description": "The camera is cool and looks great. Although it shows a slight difference from the PS3 & PS4 cameras. But it goes well looks wise with the PS5.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "10 months ago", "rating": "4", "average_rating": "3.969", "reviews_count": "129", "comment_id": "175259393", "uniq_id": "d17d9a75-7e24-5307-bc4f-1209233be70d", "scraped_at": "16/01/2022 16:18:14"}, {"index": "744", "name": "Sony PlayStation 5 HD Camera", "brand": "Sony", "sku": "222328", "reviewer_name": "ReikimasterColin", "review_title": "Hd camera is excellent", "review_description": "Easy to use. Hook was super easy. Couldnt be happier with my HD camera", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "3.969", "reviews_count": "129", "comment_id": "172608606", "uniq_id": "80431fd0-c0eb-5f1f-925b-7421bf7208f6", "scraped_at": "16/01/2022 16:18:14"}, {"index": "769", "name": "Luigi's Mansion 3 Plus Multiplayer Pack Bundle", "brand": "Nintendo", "sku": "211090", "reviewer_name": "slwortham", "review_title": "Love it!", "review_description": "I absolutely love the Luigi's Mansion games, and the 3rd edition is no exception!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "5", "reviews_count": "5", "comment_id": "152896998", "uniq_id": "4e29ab55-ed73-59b4-b95d-a12c3ac6a260", "scraped_at": "16/01/2022 16:18:16"}, {"index": "793", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Switchdad80", "review_title": "Quality", "review_description": "Does not last long. This is my third joycom in a year.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "144525538", "uniq_id": "cda20b93-ff08-547f-80c7-5f9aedea99f5", "scraped_at": "16/01/2022 16:18:16"}, {"index": "795", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Foxstrunk", "review_title": "No drift, but has been opened", "review_description": "It works perfectly with no drift, but the controller has been opened by either the previous owner or gamestop and i can see the corner of the ribbon cable sticking out. Its not pinched in a way that effects functionality, but it has been opened and therefore the warenty with Nintendo is voided.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "143240141", "uniq_id": "3f86a25f-e32d-519b-b0cc-9558c9496143", "scraped_at": "16/01/2022 16:18:16"}, {"index": "803", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "flash123", "review_title": "Challenging but fun.", "review_description": "\"When I first got this game I thought it was going to be easy, I was wrong. This game really makes you think. The graphics are awesome the game itself is very fun as you progress through challenging levels. The sound is great but I cant stand the sound of garret when you attack, but you have the option to turn off garrets voice, \"\"I wonder why\"\". Its a very fun game but you need to get good at it. So overall its a great game and I recommend it to most gamers.\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "6 years ago", "rating": "4", "average_rating": "3.52", "reviews_count": "125", "comment_id": "45861596", "uniq_id": "f84d7a8c-ebc5-5f42-b1dc-9520d1615dd2", "scraped_at": "16/01/2022 16:18:16"}, {"index": "810", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "MILLERTIME8008", "review_title": "Gets old after the first 15 minutes.", "review_description": "I thought it would be a lot better but its not that fun. You cant roam around a city, you have limits. All you can do is play missions and steal stuff. its the same stuff over and over.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "2", "average_rating": "3.52", "reviews_count": "125", "comment_id": "37674401", "uniq_id": "4323e021-8355-5344-8c2e-1b4e53d7640e", "scraped_at": "16/01/2022 16:18:16"}, {"index": "812", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "Blast3400", "review_title": "Thief done poorly.", "review_description": "\"Thief... I was hyped but not the... CRAZY hyped. but my expectations were flawed. The combat is dreadful, I mean, you only get like a black jack right? The bow is fun use, the city is absolutely Trash! I could never evolve with it! The side missions are outstandingly poor. I mean maybe a few caught my eye for a few moments. Other wise, the story is a little bland, after you caught the eye of jewelry, The graphics are what got to me, I actuall could sit and look, and thievery was another fun participation in the game, otherwise.. I don't have much good to say about this game, I liked certain moments, and IF YOU\"\"RE a die core thief fan get this.\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "2", "average_rating": "3.52", "reviews_count": "125", "comment_id": "37632353", "uniq_id": "3768db6b-01b4-5e50-8869-c2138f5861fb", "scraped_at": "16/01/2022 16:18:17"}, {"index": "820", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "GoBeYoungKenobi", "review_title": "Wait 'til the price drops !!", "review_description": "This game is ok, I play it when I'm bored of other games, it is not that great, it should be $30 Max brand new. If you like stealth and searching for the same things over again you'll love it !! I'm gonna finish it as fast as I can so I can sell it on Ebay !! Dishonored Makes this game look and feel silly !!!!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "4", "average_rating": "3.52", "reviews_count": "125", "comment_id": "35368910", "uniq_id": "53ed09e4-eaaa-599d-bcef-866923705a60", "scraped_at": "16/01/2022 16:18:17"}, {"index": "STAY AWAY!!!!\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "7 years ago", "review_description": "1", "recommended_review": "3.52", "verifed_purchaser": "125", "helpful_count": "34757952", "not_helpful_count": "bb7847c4-0329-5fb4-9d52-e27025464285", "reviewed_at": "16/01/2022 16:18:18", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "867", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "Mckintay81", "review_title": "Not as good as I had hoped.", "review_description": "I was really excited for this game before it came out. But quickly realized it wasn't what I expected and I got bored fast. All the game is about is being sneaky and trying to avoid combat. Let me tell you this gets old quick. I'm on chapter 5 and I can't sit down and play this game for hours on in because it's the same thing almost always. Sneak and steal sneak and knock a guy out rinse and repeat. The dialogue isn't that great either. One good thing I can say about this game is the environment looks pretty cool and some of the music during some scenarios are fitting. The game isn't terrible but it's far from great. It's good for 1 play through but nothing more. I give it a 7/10.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "4", "average_rating": "3.52", "reviews_count": "125", "comment_id": "34724680", "uniq_id": "0435c50c-600b-5125-837b-6e87de0865f5", "scraped_at": "16/01/2022 16:18:18"}, {"index": "888", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "OldGasbag1965", "review_title": "Great headset", "review_description": "The sound is amazing I connected with optic very clear", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "174247519", "uniq_id": "2907c197-ed3c-5acc-a40d-b1660aca6630", "scraped_at": "16/01/2022 16:18:19"}, {"index": "896", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "koldkrowe", "review_title": "U Serious>?", "review_description": "Okay! I had to write a review. I do not do this often. From the first time I had watched the preview for this game I was enthralled. I just had to have it. I went out and reserved it. I thought about Garrett constantly. Ryse and Tomb Raider kept me satisfied. Thief was gonna be better Right>? I mean it was gonna be Epic>...........Wrong.....Controlling Garrett is like controlling a dog on a leash who doesn't want to go in the same direction. The combat is awkward. Garrett is very limited in space. There is a white flash that crosses your vision repeatedly (I do not know why). I was bored within the first mission. The controls are sloppy and NOT user friendly. This game has been the biggest epic fail in my gaming career. I am 34 years old and have been playing for a long time. I now have a game and guide that are useless. I could go on and on in a more inappropiate manner but, I will not. Also you continue to steal the same items over and over, Candle holders, Knifes, rings, mask, gears, magnifying glass.......There is no free roaming. I felt like I was in a box. Everything is tight and cramped. I just had to write a review,,,,,,My first review ever.....I am still so depressed.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "26", "not_helpful_count": "25", "reviewed_at": "7 years ago", "rating": "2", "average_rating": "3.52", "reviews_count": "125", "comment_id": "34677083", "uniq_id": "d9a59ad9-50a0-5a85-99cd-7bddab33eaa1", "scraped_at": "16/01/2022 16:18:19"}, {"index": "898", "name": "Thief - Xbox One", "brand": "Square Enix", "sku": "129273", "reviewer_name": "jhartman12345", "review_title": "HORRIBLE GAME! DON'T WASTE YOUR MONEY!", "review_description": "Very below average graphics for the xbox one, controls are terrible, characters have awful voice overs, this is one of the worst games I have played in a long time, Im so dissapointed, i feel like this game stole $30 from me just because gamestop gave me $29 for trade in.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "6", "not_helpful_count": "19", "reviewed_at": "7 years ago", "rating": "1", "average_rating": "3.52", "reviews_count": "125", "comment_id": "34659874", "uniq_id": "dc05a3f8-6e2d-5eb1-95a6-15bec178b101", "scraped_at": "16/01/2022 16:18:19"}, {"index": "907", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Dunk91882", "review_title": "Great game", "review_description": "Awsome game wish all the talking was in english tho", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "141043249", "uniq_id": "f83e57bf-e0dc-58fe-9319-ff18e816dff9", "scraped_at": "16/01/2022 16:18:19"}, {"index": "912", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Djjuliamarie", "review_title": "Joycon", "review_description": "Needed replacement, they had a preowned for a tiny bit less than new.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "131846676", "uniq_id": "9e3afce0-b305-5f5f-91d9-28bcdd216a0b", "scraped_at": "16/01/2022 16:18:19"}, {"index": "913", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Thiscantbe", "review_title": "Joy-cons are pathetic", "review_description": "I hate Joy-Cons! This is one half of the fifth set I have purchased. I'm over 1000 hours on the switch, that's about 200 hours per joy-con, yet my Xbox controller is over 1000 hours on its own.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "131744614", "uniq_id": "37826427-d8e7-534f-bcfb-b6cb58aa6647", "scraped_at": "16/01/2022 16:18:19"}, {"index": "Customizable partner is amazing.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "924", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "sweetie", "review_title": "Overkill tutorials", "review_description": "Spent almost 2 hours of tutorials and cut scenes just to find out i basically one shot everything.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "130415884", "uniq_id": "b55b68e4-d33b-58e6-bb8d-d4fda491c199", "scraped_at": "16/01/2022 16:18:20"}, {"index": "928", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Alex the gamerman", "review_title": "SAO goodness", "review_description": "So far its a RPG style game so expect a lot of grinding but in general is a fun game to play despite the heavy criticism the game is a fun spin of the actual anime series whit a new in deepth story and lovable characters all in all.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "127941238", "uniq_id": "807b8bd5-563d-5337-a3b4-a7229b21ccc4", "scraped_at": "16/01/2022 16:18:20"}, {"index": "938", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Emilylvawter", "review_title": "Joycon review", "review_description": "It doesn\u2019t stay locked in place properly. Other than that it\u2019s fine", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "129967752", "uniq_id": "4bd1df31-02a5-5dca-aafe-f77662735471", "scraped_at": "16/01/2022 16:18:20"}, {"index": "953", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Vril", "review_title": "Sao fb flop", "review_description": "Due to it being in Japanese I can't fully enjoy full game", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "11", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "125381480", "uniq_id": "ba18f67b-7560-5847-8acf-2abc0ee27b69", "scraped_at": "16/01/2022 16:18:20"}, {"index": "959", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Sunset Shimmer", "review_title": "A great game, but tougher then previous games.", "review_description": "Sword Art Online:Fatal Bullet is a great game from the SAO game series. But it differs from previous games as in this one it focuses on guns and not swords as such it can be a real challenge to new players to the SAO series (and also contains minor to major spoilers to previous games)", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "123630989", "uniq_id": "6f0dd5ef-55d4-5b76-a9b9-8f9a343ca74c", "scraped_at": "16/01/2022 16:18:20"}, {"index": "961", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "TaylorS", "review_title": "Broken", "review_description": "It was broken - no matter what I did, the stick veered upward", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "129240509", "uniq_id": "0bdb503f-829c-545a-8a06-cc3adf3a9382", "scraped_at": "16/01/2022 16:18:21"}, {"index": "968", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "mattrock3415", "review_title": "Worn But Still Works", "review_description": "Bought is used and the joystick had quite a few wear marks. Kinda disappointed but oh well. Ya it works well but I mean it\u2019s not like a game review so it\u2019s not up for debate. It just works and that\u2019s it. I do however appreciate that they were able to send me a single joy con because I lost my other left which was sad. Ok that\u2019s all. Thanks for reading. Bye.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "127521525", "uniq_id": "5486955e-94b0-52fd-aefe-3b4dcaec39c7", "scraped_at": "16/01/2022 16:18:21"}, {"index": "977", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Alex Velez", "review_title": "Just being Real", "review_description": "i have medium to long hair so it tends to slide out of place a bit with the extra strap it has for comfort. great for long gaming sessions. great sound quality but not the best sound for helping me pinpoint an enemy location in a live action FPS like my most played game Apex Legends. Comfort make up for that tho. i tend to play for hours with these on they what there supposed to do. they haven't shocked me yet. and unlike my previous head set there enough comfort in these headphone that they don't cause any discomfort. i think there good. These headphone are definitely better than Turtle Beaches", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "141896944", "uniq_id": "868e7df4-14bf-5225-ad4b-b2a55af8f1ef", "scraped_at": "16/01/2022 16:18:21"}, {"index": "999", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Kothanare", "review_title": "Joy-Con left dosnt work vary good", "review_description": "Every left joy-con i buy pulls to the left after about a week i think Nintendo needs to fix the problem.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "3", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "125539310", "uniq_id": "4069aeba-91b5-55c9-9f58-c56f7e38abf1", "scraped_at": "16/01/2022 16:18:21"}, {"index": "1000", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "jl117", "review_title": "Single Joycon", "review_description": "It work for awhile then would randomly unsync during gameplay. Rage inducing.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "125505103", "uniq_id": "43d9b7cc-f2fa-56e0-a0ec-48ff07a55171", "scraped_at": "16/01/2022 16:18:21"}, {"index": "1013", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Cameron T", "review_title": "Rig 800hs", "review_description": "Great headset for everyday use. Extremely comfortable with great sound quality! Deep rich bass and great conventional use!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "138164631", "uniq_id": "2bda802e-9550-5c3e-b0c6-01f9a125eee3", "scraped_at": "16/01/2022 16:18:21"}, {"index": "1020", "name": "Star Wars Episode IX: The Rise of Skywalker Supreme Leader Kylo Ren Force FX Elite Lightsaber", "brand": "Hasbro", "sku": "195533", "reviewer_name": "Luistics", "review_title": "Kylo Ren Lightsaber", "review_description": "great product!  Best Kylo Ren lightsaber available!   shipping packaging isnt very good though.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "4", "average_rating": "4.5952", "reviews_count": "42", "comment_id": "189960851", "uniq_id": "984adf81-38b6-5e3c-a44f-9bdce1cec31a", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1024", "name": "Star Wars Episode IX: The Rise of Skywalker Supreme Leader Kylo Ren Force FX Elite Lightsaber", "brand": "Hasbro", "sku": "195533", "reviewer_name": "Mallai", "review_title": "Very realistic sound and light effects . Awesome", "review_description": "[This review was collected as part of a promotion.] This Star Wars The Black Series Supreme Leader Kylo Ren Force FX Elite Lightsaber is very realistic . It is not any normal light saber . It is a great collectible for a crazy star wars fan like me. It has lot of premium features like original light saber from the movie. The heavy metal hilt with lot of detail on it. It comes with a stand and collector coin. It took some time for me to figure out , how to put it together first but then i looked upon the instructions and did exactly as it said. I displayed it in stand along with my other star wars collections. This is a really awesome, the sound effects are very realistic like from the movie, press and slide the button on the hilt to activate progressive ignition , molten glow effect and battle clash effect. Each one of the sound effect is really awesome. Well build , good quality . Advanced led technology is used and it has good sound quality too.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.5952", "reviews_count": "42", "comment_id": "138548695", "uniq_id": "e47ee262-c370-549a-a16e-62e59cbd3423", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1030", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Nick767", "review_title": "Fun game", "review_description": "Its a fun little erd peeson fps. The lvling aspect can be a little grind heavy, but the core gameplay helps offset that.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "117238724", "uniq_id": "9a816531-46ee-5b4d-bb7f-7406697c5c08", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1055", "name": "Funko POP! Games: Pokemon Pikachu (Sitting) 3.75-in Vinyl Figure", "brand": "Funko", "sku": "238622", "reviewer_name": "jesspal", "review_title": "Pikachu Funko pop", "review_description": "My son loves this pop, it brings him tremendous joy", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5882", "reviews_count": "51", "comment_id": "191421691", "uniq_id": "c4804f5f-dea7-5254-a727-fe7d5fb22a86", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1079", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Roxasstorm", "review_title": null, "review_description": "It\u2019s a fun  rpg with guns but it\u2019s a bit repetitive", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "116481559", "uniq_id": "a61ceffc-ae0d-5c02-b504-0ab4bd0e65e1", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1082", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Frank Nez", "review_title": "Don\u2019t buy pre-owned.", "review_description": "Pre-owned price was cheaper but not worth the gamble. Purchased to use on a trip only to find out the product was defective. Very dissatisfied.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "119306733", "uniq_id": "4049c309-0bb1-5905-8502-9a53736cf524", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1096", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Tangymonkey", "review_title": "50/50", "review_description": "Not 100% most comfortable over the head but ear muffs are comfy", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "131786285", "uniq_id": "3ffb4352-0859-55ee-93c6-16d8dfeeb781", "scraped_at": "16/01/2022 16:18:22"}, {"index": "1107", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "edsonexpert101", "review_title": "Good but Broken", "review_description": "I bought this last week and when I came home I realized that the L button didn\u2019t work. I was really disappointed because the GameStop employees never warned me about the L button being broken. Big bummer", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "115613421", "uniq_id": "4d8c2163-0337-5387-9cd1-4a72cab841bd", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1113", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Sunflower8888", "review_title": "Still not working", "review_description": "Having the same problem with this blue joy con", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Thank you Game Stop!", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1126", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Leo08", "review_title": "Won\u2019t work as listed", "review_description": "I thought that you would be able to seperate how loud voice chat is compared to the game volume. So far the in game voice completely muted game volume which is annoying.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "130701182", "uniq_id": "f6af55a2-9c41-54f5-908f-86bca8c4da15", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1129", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Matt hett", "review_title": "Rig 800hs", "review_description": "Sounds good just wish they would get a little bit louder", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "130470527", "uniq_id": "d34145cf-5804-5518-b74c-13b55873b1f3", "scraped_at": "16/01/2022 16:18:23"}, {"index": "1136", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Darknite900000", "review_title": "The game is amazing the   Game. Sound track perfec", "review_description": "The game difficulty in mission. With  krito and his friends", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "114164968", "uniq_id": "7efb733e-3f43-58ca-a376-699852d92032", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1147", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "nine10", "review_title": "Excellent, Beautiful, Wonderful!!!", "review_description": "Everything works fine on this.  We needed a replacement of the old controller that I busted.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "111741028", "uniq_id": "becc6b7f-f5e5-59ff-a6e3-d7f6727ad921", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1151", "name": "Nintendo Switch Joy-Con (L) Wireless Controller Neon Blue", "brand": "Nintendo", "sku": "227057", "reviewer_name": "Usmc87", "review_title": "No wrist strap", "review_description": "It's insane to sell these at the same price as new and not include wrist straps! Straps are 7 dollars apiece. I just got pre owned blue left and right and neither had a strap.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "37", "not_helpful_count": "27", "reviewed_at": "4 years ago", "rating": "3", "average_rating": "3.9133", "reviews_count": "738", "comment_id": "95352445", "uniq_id": "45388ff8-bdd7-5098-b26d-a25e5866c2f2", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1157", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Bronzestar", "review_title": "They are awesome", "review_description": "I like that they self adjust to your head and it doesn\u2019t pull your hair or anything.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "129426856", "uniq_id": "0052ea7a-f100-5f69-80d7-665d19fbb312", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1161", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Reaper5224", "review_title": "Good sound not so good in general", "review_description": "Took me.a while to figure out how to make rhe connection work, also they make my ears hurt because the actual ear phones part is pretty small", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "128648140", "uniq_id": "846446d1-89e8-5110-a56f-6787c5879787", "scraped_at": "16/01/2022 16:18:24"}, {"index": "1162", "name": "Sword Art Online: Fatal Bullet - PlayStation 4", "brand": "Bandai", "sku": "161781", "reviewer_name": "Kayla150", "review_title": "A MUST-HAVE", "review_description": "I've envested 75 hours into this game and have loved every second of it. I love everything sword art online. To the novels, anime, and the games! Like it's past games, fatal bullet is amusingly well done. This game is a must play! Has a great story!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "25", "not_helpful_count": "3", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4221", "reviews_count": "244", "comment_id": "111137419", "uniq_id": "5676380d-8a2d-5bf2-acf3-ddf0387dc53f", "scraped_at": "16/01/2022 16:18:24"}, {"index": "Initially", "name": " I felt they may be too quiet", "brand": " but after a few minutes of gameplay", "sku": " I was reaching for the volume to turn it down.", "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1174", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Nathan bickett", "review_title": "Not that great of a headset", "review_description": "Horrible audio issues and not very good quality mic", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "126596103", "uniq_id": "d23f6bb7-2a60-55eb-81b6-669ed57a7d33", "scraped_at": "16/01/2022 16:18:25"}, {"index": "1177", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Hub23", "review_title": "RIG 800HS", "review_description": "There excellent and  Block surrounding noise with a comfortable adjustable fit.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "126311801", "uniq_id": "0ca40b95-b1f5-5c1c-b307-a0da1a966e74", "scraped_at": "16/01/2022 16:18:25"}, {"index": "1180", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Gathman", "review_title": "YOU ARE NOT PREPARED!", "review_description": "Holy cow amazing! Secong only to Astro A50 in terms of sound! Honestly astounding battery life! And very durable with breathable ear padding! Best headset for its price point!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "125923879", "uniq_id": "ab294a9d-4ec4-52ba-94f1-c3342449c45f", "scraped_at": "16/01/2022 16:18:25"}, {"index": "1181", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Eddie504", "review_title": "No good", "review_description": "They suck had em not even a month and the mic went out", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "125859821", "uniq_id": "b01ebfcd-acd3-5bfb-ae03-d51536408ab4", "scraped_at": "16/01/2022 16:18:25"}, {"index": "1216", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Alexelway", "review_title": "They are great but", "review_description": "I bought these a few months ago but now keep saying connected / not connected and others in the party can hear it. I've been told every now again they are making a loud noise I can't hear as well in parties.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1227", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Kevbro22", "review_title": "Amazing Game!", "review_description": "Amazing game that really brungs back memories of the SNES days", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "135928691", "uniq_id": "5bd04e5e-b396-5c85-9d48-b7850f750736", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1240", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "alleybeating", "review_title": "Great headset", "review_description": "had these for about 4 months, no problems battery life is stellar.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "124488302", "uniq_id": "3c1e6d81-656e-5540-ab42-3ef306c12e12", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1241", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "ChubbyBatman69", "review_title": "Amazing headset", "review_description": "Great quality headset with unbeatable comfort and sound quality. This headset will last you for years to come. Ive been through astros, turtle beaches and razer headsets and this one in my opionion beats the competition. Very easy to set up the headset also has amazing range so you can go almost anywhere in your house and not lose signal. Battery last 24 hours and thats not an exaggeration. The headset also has multiple sound options and has a little voice reminder when the battery gets low you can not go wrong with headset even for the price you will not be dissatisfied.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "124487241", "uniq_id": "ab60abda-1dfa-58d4-8cdf-45e21b743f51", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1246", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Lorelei", "review_title": "Okay game", "review_description": "I had yet to play this, I loved A Link to the Past as a kid and with this being a spiritual successor to LTTP, so when I got the opportunity, I bought it right away. Its fun, but not exactly the best Zelda game ever.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "130580816", "uniq_id": "c708cd5e-0f85-5177-a4ca-eacd174efdf4", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1248", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "D Rott", "review_title": "Zelda: Link Between Worlds", "review_description": "Best Zelda game ever. Top down style is awesome. Simple to learn yet still awesome!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "130409358", "uniq_id": "ea45da69-27b8-57c6-ab19-504186ef7c85", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1254", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "RayG0118", "review_title": "Great game", "review_description": "Great game, takes place in same world as oink to the past", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "129273240", "uniq_id": "f89906e5-4794-5ffd-b32a-b75ef7370e3d", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1256", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "JCC74", "review_title": "Great sound and comfortable", "review_description": "Incredibly comfortable.  Good if you have a large head. Sound is amazing however dialing in your party can be difficult during gameplay.  I can turn the dial all the way to chat and game sound still overcomes the chat communication at times.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "124195854", "uniq_id": "322dcdae-d390-56e9-b0a9-08a026351c3d", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1266", "name": "Honey-Can-Do Floating Wall Shelf", "brand": "Honey-Can-Do", "sku": "323846", "reviewer_name": "Andie", "review_title": "Easy to assemble and hang", "review_description": "[This review was collected as part of a promotion.] The Honey-Can-Do horizontal floating wall shelf is a I-Can-Do. It is so easy to assemble and install that I didn\u2019t need help from anyone. The ledge is a decent depth and the shelf hangs securely in the wall. I would recommend this shelf for anyone who wants a little decorative shelf but is not the necessarily a DIYer.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.5385", "reviews_count": "13", "comment_id": "223347512", "uniq_id": "b98db7f0-968d-5a7d-ad4f-cda9000a6da2", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1269", "name": "Honey-Can-Do Floating Wall Shelf", "brand": "Honey-Can-Do", "sku": "323846", "reviewer_name": "Purpie", "review_title": "Pretty but not very useful", "review_description": "[This review was collected as part of a promotion.] The shelf is well-made and attractive. I personally would prefer the wood shelf to be a little bit darker.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "As far as functionality", "name": " it doesn\u2019t have much. The frame is just there to add visual appeal", "brand": " but you really can only use it for the shelf space", "sku": " which is small. It\u2019s almost like it\u2019s more of a decorative element to have the frame around it and that requires a lot of hardware in the wall to keep it secure.", "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1271", "name": "Honey-Can-Do Floating Wall Shelf", "brand": "Honey-Can-Do", "sku": "323846", "reviewer_name": "Karlene", "review_title": "Looks really nice", "review_description": "[This review was collected as part of a promotion.] I received the Honey -can-do Horizontal Floating Shelf.   It was so easy to assemble, and it came with all the needed tools and screws to assemble and hang.  I love the color and the way it looks mounted on the wall.  I would definitely recommend this product.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.5385", "reviews_count": "13", "comment_id": "222602912", "uniq_id": "cfd5ce63-515a-535e-95c9-cb4a81bc8288", "scraped_at": "16/01/2022 16:18:27"}, {"index": "Easy to follow assembly instructions", "name": " come with all tools to complete", "brand": " except wall mounting.\"", "sku": "yes: I recommend this product", "reviewer_name": null, "review_title": "0", "review_description": "0", "recommended_review": "1 year ago", "verifed_purchaser": "4", "helpful_count": "4.5385", "not_helpful_count": "13", "reviewed_at": "222456723", "rating": "38620b74-1b7d-5ec3-b6b9-48ad85b756c8", "average_rating": "16/01/2022 16:18:27", "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1274", "name": "Honey-Can-Do Floating Wall Shelf", "brand": "Honey-Can-Do", "sku": "323846", "reviewer_name": "Deandra", "review_title": "Great Decor!", "review_description": "[This review was collected as part of a promotion.] I absolutely love my Floating Wall Shelf. It was extremely easy to assemble and hang on my wall. It adds a pop in my decor and great just to have a shelf to decorate. I love the sophisticated look and how it adds an extra bit of style to my wall. It is extremely durable and very sturdy. I never thought of using something like this to decorate my walls, but creates a nice simple but sophisticated look to my room.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.5385", "reviews_count": "13", "comment_id": "222336423", "uniq_id": "ef18adad-3b53-5924-83e8-557a846555d6", "scraped_at": "16/01/2022 16:18:27"}, {"index": "1277", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Mandlmille", "review_title": "Great game for any time", "review_description": "One of my favorite Zelda games.  A pure joy to play", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "128653252", "uniq_id": "74c4f46a-54f7-52ae-9112-c31b17e17e45", "scraped_at": "16/01/2022 16:18:28"}, {"index": "1290", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "JokersEvilWay", "review_title": "Great product. With two minor issues.", "review_description": "So I bought the Rig 800 HS headset a couple months ago. They\u2019ve been really awesome no major complaints at all, they fit great comfortable to wear for extended hours of gaming on my PS4 (PUBG). The sounds are great and let you know where the enemy is firing from. The two super small issues I have with this headset, compared to my Rig 800 LX for my Xbox One S. The two minor issues is the the max volume on my 800 HS doesn\u2019t feel as loud as my 800 LX. Along with that after really playing for a couple of hours some sounded really different. So I put the product boxes next to each other. And the Rig 800 HS so not have 3D surround sound. And that was a minor issue, but having months playing the 800 HS it is an issue but not a big or huge issue. But I am thoroughly pleased. Would definitely recommend this product 100%.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "123355346", "uniq_id": "e4e297db-c590-5d60-a1f6-3139e3f6493c", "scraped_at": "16/01/2022 16:18:28"}, {"index": "Bottle of water.\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 months ago", "review_description": "5", "recommended_review": "4.3", "verifed_purchaser": "10", "helpful_count": "190372748", "not_helpful_count": "80250e30-0779-5bc0-899e-0baafe368aae", "reviewed_at": "16/01/2022 16:18:29", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1322", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "HonsOffMyWooki", "review_title": "RIG 800HS", "review_description": "Super comfortable and the sound is amazeballs. By far the best headset I\u2019ve ever had.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "122667134", "uniq_id": "e7deddf5-d752-5536-a332-bad314e72984", "scraped_at": "16/01/2022 16:18:29"}, {"index": "1333", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "BobbyJr68", "review_title": "Old School Throwback", "review_description": "This particular Zelda game recalls the original Legend of Zelda in both style and gameplay. This, in my opinion, makes it no less enjoyable for all ages.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "122884228", "uniq_id": "f063eef8-3dc2-5b73-90e4-df2fb201d24e", "scraped_at": "16/01/2022 16:18:29"}, {"index": "1345", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "SuperSaukee32", "review_title": "Perfect Competitive headset", "review_description": "Has everything you could need out of a headset. From great sound to comfort ability.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "121183080", "uniq_id": "47c05fc5-2d54-512a-a5d8-e401a9053c1b", "scraped_at": "16/01/2022 16:18:30"}, {"index": "1367", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Hcbomb22", "review_title": "Great headset", "review_description": "I bought this headset after my old one that was a different brand stopped working it is a really great headset. Excellent sound quality and amazing battery life well worth the money for sure", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "120079550", "uniq_id": "0e0ff8a7-cdf5-5127-acb5-8b99fe8e2be6", "scraped_at": "16/01/2022 16:18:30"}, {"index": "1390", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "Hap007", "review_title": "Wireless + Dolby Atmos", "review_description": "The sound on these headsets is so Awesome on the XBOX with Dolby Atmos you can hear a pin drop. Also,with getting $40.00 dollars off these headsets it was a Great buy at just $99.00 dollars and they were easy to set up", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "119234200", "uniq_id": "7ee075d3-1c8c-5681-b209-6825468bb522", "scraped_at": "16/01/2022 16:18:31"}, {"index": "1406", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "DirtyFrosting", "review_title": "Awesome Headset!", "review_description": "I\u2019m very impressed with this headset. I paid a lot but it\u2019s worth the money. I couldn\u2019t be more happier. Thanks for GameStop I\u2019m Durant Oklahoma for pointing them out to me.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "118595163", "uniq_id": "93e6de5e-aae4-5fcd-9775-4ad622367d74", "scraped_at": "16/01/2022 16:18:31"}, {"index": "1424", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Skyril", "review_title": "Disappointingly Easy", "review_description": "What can I say? It isn't what I was expecting. I'm an extreme Legend of Zelda fan, and I'm used to them having puzzles and challenges. I'm used to spending ages in a dungeon, trying to figure it out. I'm used to fighting tricky bosses. So far, this game has none of that. The dungeons are frustratingly easy; I finish them in half an hour. I haven't gotten stumped once, and the bosses have no chance against me. Fairy? Why would I need a fairy? I can kill a boss and barely be damaged. Actually, I beat a boss yesterday WITHOUT losing hearts. I like the new power this game brings, and I like the music, but that's about all I can say about it... I don't like the idea of renting items either because then what satisfaction do you have in solving a dungeon? I'm used to beating a dungeon, and then being excited because now I can go do some side mission with my new item! Not anymore. One more thing, what's this about having unlimited arrows and bombs? All I have a hope of getting from any chest or person is gold or a heart piece. I miss finally beating that mini-game and getting a bigger quiver! How fun it was. ~sighs~ I feel as if this game is geared towards children, and I'm, like I said, disappointed. Please give me a Legend of Zelda game like Twilight Princess, Skyward Sword, Spirit Tracks, Ocarina of Time, etc. Don't make the games easier, I beg of you.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "15", "not_helpful_count": "15", "reviewed_at": "7 years ago", "rating": "2", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "41711603", "uniq_id": "50a415aa-7953-57bb-a177-931b2163e8cf", "scraped_at": "16/01/2022 16:18:32"}, {"index": "1433", "name": "RIG 800HS Wireless Gaming Headset for PlayStation 4", "brand": "RIG", "sku": "162745", "reviewer_name": "HefTanner81", "review_title": "Great features the Mic! It's retractable", "review_description": "Holy buckets Batman! I love that I've upgraded. It looks cool it's sturdy and put together with precision.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4111", "reviews_count": "596", "comment_id": "114929225", "uniq_id": "2d869f8a-533b-5230-ae7e-8cb3e90f761f", "scraped_at": "16/01/2022 16:18:32"}, {"index": "The only real place wherein A Link Between Worlds falters is in lasting appeal. Though the aforementioned item collection is fun", "name": " the game could have used a better post-story. And by better post-story", "brand": " I mean *a* post story. There is none. After beating the final boss", "sku": " you\u2019re reset to right before the showdown. This is very annoying to me", "reviewer_name": " generating a perpetual feeling of incompleteness", "review_title": " even after the player has collected every last item. I understand that the way in which the story ends somewhat prevents a playable post-story", "review_description": " but I\u2019m still disappointed. And though the StreetPass functionality is fun", "recommended_review": " and the challenge of scoring best times at the Treacherous Tower is an option", "verifed_purchaser": " it\u2019s hard to dedicate much time to perfecting myself in those mini-games. This is because", "helpful_count": " at its core", "not_helpful_count": " Zelda isn\u2019t really a game that\u2019s meant to be a competitive", "reviewed_at": " \u201cshare-with-your-friends\u201d-type experience. And the Second Quest isn\u2019t very enticing either", "rating": " with too little changed aspects to make it worth it. Still", "average_rating": " A Link Between Worlds is an awesome game", "reviews_count": " and I would definitely recommend it if you\u2019re a fan of the adventure genre.\"", "comment_id": "yes: I recommend this product", "uniq_id": null, "scraped_at": "1"}, {"index": "1470", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "iLoveNintendoFlo", "review_title": "Best handheld game I ever played!!!!!!!!!!!!!!!!!!", "review_description": "The Legend of Zelda A Link Between Worlds is one of my fav games ever made! The graphics are very good with rich lighting and beatiful colors. In the first few seconds of gameplay you will see a bird flying over the large game world form right outside your house in the game. The game might have a top down view but it is still looks great with live time lighting and amazing things to see. Very smooth animation with great uses of motion blur to make it feel so real. The 3D adds a amazing pop between layers and turning in to a painting lts u see the simamatic view of the charecter models in 3D moving about as well as all the other objects around u from a different angle. Zelda is also a beautiful lady in this game.... I wish she was real.... Such a nice lady to.... Any way.... The sound effects are also great u can hear the birds, you can hear your sword cutting throw the air. And you can hear your own foot steps perficly in line as you walk or run throw the game world. The game takes a different apporch no longer are all the key idea's found in the games brilantly designed dungons but they u can now buy them from a friendly if not greedy merchant or rent them. How ever if u rent them and die he will take them back so this adds a punishment for death and makes u more teance. The combat is smooth and almost all your idea's have effect in it. The smooth animation and clashing of meadal sound effects. As well as some well designed bosses and a adivtive streetpass shadow Link duals make the combat surpisily enjoyible if not a bit sempictic and repetive compared to passed resent Zelda games. Each chearacter in the game has a great personilty as a part of the story and the story is full of lour and gives amazing context for futher Zelda games in the timeline like OOT and Major'as Mask. The story is meaningful and emotional at times it is inspirerd by some real world history and thouse who dig hard enogh will fine a amazing meaing in the games design both story and gameplay really make you feel like your own a adventure. How ever the open world is great and broght to life in a all new way its the same basic lay out as A Link to The Pass. This may bring back great memorys of one of 16 bit games finest express and it hold up today very well. But the lake of changes to the hub world did seem a little strange as many of the parts of history they draw from comes from differet arrows of roamen history ect. Yet the over world is not roamen or really changed to fix the story. It does not feel overly nastogic but its open world design is some what limmed my its roots. That said the story blow my mind as did the amazing puzzles in the all new doungons. Some puzzles have different ways to sove them and are all amazingly design to give u the amazing feeling of soving a great Zelda dougon. And if u get stuck you can go see the fortion teller or buy hints with play coins for a ghosts. The story and level design were so emotionaly powerful for me this game gets my full recomenation and 2013 game of the year! Buy it now! And follow me on Miiverse my Nintendo Net Work Id is 3DSFlo. Also this game has Chickens so that's awesome!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "34376253", "uniq_id": "6577f0c7-4123-52b7-aed7-27bf23d87bae", "scraped_at": "16/01/2022 16:18:33"}, {"index": "1486", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Nadia Harry", "review_title": "If you've got time, it's worth the buy.", "review_description": "This game bundle was the reason I bought a ps4. The Quantic Dream Collection is worth the buy, but it will require hours of work and a lot of patience. The only game I did not thoroughly enjoy was Heavy Rain. The mechanics were odd and it was harder to play. Otherwise I would recommend it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "128011652", "uniq_id": "ae2f18a4-1859-58a6-a53d-2d7e980961b3", "scraped_at": "16/01/2022 16:18:33"}, {"index": "1488", "name": "McFarlane Toys Batman Beyond Shriek Unmasked DC Multiverse 7-in Action Figure", "brand": "McFarlane Toys", "sku": "249599", "reviewer_name": "Thundercat00", "review_title": "These figures are awesome.", "review_description": "I love Batman Beyond. This figure is well made and looks amazing besides Batman. My Gamestop has great people and a great selection.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "4.25", "reviews_count": "4", "comment_id": "190125904", "uniq_id": "876a6a15-c868-585d-8075-ca4adbb82a0f", "scraped_at": "16/01/2022 16:18:34"}, {"index": "1492", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Deathrade96", "review_title": "Awesome Game Get it", "review_description": "This is an awesome game I love how the music fits and very enjoyable this is one of the best Zelda games ever created the morphing into the stone and being apart it it just adds another affect witch makes it more challenging the bosses very created bosses but also can be hard to fight the story is great it flows pretty good and a surprising ending that made me go shock the game makes it more freely play then a straight path like in every zelda game they choose where you go but in this game you can go to any dungeon all you have to do is go buy items from the guy who is renting your house in the beginning anyway if your still asking yourself should i bye this game? i would say YES!!! this is one of the best zelda games ever!!!!!!!!!!!!!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "33602280", "uniq_id": "6495cefb-d4c8-514f-80f1-073be650e642", "scraped_at": "16/01/2022 16:18:34"}, {"index": "1504", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Countrys widie", "review_title": "Must Play Games", "review_description": "Action packed game. Hours of fun. Action around every corner", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "127673874", "uniq_id": "6701ea6e-6f9b-5075-a790-bc73497671bc", "scraped_at": "16/01/2022 16:18:34"}, {"index": "1532", "name": "Remnant: From the Ashes - PlayStation 4", "brand": "THQ Nordic", "sku": "213157", "reviewer_name": "Hugemradam", "review_title": "Tough but very fun.", "review_description": "Very tough boss fights but gets better as you upgrade your weapons. A lot of great creatures and amazing landscapes. Very fun to play with a lot of cool items and weapons.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.8", "reviews_count": "35", "comment_id": "163665515", "uniq_id": "2e06f9ce-68d6-55d6-9101-9bdc290e04f1", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1543", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "GamerMan1", "review_title": "For Kids", "review_description": "As a Zelda fan, I've been very excited for this to come out for about a year when Nintendo was making a big deal over it. When the day finally came, I traded two games towards this. I played it, and I was having a good time. Five days after release, I finished it. I couldn't believe how easy it was. For crying out loud Nintendo, first Luigi's Mansion: Dark Moon was too easy and short, and now a ZELDA title?! Where are the development masters from 1998? I honestly don't see why a bunch of people are rating it 10 out of 10. Oh, and did I mention that I beat it in less than 17 HOURS. AND I didn't use a strategy guide or ANY guide. The only reason I haven't gotten rid of it yet is because I want to try to finish the Hero Mode. It's very rage-activating, but that's Hero Mode. I think there's too many giveaways in the dungeons. I'd say this is for kids 8-12 years old or so.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "17", "not_helpful_count": "31", "reviewed_at": "8 years ago", "rating": "3", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "33105112", "uniq_id": "a480abcb-ea94-522c-8f09-bd0fafbc8e11", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1545", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "Kr4zYk4nUk", "review_title": "A blast from the past with lots of goodies", "review_description": "I played legend of zelda a link to the past when it came out for super nintendo and beat it at least 3 times and have very fond memories. If your story is similar or if you're a fan of the zelda series, GET THIS GAME! I have to say having played a link to the past has been making this game a lot of fun being very familiar and different at the same time if that makes any sense. My only gripe is the renting system with items, but I'm only about 8 hours into the game so maybe that changes later.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "33072992", "uniq_id": "a7b42631-946c-5b94-8194-71a1aa5c4a13", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1550", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "plaguebruises", "review_title": "Gimme Them QTEs", "review_description": "I absolutely LOVED Detroit, which is why I bought the other two, and they turned out to both be good as well. Not as good as Detroit, but still worth the buy.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "125788093", "uniq_id": "5a27967e-41f5-5ce7-a291-7b6b1296a637", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1551", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Thals", "review_title": "Awesome", "review_description": "I love it. I like the fact that I can get one really well known game and two semi known games for a little bit cheaper than a normal AAA title. They are really great games and I think it\u2019s worth buying and playing", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "125788001", "uniq_id": "ca78f413-8ded-5dd4-b8c1-f5facf4985f6", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1552", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Amuscato", "review_title": "Best simulation game of the year!", "review_description": "Beautiful gameplay with 2 excellent additions. I enjoyed playing Detroit. The game started off slow but quickly picked up the pace. I played on the casual level so that I could enjoy the storyline without a challenge.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "125757610", "uniq_id": "e73f82fc-507d-54a9-894b-572618cc3690", "scraped_at": "16/01/2022 16:18:35"}, {"index": "1554", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "lilchris9", "review_title": "Interactive movies, not quite games.", "review_description": "These games are focused on story over gameplay. If you're looking to have fun, none of these 3 will satisfy that itch.  ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1568", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "ForTruth", "review_title": "Nostalgic Tribute to the Best in the Franchise.", "review_description": "This game pays homage to A Link to the Past in many ways, almost like a direct sequel. It's new, it's sharp, and enjoyable. I was worried at first about the 2D/3D system, but it's masterfully implemented, and causes veteran fans of A Link to the Past to think in new ways. Sometimes it can be a bit easy, but later in the game, it becomes very challenging. More than the challenge, it's unbelievably fun. I consider ALttP to the best LoZ game out there, and this one doesn't disappoint.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "33048167", "uniq_id": "36af4f74-7e4f-535d-ac05-fafc8962f7b7", "scraped_at": "16/01/2022 16:18:36"}, {"index": "1575", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Ayana Brown", "review_title": "Quantic Dream Collection", "review_description": "I tried all 3 games. My favorite is become human, of course! With second game being beyond two souls and then heavy rain!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "125067463", "uniq_id": "212a9459-9654-58cd-942f-64b796b37f6d", "scraped_at": "16/01/2022 16:18:36"}, {"index": "1582", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Lilann", "review_title": "Fantastic game", "review_description": "Beyond two souls is the best game I\u2019ve ever played. I love it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "124302640", "uniq_id": "0c17f0bb-8f7f-505a-aca3-a75826f1ddd4", "scraped_at": "16/01/2022 16:18:36"}, {"index": "1586", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "GheeButters", "review_title": "Amazing addition to the franchise", "review_description": "This is an amazing game. As someone who's favorite Zelda game of all time has always been A Link to the Past, I think this serves as true successor. The graphics are great. Everything moves fluidly. The dungeons are very creative. The items and the map are awesome. Also, all the chibi-like characters are super cute. This is a must have game for Zelda fans and a great game to start being one.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "32985407", "uniq_id": "b1885873-f89e-56b7-8f5a-677914eca076", "scraped_at": "16/01/2022 16:18:37"}, {"index": "1590", "name": "The Legend of Zelda: A Link Between Worlds - Nintendo 3DS", "brand": "Nintendo", "sku": "605048", "reviewer_name": "SummerSoles", "review_title": "A real disappointment to a LoZ longtime player", "review_description": "This game has been effectively dumbed down. The dungeons are cake, the monsters are cake, the puzzles are cake. It's as if the game developers gave up on the long time tradition of making a long lasting challenging and replayable game. For a game of 40 dollars I feel as if the cost of each entertainment hour is not matched. The rental of the equipment is a good idea, especially since if you're 10+ you probably won't die. Yet that's something that seems awry in the gameplay. Maybe I was expecting another great LoZ game like Twilight Princess, even Skyward Sword was awesome. The remake of OoT was challenging and exciting, with great graphics and gameplay style. This is such a disappointment, after waiting half a year I'd say this was not worth it for anyone beyond the skillset of a child.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "11", "reviewed_at": "8 years ago", "rating": "3", "average_rating": "4.6818", "reviews_count": "396", "comment_id": "32956602", "uniq_id": "8ac7fd02-51e7-596b-9198-0980bdc27000", "scraped_at": "16/01/2022 16:18:37"}, {"index": "1605", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "Ronjon400", "review_title": "Wonderful games", "review_description": "These games are experiences not just games I think. To put it in perspective they aren\u2019t your call of duty or boring first Person shooter games they have meaning to them like your experiencing another life to me it\u2019s beautiful", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "123502422", "uniq_id": "4c8ee6e2-1c02-5728-b6f3-302e440afa73", "scraped_at": "16/01/2022 16:18:38"}, {"index": "1609", "name": "Quantic Dream Collection - PlayStation 4", "brand": "Sony", "sku": "187666", "reviewer_name": "MrAwesome1983", "review_title": "Good story on 2 of the games.", "review_description": "Not really a big fan of two souls but the other two have a good story. Controls could use an upgrade tho", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6156", "reviews_count": "359", "comment_id": "123224671", "uniq_id": "f28a4bca-4650-5894-94f5-6e6ae0521fd8", "scraped_at": "16/01/2022 16:18:38"}, {"index": "1634", "name": "Funko Pop! TV: The Simpsons Belly Dance Homer 2021 FunKon Exclusive 4.75-in Vinyl Figure", "brand": "Funko", "sku": "234661", "reviewer_name": "Taco breathe", "review_title": "Princess Kashmir Homer", "review_description": "It's Homer dressed as Princess Kashmir which never happened in the show. Funko has jumped the shark with the Simpsons line.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "4 months ago", "rating": "4", "average_rating": "4.3165", "reviews_count": "79", "comment_id": "186194447", "uniq_id": "af3de8e2-e9ff-5444-a53c-a067155fb9cc", "scraped_at": "16/01/2022 16:18:39"}, {"index": "1641", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Nickel", "review_title": "Great features and easy to operate", "review_description": "I got this watch as a gift about 3 weeks ago. I love how it tracks not only steps, but body battery, heart rate, stress level, etc. The emergency contact feature is very cool to keep people safe. It hooks up to headphones easily and makes your music to easy to get to. My only real complaint is the battery life. It oy last 3 to 4 days before I have to charge it again with little use, where as my Fitbit would last 7 to 9 days. All around it is a great watch and I have it personalized completely to my liking.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 days ago", "rating": "4", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236756360", "uniq_id": "ded3ba81-85fa-5df3-a099-8b647ddddf2f", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1642", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Joe1960", "review_title": "Easy  to use", "review_description": "This product was purchased as a gift for my son. He decided he wanted to go a different route. Best gift I ever got. The features of this watch are easy to use. I love being notified of text and email messages and the music download feature is convenient when at work. Having had competitors product, this has exceeded my expectations.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 days ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236752201", "uniq_id": "795eaf7b-0220-514a-b2f4-82fb1f561833", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1650", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Venu Girl", "review_title": "How Did I Live Without You?", "review_description": "Love my Venu! Great features, looks sleek and super motivating.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "17 days ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236481969", "uniq_id": "cef50606-578b-5828-bb2b-761bb4527619", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1653", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "PaPaw", "review_title": "Venu Square Music", "review_description": "This is my first Garmin, so the learning curve was steeper for me. Beautiful display, fun watch faces to play with, tracks loads of activities. Waterproof in the pool. I'm having to charge it nightly, but I have been playing with it a lot. I haven't yet used the gps function. I do know the swipe across to change screens isn't working as well for me as the dial would. Next one for me will have a dial to change screens and will be solar powered.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "29 days ago", "rating": "4", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "236205476", "uniq_id": "3f1ca60a-a9ed-5380-b75d-b3a08d0a0a6f", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1658", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "JLV313", "review_title": "Almost perfect!", "review_description": "I bought this to record high intensity workouts for the health program through work. The battery life is good and it's comfortable. The strength app isn't super easy or intuitive to use but I like that I can edit workouts later. The one major feature missing for me is a medicine tracker (did I take it today, not a reminder). I have to record 1 second of martial arts every morning to remember if I took my pill. Even if I could add a custom type of workout that would satisfy it. I also wish it could dynamically set an alarm based on where you are at in your sleep cycle around the time of your normal wake-up time.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 months ago", "rating": "4", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "234566248", "uniq_id": "af2942a1-9d61-54f2-97de-471b81d86ca8", "scraped_at": "16/01/2022 16:18:40"}, {"index": "1660", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Buzz", "review_title": "Broke on first run", "review_description": "Not sure how but top R corner chipped and cracked screen after 1 run. Yikes!!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 months ago", "rating": "1", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "234432739", "uniq_id": "5c52820e-4c53-59bf-83c7-c332e9522685", "scraped_at": "16/01/2022 16:18:42"}, {"index": "Overall", "name": " if you want to begin your fitness journey with a good smartwatch", "brand": " this is the option for you.\"", "sku": "No: I don\u2019t recommend this product", "reviewer_name": null, "review_title": "0", "review_description": "0", "recommended_review": "5 months ago", "verifed_purchaser": "4", "helpful_count": "3.7303", "not_helpful_count": "89", "reviewed_at": "233428341", "rating": "2dd86887-3e7f-5ae5-8c57-237a291289f4", "average_rating": "16/01/2022 16:18:42", "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1670", "name": "Truck Racing Championship - PlayStation 4", "brand": "Big Ben", "sku": "204724", "reviewer_name": "Anonymous", "review_title": "gg", "review_description": "my friend had a bit of a problem with getting his license.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "3.7917", "reviews_count": "24", "comment_id": "152158083", "uniq_id": "61171ae0-771a-5285-995e-7dddd1c950fe", "scraped_at": "16/01/2022 16:18:42"}, {"index": "1671", "name": "Truck Racing Championship - PlayStation 4", "brand": "Big Ben", "sku": "204724", "reviewer_name": "Jasleia W", "review_title": "Full Throttle Fun!", "review_description": "Fun game! Starting in noob mode starts out fun, working your way up! It just kicks butt!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.7917", "reviews_count": "24", "comment_id": "145255021", "uniq_id": "bd51b40b-c4e4-5c9d-b062-633903d91167", "scraped_at": "16/01/2022 16:18:42"}, {"index": "1677", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Tricia S", "review_title": "Great information source", "review_description": "I recently bought the Garmin Venu Sq - Music Edition. Had I really paid attention, I probably would not have ordered this particular watch. I\u2019m afraid the music features are lost on me as I\u2019m not really into listening to music this way. Overall, despite this feature I do like the info I get from this watch.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "232019771", "uniq_id": "4be5e923-651d-5ac9-8721-7e93c7455652", "scraped_at": "16/01/2022 16:18:42"}, {"index": "1685", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Tmichelle", "review_title": "Love the features. Easy to use.", "review_description": "I bought this a couple weeks ago and it's great. Love being able to track my workouts and foods. The only thing I wish I could do is connect to pandora.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "231362178", "uniq_id": "31090aea-7f31-5bd4-be90-6312e5b3ffbf", "scraped_at": "16/01/2022 16:18:42"}, {"index": "1701", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "JTs Mama", "review_title": "Great for getting your groove on!", "review_description": "My son and neighbors absolutely love dancing along to this game. There are a bunch of songs and dancing levels from which to choose.  Ordering it through gamestop was easy, and the product is in great condition.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "11 months ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "173340489", "uniq_id": "8e634320-ed49-5af1-a915-5aa3f8611fe6", "scraped_at": "16/01/2022 16:18:43"}, {"index": "1709", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Muffin", "review_title": "Great watch!", "review_description": "I have heart issues and my doctor said stress is likely a factor. This watch is great because it lets me know when my body is registering stress, which is something I\u2019d never noticed before. It also tracks my sleep and my movements/walking.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 months ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "230449790", "uniq_id": "c53436c7-9e87-5383-a6dd-a6bc00f5e943", "scraped_at": "16/01/2022 16:18:43"}, {"index": "1723", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "#1Golden", "review_title": "Love the colors and quality!", "review_description": "I got this as a Christmas gift and I love it. It was a great suprise", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "227295662", "uniq_id": "9c6b7b6f-ac14-5710-85dd-9357bbff45a0", "scraped_at": "16/01/2022 16:18:44"}, {"index": "1739", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Anonymous", "review_title": "It's just ok", "review_description": "It's decent but really more than what I need. Most if the activities I don't even do and it's not easy going from 1 screen to the next. I'm considering sending it back maybe for something less expensive and less complicated", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "3", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "225552047", "uniq_id": "582f91ee-725c-520a-94cd-d10c6c00b510", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1756", "name": "Garmin Venu Sq Music Smartwatch", "brand": "Garmin", "sku": "316366", "reviewer_name": "Nonickname", "review_title": "Great features", "review_description": "Integration with my 520 plus is good, but instructions could be more precise.  Video instruction for each section would be helpful (ie golf, bike, walk, run etc).pairing Videos would also help. I realise that some are available, but a more logical progression / order would be beneficial .", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "3.7303", "reviews_count": "89", "comment_id": "224941773", "uniq_id": "0d289e97-5e81-5ba1-9b9a-440bcbe1af82", "scraped_at": "16/01/2022 16:18:45"}, {"index": "Easy music set up and headphone pairing", "name": " took no time at all to get my Spotify playlist on the watch and headphones connected.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Text size.  Can you please make this adjustable", "name": " my eyesight isn't getting better with age..\"", "brand": "No: I don\u2019t recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "4", "verifed_purchaser": "3.7303", "helpful_count": "89", "not_helpful_count": "224933023", "reviewed_at": "98a302a7-4b68-5170-a5ae-f38bd8ae6ba0", "rating": "16/01/2022 16:18:45", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1761", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "Tygerss", "review_title": "My MJ Experience.", "review_description": "I really enjoyed this game. It helps me keep moving.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "124298427", "uniq_id": "3e7043d0-fec7-55c9-b8f3-f081f43915ec", "scraped_at": "16/01/2022 16:18:45"}, {"index": "1787", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Wally88", "review_title": "Solid game", "review_description": "Solid game and story line. I hadn\u2019t played a Pok\u00e9mon game since 2006 (diamond was my last game), so just wanted to get back to playing. Black was a good refresher.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "6 months ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "183265767", "uniq_id": "40bad41e-133e-5836-bb3e-74c880c44954", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1794", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "VMCFW", "review_title": "A Thriller of a Game", "review_description": "\"This is the best dancing game ever. Due to the fact that it is based on Michael Jackson, the artist with the highest selling album in the world \"\"Thriller\"\" (1982). It has all of Jackson's greatest hits with his iconic dance moves. I would recommend this to all Michael Jackson fans and dancing game fans.\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "34", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "4", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "69421652", "uniq_id": "834e02fc-6ba2-5870-93a8-03e1fbb77fc2", "scraped_at": "16/01/2022 16:18:46"}, {"index": "1797", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "iicutiecakeziii", "review_title": "michael jackson experience rocks", "review_description": "i love this game it is actually like a good work out you just don't know you're doing it lmao but i think this game rocks on", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "29094818", "uniq_id": "06afcbf6-b5db-58ec-bbba-d08205269695", "scraped_at": "16/01/2022 16:18:46"}, {"index": "I HIGHLY recommend this to anybody who loves Pok\u00e9mon", "name": " these nostalgia googles", "brand": " cloudy they may be", "sku": " will never be taken off since they were given to me by a dear friend", "reviewer_name": "  who's name was Oshawott", "review_title": " even though I lost my copy one day I'll see my little friend again", "review_description": " someday", "recommended_review": " somewhere\"", "verifed_purchaser": "yes: I recommend this product", "helpful_count": null, "not_helpful_count": "5", "reviewed_at": "1", "rating": "1 year ago", "average_rating": "5", "reviews_count": "4.4195", "comment_id": "553", "uniq_id": "163432379", "scraped_at": "74d7ea87-711f-5965-b7e4-9cff97370762"}, {"index": "1811", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Rants", "review_title": "Hopefully it arrives in good condition", "review_description": "My copy hasn\u2019t arrived yet but this is my favorite game of all time so I know its gonna be good team plasma and the story there is so good the music so rememberable everything about this game I adore im excited to make my 100th tepig save and catch haxourous <- sorry if I spelt wrong and excadrill <- that too if I could give it 10 stars I would", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "148395911", "uniq_id": "9a1e192c-d71b-5b53-8922-e7e4d3bbd449", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1827", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "ttime10", "review_title": "love pokemon", "review_description": "I collect all of the pokemon games and love everyone of them", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "136184017", "uniq_id": "b87617df-ee77-5b1d-b5e3-afa90299c21e", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1829", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Grey80918", "review_title": "Pok\u00e9mon black", "review_description": "This game is amazing. Even if it doesn\u2019t have much to it, trading is always Available.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "131280572", "uniq_id": "bfae64ad-0d51-5fb6-9134-7d879904cfdd", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1830", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "PANDAWAN83", "review_title": "Awesome!!", "review_description": "Great game that stays true to Pok\u00e9mon while providing alternate accustomed storyline and characters.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "129942445", "uniq_id": "07aebd6f-ecd9-5e0e-882e-0606e9b1b9e0", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1839", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "MsBabybanks", "review_title": "By far one of the best all age game for the Wii", "review_description": "I played it at a friends house for the first time about a month ago. I havent been able to get it off my mind since. I received it as a birthday gift and now im use it more than expected. Its a great game when entertaining a small group of guest or even by yourself. I hope they consider a part II with more songs. For the most part I highly recommend this game. Enjoy!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "12", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "17032357", "uniq_id": "3bc1460a-05a7-5437-b4d1-5874a888e327", "scraped_at": "16/01/2022 16:18:47"}, {"index": "1846", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Aston", "review_title": "If you want a good ds pokemon game this is it frfr", "review_description": "A good game. Works just as it is stated to. Love it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "127859115", "uniq_id": "8fa1e0cc-dd3f-5542-878e-23af9373a804", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1853", "name": "Battlefield 1", "brand": "Electronic Arts", "sku": "125976", "reviewer_name": "NCHammer2", "review_title": "Bad Game", "review_description": "It is not a good game..................................................................", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "15", "reviewed_at": "4 years ago", "rating": "1", "average_rating": "3.5556", "reviews_count": "9", "comment_id": "107368872", "uniq_id": "e16badf6-4f39-53ef-8e60-36d03fdd84be", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1867", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "JUSKEEZ", "review_title": "We love this game best family game ever", "review_description": "I grew up a Micheal Jackson fan and so are my children. We all love playing this game together. Actually we spent New Year's Eve Playing all night I / We love this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "16655182", "uniq_id": "8b86b2e8-e16d-5024-8006-2171e25ca5d9", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1871", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Bonney", "review_title": "Very happy", "review_description": "Played game before and loved it then now i got it for my daughter", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "125066320", "uniq_id": "d6c64cea-77cb-5bfa-9e23-ecbdddebd065", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1872", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Shadowpbg", "review_title": "Pokemon black", "review_description": "I like the game a lot. It is a great game. I might come back for some more games", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "124903886", "uniq_id": "28104e09-1aa8-509b-9eb5-a809db3318d3", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1877", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Pokeethan", "review_title": "Great game", "review_description": "I didn't like the game when I bought it when It was released. But when I played through it again, I loved it like any other pokemon game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "123291932", "uniq_id": "6eaf540d-5bf5-5a82-978e-45fffc35912f", "scraped_at": "16/01/2022 16:18:48"}, {"index": "1881", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "jonatan", "review_title": "cool", "review_description": "you neded this game shop now this game this game is asome", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "16627533", "uniq_id": "9c6b376b-1c99-5771-85aa-5fef8e1b652f", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1886", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "RoRich1", "review_title": "One of the best games ever", "review_description": "Hours of family fun. It will keep a party going on for hours. Definitely worth the price.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "16536353", "uniq_id": "72163b80-1141-5d95-b1e9-82192f50b4ea", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1887", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "socali24", "review_title": "Great For Everyone", "review_description": "This is a fun and great game to play with everyone. For Parties, Get Togethers and play only. It is a work out but a great game. The best game for 2010. Hope they make another one.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "16536190", "uniq_id": "e660efd5-c2ca-564e-b3be-2b9e6cb52da7", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1895", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Krysteena", "review_title": "Lost it, bought it again", "review_description": "Yep its a replay. I wanted to play it again because I didn't remember the story. I'm glad I did, I am finding it way more interesting than I did the first time I played it through.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "122282484", "uniq_id": "828e0dd0-4d16-5460-9187-df67e2fe02c3", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1903", "name": "Michael Jackson The Experience - Nintendo Wii", "brand": "Ubisoft", "sku": "918038", "reviewer_name": "Gemini", "review_title": "I can't believe how good it is!!!!", "review_description": "It is easy to play and a good workout! The song selection is great. There is music for every MJ fan.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.3975", "reviews_count": "239", "comment_id": "16400077", "uniq_id": "e6cea752-b653-5bfb-8e89-0c261c02a288", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1911", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "butterflyheart426", "review_title": null, "review_description": "The brand is the number one in my eyes and so many others.  It is not expensive and are used in many items and they last a long time.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 months ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "231067298", "uniq_id": "e9ad26dc-e566-501c-9d9e-3bd71c4c5008", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1918", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "akn1029", "review_title": "Great batteries", "review_description": "[This review was collected as part of a promotion.] These  D 4-Pack HIGH ENERGY\u2122 Alkaline Batteries are great to have around for baby gear such as a swing or bouncer and certain other kids toys. The battery life is good ans I would recommend them to family and friends.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "203998125", "uniq_id": "bfef706c-fd2b-55f6-9ce3-8fd30d71947d", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1919", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Esabella", "review_title": "Great battery", "review_description": "[This review was collected as part of a promotion.] I have been using this battery over two weeks regularly and it is working very well in the flashlight. So far I am happy with the battery.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "203980867", "uniq_id": "c52a9186-f929-5cd2-baa6-dd4d7b2e5e72", "scraped_at": "16/01/2022 16:18:49"}, {"index": "1923", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Cmarcus47", "review_title": "Deffective", "review_description": "Game went blank after halfway through game", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "All in all", "name": " the game is a good one", "brand": " and I will be playing it for a long time", "sku": " I'm sure.\"", "reviewer_name": "yes: I recommend this product", "review_title": null, "review_description": "6", "recommended_review": "7", "verifed_purchaser": "11 years ago", "helpful_count": "4", "not_helpful_count": "4.3975", "reviewed_at": "239", "rating": "16246986", "average_rating": "6e97e218-40aa-560b-abb3-ace092541a18", "reviews_count": "16/01/2022 16:18:50", "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "1946", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "Craig J", "review_title": "Good", "review_description": "It's like any other fighting game, just with dc characters.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "3", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "137380064", "uniq_id": "6f7a1037-2eee-529c-af89-41813d302e79", "scraped_at": "16/01/2022 16:18:50"}, {"index": "1947", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "Not Smith", "review_title": "Great Game", "review_description": "First time player, great game with good graphics and player selection.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "130609115", "uniq_id": "83e6742d-423f-5427-b3d9-868c16e83af4", "scraped_at": "16/01/2022 16:18:50"}, {"index": "1965", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "THE UNTOUCHABLES 1987", "review_title": "one of the best fighting games since MK.", "review_description": "Injustice Gods Among Us is from the people who bought everyone the one and only, Mortal Kombat series. this game is a lot like Mortal Kombat only with DC superheroes and villain's. every fighter is great in the game; it only depends who you like. the story mode is very deep, and exciting. plus the extra content is a bonus for the ultimate edition. overall great fighting game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "9", "not_helpful_count": "1", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "95564509", "uniq_id": "fe05bd46-9844-5008-a172-3a57b7242347", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1973", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Lulu15bb", "review_title": "Love it like all the series", "review_description": "I have all the pokemon games and I have to say this was really good. I loved most of the new pokemons and loved the new pokemon transformations and events. The story was nice and N was the best character created.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "4", "not_helpful_count": "2", "reviewed_at": "5 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "65887747", "uniq_id": "6dc60589-e9a7-51ba-878a-8eb6570b4570", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1980", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Stoffangadd", "review_title": "Upgrades", "review_description": "Graphics: They're upgraded since HeartGold and SoulSilver and by that I mean it uses more 3D and the backsprites in battles are animated. But animated backsprites doesen't mean that it looks good, it actually looks pretty bad compared to the still ones from the previous games. The Pok\u00e9mons are also cool and creative don't let the annoying Gen 1 fanboys trick you. Gameplay: The gameplay is just like HG and SS but there are new triple and double battles at random, there's also a few more new Pok\u00e9mon moves and TM's aren't destroyed when you use them (Thank God) oh and you can't walk with Pok\u00e9mon :( that sucks. After all SS and HG are just more fun and bigger games, Black and White are good starter games if it's your first time, but they're only good starting games HG and SS are great starting games. Story: The story is good, I won't spoil anything.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "32358368", "uniq_id": "9e215167-8c6c-5c20-a1eb-753fe5513952", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1982", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "Very Fun to play as a kid!! Because I am!", "review_description": "Hi i recomond this game because when i played black 2 at the end of the game in nevema town you find out what happend to you after you try to find N and black play this pre-owned to get gamestop power up points", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "30749641", "uniq_id": "e1f27292-2652-5bcc-901e-b58e2fcd8590", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1991", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Carol58", "review_title": "Good Batteries", "review_description": "[This review was collected as part of a promotion.] These are very comparable batteries to any of the other name brand batteries. I always buy these when buying batteries because they work just as well and they are lower in price!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "5 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "145718488", "uniq_id": "ec26f50f-f586-5538-acd4-2b06ddedb7bf", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1995", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "TNB719699", "review_title": "The game is perfect for ones that love fighters", "review_description": "People who love street fight, tekkan, & Mortal Combat I would highly suggest at least taking a look at the game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "7 years ago", "rating": "4", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "34127762", "uniq_id": "5d36d8e6-d1c6-59af-b12d-cbaa3b8752c7", "scraped_at": "16/01/2022 16:18:51"}, {"index": "1996", "name": "Injustice: Gods Among Us Ultimate Edition - Xbox 360", "brand": "Warner Bros. Interactive Entertainment", "sku": "953203", "reviewer_name": "lefteye", "review_title": "a good idea", "review_description": "I think it was an awesome idea for this game but some characters i think could have been better like bane could have been the newest bane or for a DLC most people like the dark night rises bane but they could have added different characters like killer croc, beast boy,or something like that but the original copy was a great game i never played this copy but from what I've played the game is awesome and i think nether realm and DC should keep working together", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "1", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.4044", "reviews_count": "136", "comment_id": "33603012", "uniq_id": "6f742dd0-a089-5bba-a90c-c01cabae1b51", "scraped_at": "16/01/2022 16:18:51"}, {"index": "The glow in the dark flashlights are good but they do not glow like I would have expected.\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "7 years ago", "review_description": "4", "recommended_review": "4.6053", "verifed_purchaser": "76", "helpful_count": "79957655", "not_helpful_count": "d83f0753-7431-5b0a-95b7-a43bbba85025", "reviewed_at": "16/01/2022 16:18:52", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2006", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "Arbor", "review_title": "Products have good features", "review_description": "The lantern gives off plenty of light for our need during power losses at home. The flashlights also give of a good beam of light and they appear very durable. The package came to us very quickly.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.6053", "reviews_count": "76", "comment_id": "69202341", "uniq_id": "0d941976-fd5e-55da-baa1-4740d66627cf", "scraped_at": "16/01/2022 16:18:52"}, {"index": "2012", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "gamergirl1127", "review_title": "awesome", "review_description": "This is my first pokemon game and I am completely hooked. I would definitely recommend this to a friend or any gamer. If you are thinking about getting a pokemon game then get it. I was weary at first but after playing it for about an hour I was really happy I decided to buy it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "30151739", "uniq_id": "74865bd7-c207-5d24-b52f-202c543084c0", "scraped_at": "16/01/2022 16:18:52"}, {"index": "2013", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "StEaLtHXxY0L0", "review_title": "Pokemon Black is GREAT!", "review_description": "Pokemon Black is a very great Pokemon game. Though it is the only one i have played, i loved it. If you have another pokemon game like Diamond or Pearl, AND If you have ALL The gym badges, you can get on WI-FI or something and get your Pokemon from another game ONTO Black. I LOVE THIS GAME!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "29371777", "uniq_id": "5a7321b2-58c7-5535-bd9e-a66a6b4dd6f3", "scraped_at": "16/01/2022 16:18:52"}, {"index": "Pokemon are VERY pixelated. (I know pokemon hasn't ever been about graphics", "name": " but its hard to tell what your pokemon even looks like in battle. This was the first thing i noticed whenever i started playing)", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "One other vast improvement to the game is the soundtrack. Having played all generations except HeartGold/SoulSilver", "name": " I can honestly say that this game was the first one I can remember listening to all the way through. The annoying beeping when a pok\u00e9mon reaches low health has been integrated into its own song. It is no longer repetitive and headache-inducing", "brand": " but pleasant.", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "While not my favorite of the franchise", "name": " this game introduces great new features and improves on old ones", "brand": " guaranteeing a bright future for other Pok\u00e9mon games to come.\"", "sku": "yes: I recommend this product", "reviewer_name": null, "review_title": "0", "review_description": "0", "recommended_review": "9 years ago", "verifed_purchaser": "4", "helpful_count": "4.4195", "not_helpful_count": "553", "reviewed_at": "25563150", "rating": "a03ff777-e49b-5f2c-a129-d6be8415e19b", "average_rating": "16/01/2022 16:18:53", "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2036", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Anonymous", "review_title": "W2K19 awesome game", "review_description": "My 7 year old WWE fanatic likes it best out of all the WWE GAMES and he has them all!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "175624511", "uniq_id": "127d59f9-0ac9-585f-a4b7-378346bc2ec6", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2068", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Roman Woods", "review_title": "WWE 2k19 A.K.A the best WWE game of 2019.", "review_description": "It\u2019s really more than five stars, especially the WWE Showcase and MyCareer mode. Big upgrade from 2k18. The people actually talk! I love the game and 100 percent sure that you will too.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "141020296", "uniq_id": "81671162-a128-5c3f-b2e5-3c076aec84b4", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2075", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "FemeFatale27", "review_title": "Pro's and Cons!", "review_description": "This is actually the first Pokemon game I've played in a while. Ever since playing Pokemon Diamond and most of the GBA games which were good but the story often got either frustrating and or respetive for me. I'm pretty happy I bought Pokemon Black to me it's the best out of any Pokemon game I've played, but there are some equally frustrating things about this one. Cons: One of the biggest problems I'm having with this game and the reason why I only gave it a average rating was because the new Pokemon are a nightmare! Not only are they not creative such as Wubat (who had me laughing for hours because it was such a rip-off of Zubat) but they are really weak! I found myself having real difficulties with beating anything after my 4th gym badge. I mean seriously my starter Pokemon Tepig; who is said to be the best out of the two other starters is in 2nd evolution level 35 and is losing to wild animals of level 22!! whats up with that!? Which believe me is SOOO frustrating!!! and for some reason they decided to pix-elate the Pokemon so the pokemon look like they did in the Gameboy Advance games which isn't horrible but they just leave you thinking why? Pro's: The pro's of the game is that the game settings are amazing! and unlike the Pokemon are so creative and just so fun to explore! The game also has lots of opportunities to help your Pokemon advance levels which would of been great except the Pokemon are really weak so it doesn't help much. Also I love that they didn't make the gym leaders ridiculously hard like they always do in the previous Pokemon games. In conclusion the settings and places in this game is great, the Pokemon not so great. So if you can stand always running back in forth from forest to health center throughout the game then I would recommend it! BUT If you get frustrated with things like that like I do you might want to wait and buy Pokemon Black 2 (which i'm totally getting) because they are bringing back the the good Pokemon generations as well as the new ones in this game and hopefully with all the new settings and places like this one:)", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "4", "reviewed_at": "9 years ago", "rating": "3", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "24037914", "uniq_id": "0fdb1b90-8cb3-546c-848d-c814d17552ce", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2077", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "SO AWSOME", "review_description": "I love the game. Its so fun and it looks so 3d. i wish i got genesect to but i will have to wait. i beat the game in a week it was so fun.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "24029500", "uniq_id": "871cfa7e-ebf7-52f5-8b1a-d560fb93ce3f", "scraped_at": "16/01/2022 16:18:53"}, {"index": "2083", "name": "Rayovac High Energy Alkaline Batteries 4 Pack - D", "brand": "Rayovac", "sku": "313366", "reviewer_name": "joeyc", "review_title": "good value package", "review_description": "I feel that even though the overall package is a good value, I think the lantern is overpriced.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2102", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Schmitty", "review_title": "Dont let anybody trick u into this...", "review_description": "This game was aweful... I bought it a while ago, when white and black first came out. I was pumped to play a new pokemon game, simply because they are a good way to get entertainment. This game sucks... horribly.... They seriously brought the graphics back to a way WORSE than playing blue or red. Dont waste your money. If your going to buy a pokemon game get one of the other ones NOT black or white.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "19", "reviewed_at": "9 years ago", "rating": "3", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "22712643", "uniq_id": "2ff3bba1-2588-510e-b731-9c1ae89dabba", "scraped_at": "16/01/2022 16:18:54"}, {"index": "2105", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "dtwiiguru6", "review_title": "Geared toward novice players", "review_description": "Pokemon Black Version is the companion to Pokemon White Version, the fifth generation Pokemon games. This fifth generation game really delivers the standard Pokemon experience. As I said, this game is geared toward novice players who are new to the series. Some of the features that can show you this can also really enhance the gameplay for anyone. The text moves faster, the Pokemon attack faster, and some more things to really enhance the gameplay. It's the little things that make the game more fun. But perhaps the biggest thing to make the game easy to pick up and play for anyone is that Pokemon gain so much more experience per battle that it makes level-grinding obsolete, which is a good feeling. Switch training is also still very effective for training many Pokemon at once. If a Pokemon has a status ailment, it will show it on the pokemon's body, like if the Pokemon is asleep the sprite's eyes close to show that it's asleep. Parts of the game stray away from that isometric viewpoint that many Pokemon veterans are used to, and make use of full 3D. The best examples of this are on the Skyarrow Bridge and in Castelia City. That alone makes the game so much more enjoyable. The music is overall not that great, but there are some songs in the game that are so good, they make up for all the bad ones. The following isn't anything new to me, but I think the female sprite is just hot. What can I say? Pokemon girls are hot. Pokemon Black is a great game. Good graphics, decent music, and the small things have been improved that just make the game more enjoyable. It may be a bit too easy for a Pokemon veteran, but this game is still very easy to recommend to anyone, whether you are a Pokemon veteran or new to the series. Buy it now.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "7", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "22004550", "uniq_id": "bbb2f784-daf1-51b2-9f49-851e17c0acdb", "scraped_at": "16/01/2022 16:18:54"}, {"index": "Turned out beautiful.  Also added remote controlled battery lights to the ceilings", "name": " makes it look very real especially when the front is closed.\"", "brand": "yes: I recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "1 year ago", "recommended_review": "5", "verifed_purchaser": "4.7143", "helpful_count": "21", "not_helpful_count": "227821313", "reviewed_at": "c8141619-216e-5423-a6b6-0676189a6571", "rating": "16/01/2022 16:18:54", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2118", "name": "KidKraft Grand Anniversary Dollhouse", "brand": "KidKraft", "sku": "318606", "reviewer_name": "Eunice", "review_title": "The 50th Anniversary Doll House", "review_description": "The Doll house is Beautiful .My Granddaughter loves it .Not to difficult to put together ,my son said they should print the instructions in color.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.7143", "reviews_count": "21", "comment_id": "227418618", "uniq_id": "3edad16b-cebf-5ad3-8f2a-340786aaaf12", "scraped_at": "16/01/2022 16:18:54"}, {"index": "2134", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "macperson101", "review_title": "Love it.", "review_description": "I like the game. Completed it very fast.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2138", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Novashooter", "review_title": "Good game", "review_description": "The world map of the game got smaller and the gym battle are easy...making this pokemon series kinda of nooby it good game but it wasnt hardcore like ruby or pearl....", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "21768332", "uniq_id": "c9323b4f-607f-5a3b-a3be-bac6bbf334ed", "scraped_at": "16/01/2022 16:18:55"}, {"index": "2145", "name": "KidKraft Grand Anniversary Dollhouse", "brand": "KidKraft", "sku": "318606", "reviewer_name": "Susan", "review_title": "Wow, i wish i was little again", "review_description": "This dolls house is amazing!  We bought it for our 4 year old and she absolutely loves it, she is going to be playing with it for years to come.  Excellent quality , large, colorful and comes with so much furniture.  I feel its worth a lot more than the price we paid.  Awesome!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.7143", "reviews_count": "21", "comment_id": "227272724", "uniq_id": "c833c08e-5e18-5e2b-9f29-13cd1f801290", "scraped_at": "16/01/2022 16:18:55"}, {"index": "Don't mistake me for saying this game is bad - it is indeed a superb game. I would like to cover each aspect of the game.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "As for the story", "name": " you are a boy/girl of around 14-16 years of age", "brand": " with two friends Cheren and Bianca. The three of you are about to receive your first pokemon from Professor Juniper(who also happens to be the first female professor in the mainstream Pokemon games). With your pokemon", "sku": " you will be setting out not only on a journey to defeat the pokemon league and claim the title of champion", "reviewer_name": " but to be acknowledged as full-fledged adults", "review_title": " which makes sense", "review_description": " considering your character's age. Along your journey", "recommended_review": " you will be encountering Team Plasma", "verifed_purchaser": " an organization striving to separate pokemon from humans. You", "helpful_count": " of course", "not_helpful_count": " are against this ludicrous ideal", "reviewed_at": " and things become more serious.", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2172", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "MaryKaye", "review_title": "It was enjoyable.", "review_description": "I've been playing Pokemon games for the past (my rough guess) 15 years, and was a huge fan of Pokemon Blue Version. Still am! That said, Pokemon has come a long way graphically, but not so far for storylines. This game stuck more with the traditional game play style than, say, Pokemon Ranger, which I liked. The story wasn't bad, either. All in all, I enjoyed playing this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "20398626", "uniq_id": "66d32af8-7c40-5cdd-bfd7-44cd1389e320", "scraped_at": "16/01/2022 16:18:55"}, {"index": "2249", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "starchild1701", "review_title": "it was ok could have been a better picture", "review_description": "we only bought it for the peggle game that came with it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "123248361", "uniq_id": "33b64013-ee87-513d-af6c-a480d4c41c38", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2267", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Academy08", "review_title": "Trash", "review_description": "Career mode could of been way better. I loved the game at first but then it completely became wack.  Maybe next year they will do better.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "127188355", "uniq_id": "686af6ea-385e-5d59-a22e-69d11e7c82ba", "scraped_at": "16/01/2022 16:18:57"}, {"index": "2308", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Buster from Houston", "review_title": "Cool fun game", "review_description": "Fun wwe game , probably the best since 2008 WWE game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "126425205", "uniq_id": "f93b12ff-49af-505f-82ac-9b77f18b2641", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2309", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "micahthegreat1_", "review_title": "Amazing!!!", "review_description": "I love this game the career mode storyline is so good.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "126341419", "uniq_id": "4e7ad05d-ced4-561e-a048-35826514b13b", "scraped_at": "16/01/2022 16:18:58"}, {"index": "They make the reversals hard to do it\u2019s either to fast", "name": " to slow or shows green but doesn\u2019t work properly. ", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2314", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Ty Trudeau", "review_title": "WWE 2k19", "review_description": "A very ambitious game. I can see what the the developers had in mind. But the game  ultimately fails to capture the true esque of what pro wrestiling is. Final score 5/10.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "125824032", "uniq_id": "b8f8a1b7-505d-58c6-ba71-6777eefa0f81", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2320", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Akxb9s", "review_title": "Love WWE, not a good game", "review_description": "Controls are slow and either your to slow or to fast when it wants you to hit a button.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "125722035", "uniq_id": "ad06e2b4-3b67-5805-88b0-735e6d9ea752", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2337", "name": "Plants vs. Zombies - Xbox 360", "brand": "PopCap Games", "sku": "952671", "reviewer_name": "slapshot", "review_title": "Zombie Attack", "review_description": "The best part of the game is vs. and the campaign.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.3364", "reviews_count": "110", "comment_id": "19602310", "uniq_id": "6c24d27b-5dc9-5998-b739-f1ece636d1f6", "scraped_at": "16/01/2022 16:18:58"}, {"index": "-Graphics. This ought to shut up those who say the Pokemon series has terrible graphics. The Pokemon Series has never been about graphics", "name": " but Nintendo updated them because that's all gamers think about these days.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2349", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "andrewpbeast", "review_title": "A Great Last Game to the DS", "review_description": "This was the last game for the DS to some. The 3DS was about a month away, and no one could wait. But Nintendo pulled out a new Pokemon main series game to end the DS off, and we had no problem waiting another month for the 3DS. This game, in my opinion, is what Pokemon Diamand and Pearl should have been. It actually boosted up the graphics, made the Pokemon always moving, added a new camera view (both in battle and out), and made online play accessable. Plus the game has a lot of content... including 150 ALL NEW Pokemon. So... let's get on with the review. -----GRAPHICS------ Nothing ground-breaking, but they still look very nice, and the animations are great! -----FEATURES----- The game features 150 new Pokemon. That might be enough to make you want to buy this game. Plus there is a whole new region to explore with new cities, characters, and a whole new dramatic story. Plus all of the Pokemon from past versions are able to be caught or traded after the main game is over... so replay value is pretty high. -----GAMEPLAY----- The gameplay is awesome. It is Pokemon (and its fast paced, unlike diamand and pearl were). You run around and explore areas, finding your way through puzzles and areas, and pitting your Pokemon together in classic RPG battles. Pokemon in its prime. -----CONCLUSION----- This game is awesome. If you do not own either black or white, buy one of them (or both!!!). These games are true Pokemon classics... enough said!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "8", "not_helpful_count": "1", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "18762069", "uniq_id": "6a245aea-2dc8-5485-8180-cd35fe8d1539", "scraped_at": "16/01/2022 16:18:58"}, {"index": "2376", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Bison272", "review_title": "Nice but I am not ready...", "review_description": "Create a character was too hard to understand and I gave up.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "124300716", "uniq_id": "d5864fe7-7eaa-5072-9011-a881984ec596", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2379", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "TBSS", "review_title": "Bad character design", "review_description": "They did a terrible job with the Ultimate Warrior, doesn\u2019t even look like him", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "124097084", "uniq_id": "b3cce5e8-109b-5d36-a4f0-1630eabfe00b", "scraped_at": "16/01/2022 16:18:59"}, {"index": "The concept is very simple and it actually works better than you'd think. It's always fun to see what lawn setup works best and how you can create new and wild plant formations to clear away the zombies. Also", "name": " the grid-style map really does work well as a mouse substitute for the Xbox 360.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2413", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Heathermc123", "review_title": "Last a long time", "review_description": "[This review was collected as part of a promotion.] Having a 98 lb dog means lots of walks.  Walks in the morning, afternoon, evening and even in the middle of the night.  With means I have to have a flashlight always ready.  I don\u2019t want to stumble.  The batteries not only made my flashlight shine bright but they have lasted a long time.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231643277", "uniq_id": "6da1cabc-0ecd-54d4-9513-6918511d756e", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2418", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Brittbrat47", "review_title": "Great product", "review_description": "[This review was collected as part of a promotion.] These batteries are amazing! They stay charged for really long periods of time even with continuous usage! They work great in children\u2019s toys! They are easy to use and it only takes a couple to last for weeks! It\u2019s a product I can trust and I am comfortable buying each time! It\u2019s durable and it lasts!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231585578", "uniq_id": "134c831a-d990-5841-a6fd-e3b2460836ad", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2429", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Anonymous", "review_title": "Doom Slayer", "review_description": "Non stop action, blasting my way through the game. Huge guns , big bosses good story. Visuals are great. A lot of cameos in the game.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2439", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "RJHJ", "review_title": "Never again", "review_description": "Controls were glitchy and not always responsive. Short Mycareer mode and no women's career mode", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "123845835", "uniq_id": "abc57723-6b82-51dd-bd97-fe81c60877b4", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2448", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Roman330", "review_title": "Moving in the right direction", "review_description": "As is often the case with 2k games (and in particular the wwe series) the game definitely has some bugs and flaws. They don't ruin the gameplay experience, but, do take a bit away from it. Outside of that this is the best game WWE has released in at least a decade. Fun new features, solid graphics, huge roster. Hours of entertainment to be had with the re-tooled career and universe modes. Not a perfect game, but, definitely a step in the right direction and leaps and bounds better than 2k18 was. Only knocks are the general glitchy-ness and repetitive commentary.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "123355989", "uniq_id": "ac316aaa-36a3-5bac-bb29-5713cdfb64a9", "scraped_at": "16/01/2022 16:18:59"}, {"index": "2450", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "ADHDidentified", "review_title": "Great clear HD screen", "review_description": "[This review was collected as part of a promotion.] I used it through CNA school and used it with my job as a peer worker in narcotics anonymous.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "212263389", "uniq_id": "6177f393-43dd-52b2-9fa2-6c6c25516f2a", "scraped_at": "16/01/2022 16:19:00"}, {"index": "The only drawbacks I found are it doest swivel and has no USB c port.\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "5", "recommended_review": "4.1605", "verifed_purchaser": "81", "helpful_count": "212231611", "not_helpful_count": "399bb3a4-c9d3-5a3e-8475-b49d2eb6ccd3", "reviewed_at": "16/01/2022 16:19:00", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2454", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Indio", "review_title": "Awesome gaming monitor!", "review_description": "[This review was collected as part of a promotion.] This monitor was a big upgrade from my previous Samsung monitor. For gaming, the 144hz refresh rate stands out as the video is buttery smooth. The color reproduction is great, especially after calibrating the monitor. Blacks can be a little deeper as this is not an oled monitor and of course there are options with higher refresh rates. Outside of that this monitor is a great choice for anyone looking to up their gaming experience.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "212216493", "uniq_id": "40ee16ba-9452-598b-8fb3-1d07b48737ba", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2455", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Kingkja", "review_title": "Amazing curved monitor", "review_description": "[This review was collected as part of a promotion.] I used it for PC gaming and my PS5 and it worked amazing. Beautiful colors, and amazing refresh rate.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "212197269", "uniq_id": "355a3859-10c3-5a65-b135-759af46cedb9", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2469", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "AmberC87", "review_title": "Excellent", "review_description": "[This review was collected as part of a promotion.] No matter what anyone tells you, I do believe Energizer batteries last longer than off brand ones. These have been put in a toy for my daughter since the day we received them, and the toy is still going strong. Normally, we do have to change the batteries every few weeks. These batteries are great, and we will only purchase Energizer from now on!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231422346", "uniq_id": "8fcff3d9-f2ab-5887-8f71-47c3bd022720", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2473", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Ian Ridge", "review_title": "DOOM on Switch", "review_description": "Always a great game to play. Took some getting used to playing it on the Switch, but is still TONS of fun.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "6", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "153253026", "uniq_id": "44c7af51-67bf-51d4-82de-b03adc817810", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2475", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Seanstr26m", "review_title": "This is a fun title to play.", "review_description": "It was a lot of fun and a great introduction to the Nintendo switch.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "145099131", "uniq_id": "2cbf7fd4-31ec-5f7c-bf78-11c02ed35f53", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2481", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Erickus", "review_title": "Great game", "review_description": "Excelente game. A bit disappointed on the port, still fluent though. The game itself is superb.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "141857413", "uniq_id": "dea8c346-f705-5dbb-8061-310bb0ca00f7", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2486", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "blackpoke6047", "review_title": "Best Game Ever!", "review_description": "I don't have any other pokemon games so I can't compare this to any of them. Right when I started this game I became addicted! In my oppinion this is the best game Ever!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "18185345", "uniq_id": "1a4c2202-f732-55ef-bd9b-60afcf9eca4d", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2499", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Dave Garrett", "review_title": "Not bad.", "review_description": "Gameplay was an adjustment since I hadn't bought a wrestling game since 2003 but I got the hang of it and became fun. The menu system in creation mode is a gigantic one which makes it somewhat confusing. The soundtrack is awesome as well, with lots of uptempo metal and rap to get you pumped up to start slamming guys around. Lol", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "123058268", "uniq_id": "7ae1db89-7180-5ad1-8554-e483c1693c6d", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2508", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Stylist", "review_title": "Light weight", "review_description": "[This review was collected as part of a promotion.] I would use this for work and playing video games with my daughter.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "212142721", "uniq_id": "fb7ff4b8-38a9-569f-8896-1ceda1111a7b", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2526", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Rmh00", "review_title": "Never Disappointed", "review_description": "[This review was collected as part of a promotion.] As a family we have always used Energizer batteries and they have never let us down obviously good quality long lasting expiration dates and who doesn't love the Energizer Bunny. After trying the Energizer Max batteries we definitely will be buying these they seem to give a little bit more power and definitely last longer. We will continue to be an Energizer battery family M will definitely recommend these to our friends", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231299380", "uniq_id": "14cfbe38-c4d1-5e06-a24c-437ad4a39b65", "scraped_at": "16/01/2022 16:19:00"}, {"index": "2529", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "165072", "review_title": "Doom", "review_description": "Good game, not for those that like to feel invincible. You will die.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "141384686", "uniq_id": "24b9f07b-164e-5f28-b9b3-4d9f0c27a1a0", "scraped_at": "16/01/2022 16:19:01"}, {"index": "The Nintendo switch is the downfall. The operations of the game on the Nintendo switch are absolutely horrible for anybody choosing this title on this platform.\"", "name": "No: I don\u2019t recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "2 years ago", "review_description": "3", "recommended_review": "4.4127", "verifed_purchaser": "487", "helpful_count": "137242542", "not_helpful_count": "4bad798b-7722-53fa-852d-d57a791623ad", "reviewed_at": "16/01/2022 16:19:01", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2542", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Ironmaiden1207", "review_title": "New and Upgraded Game Mechanics", "review_description": "Pok\u00e9mon Black is a great and refreshing addition to the series. Generation V adds in new pok\u00e9mon (155 new ones to be exact, which is the greatest amount added to date) to excite and surprise both new and continuing fans. The updated graphics from Diamond/Pearl/Platinum are beyond what anyone who followed the game\u2019s announcements at E3 expected (including me). Game Freak took the capabilities of Nintendo\u2019s DS, a system that came out over five years ago, and pushed them to their absolute maximum. At first glance the graphics seem the same, but the battle animations as well as a few of the cities really pop out in stunning detail. Having said that, this review is mainly geared toward the continuing fans that understand the game\u2019s underlying mechanics such as IVs, EVs, and the nature of breeding for competitive play.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2555", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "badbart", "review_title": "A ton of new and old school wrestlers", "review_description": "I bought this on sale at Gamestop and I really like it. I haven't bought a wrestling game in a long time but I am glad I got this one! Great graphics, the moves are easy to pull off, even for me. Get it you will like it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122724026", "uniq_id": "dfb5b137-510e-5588-a02e-8299fb3c8c01", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2556", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "WillRabbit", "review_title": "Reminds of the classic wrestling games.", "review_description": "I bought WWE2K19 originally for my nephew as a christmas present. Bit decide to play myself the game plays alot better then the last couple of game. Enjoyed playing it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122716641", "uniq_id": "57616dc8-09f9-58f1-ba19-0658b6172f7f", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2561", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "Anonymous", "review_title": "great but dont know how to fix motion blur", "review_description": "this product is really great but i dont know how to fix the motion blur and it makes the game look really ugly and it would be really helpful if someon can help me", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "208062710", "uniq_id": "843a56ba-9273-5154-ae22-db7579cb6e9a", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2587", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Anonymous", "review_title": "The gameplay", "review_description": "This game isn\u2019t a shooter like Call of Duty or like Destiny. It\u2019s a run and gun type game. If you stop moving you die.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "130513065", "uniq_id": "f81cee93-e8d2-55f9-b7fb-085c5599639f", "scraped_at": "16/01/2022 16:19:01"}, {"index": "2601", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "BigD2231984", "review_title": "Great fun", "review_description": "A really exciting game being I'm a wrestling fan I really enjoyed the look and gameplay of it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122690238", "uniq_id": "9be8c89c-5588-57ed-8c37-514f44b886e3", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2604", "name": "Samsung Odyssey CRG5 24-in 1920x1080 144Hz Curved Gaming Monitor", "brand": "Samsung", "sku": "277498", "reviewer_name": "TDRookie", "review_title": "Quality", "review_description": "never buy this monitor. jog button that use to  control main menu does not work all the time. i have to send it bout again for 2nd time services in just couple months . and you have to wait almost 3 weeks to get it back. terrible and big mistake when i bought this monitor", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "1", "average_rating": "4.1605", "reviews_count": "81", "comment_id": "200425970", "uniq_id": "ff344c57-18d2-579f-b82b-486fad1b5c5f", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2609", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Swimnwild", "review_title": "Simply won\u2019t work", "review_description": "I\u2019ve bought multiple copies and get the same error. Dirty disk. I bought 2k18 first. Got the error. Returned it but they were out. So I drove to San Jose. Got a new copy same error. Went back to San Bruno they were baffled suggested I buy 2k19. So I did. Same error. So whatever", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "122681370", "uniq_id": "bdd1ee97-ce70-5dff-ab66-5ec25e332137", "scraped_at": "16/01/2022 16:19:02"}, {"index": "The monitor does have excellent colors and contrast", "name": " and it is indeed fast for a curved VA monitor.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2620", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Bella125", "review_title": "Great value", "review_description": "[This review was collected as part of a promotion.] It's Energizer, not much more to say!  Always reliable and last a long time for me.  This is the first time I have tried the Energizer Max and so far, so good.  I'm expecting great results as with other Energizer products.  Can't go wrong with this brand!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231198339", "uniq_id": "54cb9d30-f7bf-597e-9c31-ae798aaa18e2", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2628", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Cosmetic mist", "review_title": "Great game for us adult switch gamers", "review_description": "This game is surprisingly good. I thought that it would have trouble running on the switch but it is turning out to have no problems at all.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "130454649", "uniq_id": "a4742315-9973-572e-addb-0362adc7a4a0", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2636", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "LLIV", "review_title": "Repetitive Shoot Em Up", "review_description": "Fun for about an hour, then becomes repetitive. Online matchmaking is awkward and buggy and gameplay feels like a B-rate Halo knockoff.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "14", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "128630101", "uniq_id": "3f5cd468-b9e7-5817-b4a8-652aedcbb29d", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2641", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Jetset Boutique", "review_title": "Condition", "review_description": "Item arrived in great cosmetic condition however the black line on the screen was not on the description", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "6 days ago", "rating": "3", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "197350868", "uniq_id": "7a2a4c36-5dfc-5061-8bff-00ab85acf7a4", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2646", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Pgehrke", "review_title": "Great stuff!", "review_description": "Awesome phone! Appears new with 100% battery and flawless appearance.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "16 days ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "194407146", "uniq_id": "3329e415-b857-5049-af32-c3cae3d28990", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2650", "name": "Star Wars The Force Unleashed: Ultimate Sith Edition - Xbox 360", "brand": "LucasArts", "sku": "952540", "reviewer_name": "WhackusBonkus", "review_title": "It's showing Cracks but still worth playing", "review_description": "Tons of cool extras and new unlockables etc. But the main games issues remain. The devs or rather the publisher EA has not done their due diligence in making a special edition. The controls remain somewhat unresponsive and the animations suffer with all the new costumes and some of the physics that they undergo. I still really enjoy this game, despite it absolutely demolishing the force as a concept, that is actually the most fun part, this 'turned up to 11' star wars universe is bomb and still a well worthy disc to load in your Xbox this Halloween.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 months ago", "rating": "5", "average_rating": "3.9615", "reviews_count": "26", "comment_id": "188652612", "uniq_id": "679f1045-d1ec-52c2-957f-1f259f25c936", "scraped_at": "16/01/2022 16:19:02"}, {"index": "The game itself is really fun and enjoyable.\"", "name": "No: I don\u2019t recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "1", "review_title": "1 year ago", "review_description": "1", "recommended_review": "3.9615", "verifed_purchaser": "26", "helpful_count": "165066929", "not_helpful_count": "566d8636-9f62-555d-a299-2c23c854686a", "reviewed_at": "16/01/2022 16:19:02", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2654", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "bigdog1998", "review_title": "Very good pokemon game!", "review_description": "I just recently got this game and fell in love with it as soon as i first played it. The new pokemon in this game are very unique. This game is very challenging in some parts, but everyone likes a good competition! This game is the hardest pokemon game i have encountered so far but this can also be a good thing. Overall, this game is a very good pokemon game!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17728368", "uniq_id": "61f41895-9d1d-557d-81dc-1b00f56f80d5", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2662", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "drycones", "review_title": "A over the top game for everyone!", "review_description": "First off I just want to say that this is a game for everyone. The more you play it the more fun you will have. I have played this game now for about 120 hours and I don't think that will be a fourth of the time I play it for. Yet at the same time I found that it was great if I only wanted to play for 20 mintues at a time. This is a great game for long time Pokemon fans and for newcomers to the series. No matter who you are I think you should get this game.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "9", "not_helpful_count": "2", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17710118", "uniq_id": "08da893c-dd1f-5f63-831f-e1f97872ef64", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2703", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Genaro77", "review_title": "Great gameplay", "review_description": "Doom is one of those games that you have to play over and over again I also like playing online it's very challenging I can never get bored with this game at all", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "127856473", "uniq_id": "17b49413-3aa4-5ebd-a885-fbf4784c7011", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2705", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Blondegyspy", "review_title": "Fantastic First Person Rush", "review_description": "Fast pace and beautifully rendered with the same level of creepiness that the original game had. I was concerned at first playing it on the Switch but turned out to be the PERFECT platform for this game and I would definitely recommend it!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "127480130", "uniq_id": "4600dafc-2822-567e-8bc0-f8c22c81f15a", "scraped_at": "16/01/2022 16:19:02"}, {"index": "2708", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Jack was already taken", "review_title": "Doom", "review_description": "Solid game.  Not really my thing normally, but glad to have it as a part of my collection.  Would not have bought digital.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "127172821", "uniq_id": "c07a946b-ca9b-510f-90b6-46f77e695c92", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2712", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Hello92", "review_title": "Worth it", "review_description": "Best deal I could find battery life was fair 93%. No scratches or cracks. Came with USB charger better then nothing", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "192398049", "uniq_id": "eb67a5ea-fd61-5521-bb56-cd8ec164be09", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2714", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Cam Cam", "review_title": "As advertised", "review_description": "phone came in great condition and so far no issues.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "192328160", "uniq_id": "bbd79486-b7f4-5a0b-9fb5-8ee7af33c0d7", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2718", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Hoosier Daddy 8669", "review_title": "Couldn't have asked for better", "review_description": "It was in perfect condition. Delivery was flawless. Exactly what I purchased, and that's exactly what I got. Couldn't have asked for better.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "7", "not_helpful_count": "2", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "191483237", "uniq_id": "36b7410c-a2f7-5891-b20d-cbd244931f1c", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2729", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Trixiesue", "review_title": "The best", "review_description": "[This review was collected as part of a promotion.] I think that these Energizer MAX batteries are the best. They last longer than most batteries do. They work great and the flashlight I put them in is bright, so I know they are doing their job! I will be buying them again.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231053539", "uniq_id": "4807da67-c6ce-5995-947a-057d227f7e57", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2764", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "878767787", "review_title": "85% Battery Life, Not Certified by Apple", "review_description": "\"They're not technically lying here, but the term \"\"Certified Refurbished\"\" generally means that the product is certified and refurbished by the manufacturer", "recommended_review": " so I feel kinda mislead. If they're using the same terminology as Apple", "verifed_purchaser": " they should have the same standards. 85% battery health is a big disappointment. What exactly was refurbished if such an obvious thing as the battery was not? This is just a used phone that has been cleaned and hopefully tested. Does the 1 year warranty cover a new battery?\"", "helpful_count": "yes: I recommend this product", "not_helpful_count": null, "reviewed_at": "32", "rating": "4", "average_rating": "1 month ago", "reviews_count": "2", "comment_id": "3.8558", "uniq_id": "104", "scraped_at": "191192921"}, {"index": "2765", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Sebasti\u00e1n_1", "review_title": "Good", "review_description": "You get what you paid. I got my iPhone one week ago, and I haven\u2019t gotten any problem. The condition of the phone was really good. I was scared about the battery, but I checked it. It was great.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "12", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "191055260", "uniq_id": "2b9fad96-ef67-51b3-a167-876190143d12", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2772", "name": "iPhone 12 Pro 128GB - Verizon", "brand": "Apple", "sku": "312154", "reviewer_name": "Kellie B", "review_title": "iPhone 12 Pro 512GB", "review_description": "I received this phone refurbished and it looked brand new even though the rating was good not excellent. It has performed beautifully with no issues whatsoever. Would definitely buy another product from GameStop.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "8", "not_helpful_count": "1", "reviewed_at": "2 months ago", "rating": "5", "average_rating": "3.8558", "reviews_count": "104", "comment_id": "190336482", "uniq_id": "6fc9cec8-cc30-57f8-a5d1-6ebd514cf379", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2778", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Scorp333222111", "review_title": "Very Boring- Not Scary At All- Don't Bother", "review_description": "This game doesn\u2019t live up to Supermassive\u2019s \u201cUntil Dawn\u201d. This game is extremely boring and not scary at all. The few attempts it makes to scare you just aren\u2019t scary. It all takes place mainly on an old WW2 ship. It could have been so much more scary. It doesn\u2019t have nearly as good of a setting as Until Dawn. The game just doesn\u2019t seem polished or maybe even finished. This game and \u201cLittle Hope\u201d are both this boring and not scary. Hope Supermassive takes a note from these bombs to create something much better the next time around. It\u2019s also only 4 hours long and not worth the price. Definitely don\u2019t recommend.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "5", "reviewed_at": "11 months ago", "rating": "1", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "172328953", "uniq_id": "ead96a3e-39ab-54d5-97c5-e6884de43997", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2788", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Bellabo67", "review_title": "Super product", "review_description": "[This review was collected as part of a promotion.] I have always used a different batteries but I never will use them again. These are the bomb!!! I put these in my flameless candles and they shone so bright. They were actually brighter. Will recommend to everyone I know!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231030884", "uniq_id": "e1b8b8ef-c047-5db4-b230-f555fa4e3fc0", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2789", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "BlueDragon21", "review_title": "Amazing product", "review_description": "[This review was collected as part of a promotion.] I got these batteries because I needed some for my flashlight. I was shocked that these made the light brighter and I know with this brand they will last for a while. I recommend getting these batteries for emergency use.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231030573", "uniq_id": "f98c5120-284c-54b4-805f-3f58720b58bc", "scraped_at": "16/01/2022 16:19:03"}, {"index": "2795", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "gamer9977", "review_title": "best pokemon game yet!!!!!!!!!!!!!!!!!!!!!!", "review_description": "I love this game very addictive one day i played it for at least 12 hours!Graphics are AWESOME for a ds game!I beat this last Saturday and the Pokemon I have are,Serperior LV.74,Reshiram LV.57,Cinccino LV.54,Unfezant LV.52,Zoroark LV.64,and last but not least SimipourLV.65 I also love the new gyms especially the fourth one in Nimbasa city which is a roller coaster.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17497379", "uniq_id": "ceced451-e3fd-5946-a90c-0eee51e6b033", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2802", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Dookie", "review_title": "Worst Pokemn Game Since Ruby", "review_description": "This is by far the worst Pokemon released so far. I mean, normally, you get a Pokemon game and keep playing and playing. I could only play one day before I put it down. It sucks! walking is stupid, and the battles are overly hard.. If you plan on getting it, wait unil the price drop", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "34", "reviewed_at": "10 years ago", "rating": "2", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17448024", "uniq_id": "5381612a-c556-5457-b7a5-c0182f23ca6f", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2806", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "eglou", "review_title": "i recommend you guys to experience it for yourselv", "review_description": "good to great I think to play this high graphics game to a on the go console. not exact the same graphics as on the pc and ps4 but yeah its good.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "125404884", "uniq_id": "aad1d406-fee2-5a7b-810c-7ea21b8c7561", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2808", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Marktzin", "review_title": "Doom baby!", "review_description": "Who doesn\u2019t love the all time classic doom. When I was little I was terrified of the doom created in the early 2000\u2019s but now that I\u2019ve grown up, playing this game has been a great expierence and a bit different from your common shooters", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "125159473", "uniq_id": "1ee240ed-47cc-5e64-b7e9-f2b15872dbae", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2815", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Michael63728738383", "review_title": "It\u2019s the same game as last year", "review_description": "It\u2019s literally a copy with the only change being a different menu screen", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120998968", "uniq_id": "feebe97e-6a69-5f32-b3be-19fba7cc36b3", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2819", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Sirgel", "review_title": "Love the game", "review_description": "I just bought it and can\u2019t dtop playing it every chance I get .", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120832820", "uniq_id": "914319f5-a0c8-5590-bb73-7697f083b7b2", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2822", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Dan317", "review_title": "Great graphics and great online experience", "review_description": "I brought this game and I love the build quality and graphics they put a lot of detail in this game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120788651", "uniq_id": "40b93ff5-b508-5ff2-aeb7-3824c9fcef02", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2836", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Kevin65", "review_title": "Good batteries", "review_description": "[This review was collected as part of a promotion.] The Energizer MAX Alkaline D Batteries are good batteries.  I use them in my flashlight, that I am always using.  They last quite a long time for me.  I am very happy with them and plan to buy more of them to keep on hand.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "231017127", "uniq_id": "53e44508-5eef-5991-9948-2c30078bfdd1", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2849", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Anonymous", "review_title": "Freakin awesome game", "review_description": "If you love all the other pokemon games and actually read the story, you'll love this one as expected.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17412508", "uniq_id": "02dd343e-8727-58ee-b38d-e019e1d1f8e7", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2866", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Glacer", "review_title": "WWE  2K19!", "review_description": "Great game. Career mode provides so many challenges and there\u2019s always something to do.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120399343", "uniq_id": "847c59e7-f422-5c25-abb8-30829e7c289f", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2868", "name": "WWE 2K19 - PlayStation 4", "brand": "2K Games", "sku": "178722", "reviewer_name": "Undertaker 3141", "review_title": "Great gameplay, great graphics", "review_description": "I bought the game a few days after it came out and I glad I did", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2351", "reviews_count": "1195", "comment_id": "120398015", "uniq_id": "06b01be3-d421-58a0-9141-626ebd51d963", "scraped_at": "16/01/2022 16:19:04"}, {"index": "2882", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Mgse", "review_title": "Wack", "review_description": "If i ask for a Ps4 game dont give me the xbox version of it", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "1", "reviewed_at": "7 months ago", "rating": "1", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "180972468", "uniq_id": "3bd4191b-a262-56e2-8bce-c42eefe64a5e", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2886", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Deadstock", "review_title": "Awesome Game", "review_description": "Great game experience. Great franchise. Need more titles like this.Very pleasant gamestop experience as well.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "170203677", "uniq_id": "a00b9b98-5dc5-531e-ac46-fbab8df1d300", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2896", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Baine", "review_title": "Good decision based game", "review_description": "Not an action game its a decision based game, pretty good for what it is , but the game stop employees in Oroville are the best they are very knowledgeable an helping.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "141298878", "uniq_id": "b2a126f2-2ba9-593f-a5bd-2a95f9e45631", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2922", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Vanhala69", "review_title": "Very intense!", "review_description": "I bought the game a week ago and have completed the Campaign along with trying out the some of the other options. This game is very good, and keeps you on your toes throughout the whole Campaign. I wouldn\u2019t suggest if you suffer from high levels of anxiety and paranoia. Aside from that, it\u2019s a great title that really knows how to keep things interesting.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "121323698", "uniq_id": "9964746a-e85d-5df0-8a04-09f729f5477f", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2938", "name": "Madagascar 3: The Video Game - PlayStation 3", "brand": "D3 Publisher of America", "sku": "930800", "reviewer_name": "BLiiTzz", "review_title": "This Game is Pretty Fun.", "review_description": "This game is pretty fun, but as i look back at older games from madagascar, the animals use to run faster and they would be able to sprint, also the missions where a lot more fun than the ones on Madagascar 3 and more interesting, And also they had ALOT more mini-games, please Dreamworks and Activision or D3 Publisher, for the next Madagascar game MAKE BETTER GRAPHICS,MAKE THE ANIMALS RUN FASTER, MORE COOL MINI-GAMES, COOLER PLACES LIKE NEW YORK AND AFRICA (JUNGLE) and the missions make them more interesting", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "2", "reviewed_at": "9 years ago", "rating": "4", "average_rating": "4.5", "reviews_count": "2", "comment_id": "24558027", "uniq_id": "9df256c3-7299-57f7-9c55-0d76574619c6", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2944", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "airnesswaves", "review_title": "great batteries", "review_description": "[This review was collected as part of a promotion.] Energizer is a name that you can trust for excellent battery life and reasonable pricing on their products. These Energizer Max batteries are a great value and much better than generic batteries for sure", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230962264", "uniq_id": "38b87610-3e17-5bdc-a1e1-b63934dd0125", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2952", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Forte Kosakku", "review_title": "Fallout 4 Shoots to Kill", "review_description": "Its the fallout engine and world you know so well but with a focus on building little fortified communes for people to live in which makes all that scavenging that is so addictive, worth something. Anything you can store in inventory can be used to build something however, if you have an internet connection, you can access mods for free and just have toolboxs of unlimted materials waiting at each location. Its hard to resist that and if you do that , youll sorta negate the reason for collecting anything other than ammo, weapons, armor, clothes and whatever you like to display in your home and camps. The beauty of that was that for me, it didnt ruin the game , being a god right off the bat with all my goodies was just awesome. Im here to explore and do whatever i want since the world ended. The game is a blast and its funny and smart but the characters could have been more original like in Fallout 2 or 3. Even new vegas had great npcs and this one does too just not as many. The graphics on the Pro i use are just awesome. The colors in the game are vibrant its defiantly the best fallout game in the 3d universe made so far. Worth it. Gun physics are better and the way eneimes react to gettin hit by each shot after a certain perk is got adds fantastic realism. Shooting living things never felt so satisfying.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "155037582", "uniq_id": "ebc5af7e-d2b2-5065-a71f-e74e79a04be0", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2957", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Topher42", "review_title": "Fallout 4", "review_description": "Loved it. It very fun and you have options to use mods and the fact that you can have a dov is awesome", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "143989046", "uniq_id": "66982a01-bc22-5f3c-a666-e8d3c1f9b82e", "scraped_at": "16/01/2022 16:19:05"}, {"index": "2969", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Ghostly Natsu", "review_title": "Misses The Mark", "review_description": "I more than anyone wanted to love this game so much. Having played Until Dawn religiously until I platinumed and then again every halloween season, to say I was excited for this was an understatement. However, all I received was genuinely bad acting, bad story, and bad story paths. The OP being O Death again but metal is pretty cool though.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "2", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "138111155", "uniq_id": "833b19df-42dd-5e70-aa12-57dcbd3b7aea", "scraped_at": "16/01/2022 16:19:05"}, {"index": "What that not what you want then don\u2019t buy it\"", "name": "yes: I recommend this product", "brand": "Verified Purchaser", "sku": "0", "reviewer_name": "0", "review_title": "3 years ago", "review_description": "4", "recommended_review": "4.4127", "verifed_purchaser": "487", "helpful_count": "120039974", "not_helpful_count": "e4695eb1-2321-5e1e-a470-1e92cca3e127", "reviewed_at": "16/01/2022 16:19:06", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2972", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "SirWaffle", "review_title": "Worked...for a bit", "review_description": "I bought the game around two and a half weeks ago, it worked well for a week and now just won't start up. The case they gave me came without a cover picture and only an ugly game stop one, so it was an eyesore in my shelf. But it's a good game, couldn't finish it though because, you know.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "2", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "120019774", "uniq_id": "baf2ea6e-191e-59bd-af8e-8476142d2da0", "scraped_at": "16/01/2022 16:19:06"}, {"index": "i'm using an avlt-dm42-1 monitor arm with no issues.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "gaming has already been more immersive and the refresh rate is great.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "tested with an gtx/rtx 2060/3060 video card", "name": " usb c-hdmi/displayport 1.4 cablemod cables", "brand": " upgraded version 1007.2 firmware", "sku": " with and without usb peripherals.", "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "2994", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Seriouswoman", "review_title": "Computer", "review_description": "[This review was collected as part of a promotion.] I love to watch movies and play games it's cool and fun to play with.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "27 days ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "213061370", "uniq_id": "728d1ed4-9c0e-5f96-90c0-49d12877ed08", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3018", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "onionbagel", "review_title": "Best handheld, & best poke'mon ever!!!!!!!!", "review_description": "this is the best handheld game ever. poke'mon always has been the best, but black and white take it to the next, and what i think is the final level. i love all the details. for example, (eyes closing when poke'mon is asleep, characters can move their arms, the gyms are awesome with anything from roller coasters to cannons to countless elevators. not to mention,........ ALL THE NEW POKE'MON!!!!!!!! a must have for poke'fans and nintendo worshippers.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17323731", "uniq_id": "113329fa-4094-505c-9bdc-0f660162f33e", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3021", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "Christian Casalduc", "review_title": "Dark Pictures:Man of Maden", "review_description": "It was an amazing experience had a lot of fun playing with my girlfriend the amount of choices and various different outcomes we can have while playing always keeps the gameplay fun and exciting we manage to discover something drastically new every time we re play the story!.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "137830492", "uniq_id": "192c63bb-4175-559f-a7c6-4bb4049b8fe6", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3031", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Carla  Bishop", "review_title": "I would recommend this game to anyone", "review_description": "It keeps my husband busy and I love watching him play it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "141854948", "uniq_id": "382465d1-a7b7-5fd2-8134-3481a2111c3d", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3032", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "superjake356", "review_title": "Fallout noob", "review_description": "First time getting into the franchise, i like it so far", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "141833508", "uniq_id": "fd9de99f-ee1f-511b-8677-2d9997081f83", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3037", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "JAHood", "review_title": "Fallout 4", "review_description": "Good story, very bloody, too much cussing for my taste, but overall very satisfying to play.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "141042890", "uniq_id": "82e62021-80c8-5975-8cf5-fa967b02df04", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3044", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Krissie126", "review_title": "Challenging yet fun!", "review_description": "Doom is challenging yet fun to play, I love that it's not to dark east to see demons before they kill you", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "117788308", "uniq_id": "0f93d81e-123c-595e-84f9-20d1cbfde6f8", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3046", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "S1ph3r", "review_title": "Doom on switch!?!?!", "review_description": "Yes, yes, yes! I'm a happy man. The new doom ultimate is coming on the switch as well!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "117197047", "uniq_id": "9c3ff326-5d88-5df7-a57e-a697a76ff3bf", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3054", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Elvidividi", "review_title": "Perfect  screen  for play my games", "review_description": "[This review was collected as part of a promotion.] Is a fantastic  screen  nice colors and very futuristic  experience", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "28 days ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "213042892", "uniq_id": "5a62ee66-ff25-59af-8412-18627501f54c", "scraped_at": "16/01/2022 16:19:06"}, {"index": "3060", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "rrr75252", "review_title": "Power up", "review_description": "[This review was collected as part of a promotion.] These batteries are great. I use them in my remote control and they power up just fine. I like that they have alkaline in them so it gives out a lot of power and does not use much energy yet are strong. I use my remote control all the time and have  not had any issue my remote is still running strong. I recommend these batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230921255", "uniq_id": "5d055681-89e3-5458-a1f2-2de1538d9822", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3072", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "pokemonguy", "review_title": "A New Era", "review_description": "After my first day on this game, I was hooked. My starter was Oshowatt and already has reached its final evolutionary stage. I got five badges already, and already caught Victini. If I had a piece of advice, battle everyone, strength is major in this epic new pokemon game. Also some trainers give you free items for you beating them. But type match-ups can be a struggle. So hear is something very useful. At the first gym, the leader will tell you you should have a pokemon that is good againt bad match-ups so he tells you to go train at a sertain place. Go there and find this one guy who gives you a free pokemon for an advantage at the gym. If you chose snivy, a water type, oshowatt with a fire type, and tepig gets you a grass type.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17321278", "uniq_id": "051780d8-5e17-5634-bd50-211bec5ec40b", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3076", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "assasin54", "review_title": "great!!!!!!!!!!!!!!!!!!!!!", "review_description": "I bought this game yesterday and it is aswome. New pokemon i never seen before, great starters love it i would recomend this game to all pokemon fans", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "17318156", "uniq_id": "5ff00208-8fdb-510d-b239-ee4153f56629", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3080", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "KamOFL", "review_title": "Horror", "review_description": "I've already played through twice. I love this game", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "136467208", "uniq_id": "9772b64a-73bb-5341-8100-d167bdbc82ec", "scraped_at": "16/01/2022 16:19:07"}, {"index": "No screenshots. Not a deal breaker", "name": " but a pretty stupid restriction. ", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3112", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Jose", "review_title": "I'm still in awe every time I turn it on!", "review_description": "[This review was collected as part of a promotion.] I love this monitor! I bought it for working from home and it's great being able to have email, work apps and a chat app all up on the same screen. While I'm not working I use it for gaming and the immersion in the game is awesome with all the real estate.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "28 days ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "213028357", "uniq_id": "efc8cc04-1307-5b82-86c1-c13a7331e77e", "scraped_at": "16/01/2022 16:19:07"}, {"index": "Beautiful panoramic veiw when using Excel spread sheets with multiple columns and row.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3115", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "TimeTavel04161961", "review_title": "Best view ever", "review_description": "[This review was collected as part of a promotion.] This amazing item works to my family satisfaction and will amazie your family as well Thank you Samsung!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "28 days ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "213022593", "uniq_id": "ed3dc70f-aef3-5751-9ac3-2d37451af61a", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3121", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Brookkynn610", "review_title": "Go to brand", "review_description": "[This review was collected as part of a promotion.] Energizer is my go to brand for batteries. They never let me down. Long lasting battery life for every day products. My automatic garbage can used D size batteries and they last months with multiple uses a day! Very impressed!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230907469", "uniq_id": "69543750-d48a-50f0-9141-1d76dc3f3c91", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3129", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Spinningfox", "review_title": "Really? I mean really?", "review_description": "Yes its another pokemon game. I get it, people still buy them so they are still selling them. Its the same thing the last 20 some games have been. I enjoyed pokemon for a while, I did. But they aren't even trying anymore. Have you seen the new pokemon designs? It's like they got them from Deviantart, actually that might have been an improvement. I gave it a good music review due to the fact those little tunes are catchy, I'll give it that. But honestly, they aren't even trying anymore. I suppose you would love this game if you're a die hard pokemon fan, and I suppose kids would as well as the series will still be new to them, but anyone who enjoyed the old games should know by now what to expect, a hundred hours of walking in grass to get the badges and beat your rival. Picture is a random pokemon from the game, tell me that's not just a Tauros with an afro. You know tauros, the pokemon from the first games?", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "17", "not_helpful_count": "125", "reviewed_at": "11 years ago", "rating": "2", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16526756", "uniq_id": "9c214d18-e3dc-59ee-a079-1a61ed07b0d3", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3132", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Riku134171", "review_title": "awsome", "review_description": "I can't wait this will be great just like every other one.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "5", "not_helpful_count": "6", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16480453", "uniq_id": "2ad0bcfe-67f6-5ad5-8bae-c4d630b920b5", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3136", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Wpowopo", "review_title": "It was ok", "review_description": "Look, I bought this game in Japanese, and it just was ok, I played it alot because i wanted to playthrough the game just for fun. The graphics were great and there wasn't alot of challenge to the game. I mean come on, I Caught the legendary on the box in a pokeball on my first try. this game was not hard but fun altogether. I liked the basics that it had in all of the other games but it's just all the same. I will do a speed run of the game when it comes out so i might put that up on my youtube page but i just don't think it's any different than any other pokemon game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "7", "not_helpful_count": "12", "reviewed_at": "11 years ago", "rating": "4", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16466841", "uniq_id": "9bd4b7ea-1988-5270-93c7-dbf32d544a56", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3159", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "kdarwin", "review_title": "Stellar game. Runs great on switch", "review_description": "I bought Doom a couple weeks ago.  So far, I love this game.  The graphics look great on switch.  Obviously not PS4 quality, but definitely better than ps3 quality.  The frame rate is really stable so far, and the game is just plain fun.  Love it!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "114322816", "uniq_id": "c2b13a21-b72b-56f8-a606-ac60b51e135b", "scraped_at": "16/01/2022 16:19:07"}, {"index": "3179", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "n7nickys7n", "review_title": "10 Year Shelf Life", "review_description": "[This review was collected as part of a promotion.] I've always found Energizer to be one of the most trustworthy battery brands. Not only do they have a long shelf life, but they seem to last a long time in my electronics. I immediately popped it in my large flashlight, and it worked perfectly. The 10 year battery life is incredible. The only change I would make would be to add an expiration date or a more obvious one on the packaging. Overall, I  like and trust these batteries. They work well and are great to keep for an emergency. I'd recommend them.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230884596", "uniq_id": "831b9a17-2b0f-5bac-9f87-edd6e30adfe2", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3183", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Ashrose", "review_title": "The best", "review_description": "[This review was collected as part of a promotion.] Energizer is my go to brand for battery needs they last a long time and give max performance. We go through alot of D's in particular for all the baby toys so these are great to have it's a brand I can rely on. These are currently in a baby swing and going strong!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230877850", "uniq_id": "f8859b7b-55ba-5f49-92f2-c1018eec0354", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3186", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "BlackKaren", "review_title": "Go the Mile", "review_description": "[This review was collected as part of a promotion.] The best battery when it comes to baby rockers, no contest. They devour batteries up and so far the only ones strong enough to fight for my peace and quiet are energizer max. I miss the energizer bunny but he was right. They go on and on and on.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230870159", "uniq_id": "d3958249-f968-5223-bec6-30c9451ce77f", "scraped_at": "16/01/2022 16:19:08"}, {"index": "All we tend to purchase energizer batteries. ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3193", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "dagugtggggggggg", "review_title": "Best Game Ever", "review_description": "This game is the best and I love it overall this game has the best poke'mon ever it is a big hit.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "2", "not_helpful_count": "2", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16421797", "uniq_id": "c4c8643a-0050-5f80-b7bc-0c3a217abbed", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3209", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "RyanPyrope", "review_title": "Pretty Good Game. Would Buy Again.", "review_description": "The game is very interesting and paced pretty well. The animations and jumps between gameplay and cutscene are a little rough, but it's a good game. Excited for the rest of the anthology.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "136020015", "uniq_id": "e271499c-c2ac-5ada-bebd-4e0c61ca26bd", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3218", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Brittcwood89", "review_title": "Has awesome features great picture", "review_description": "[This review was collected as part of a promotion.] I watch alot of movies ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3222", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "jstancil", "review_title": "10-Nov", "review_description": "Classic. So much content and so little time to do it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "136941650", "uniq_id": "1b9e44f2-358a-5c25-a3b8-2e2854d2975a", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3243", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "George2319", "review_title": "Thank you! Bethesda, ID, all companies involved", "review_description": "Amazing port very well done. I have this game on pc and it feels better to be honest. Most likely because i can take it to work. I can number 2 and play. I also played today while waiting on my significant other to grocery shop ahhhhhhh", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "10", "not_helpful_count": "2", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "109336267", "uniq_id": "4cd54d77-7ff3-5764-accc-1fdcddecd4c5", "scraped_at": "16/01/2022 16:19:08"}, {"index": "3245", "name": "DOOM - Nintendo Switch", "brand": "Bethesda Softworks", "sku": "158596", "reviewer_name": "Jevans84", "review_title": "Fun fast pace", "review_description": "Tons of fun, great fun. I was a little nervous after reading about some of the technical compromises that had to be made to bring this to the switch. But after playing it for countless hours i am very impressed. Graphics are nice game plays smooth. I have had one sound drop but it wasn\u2019t bad ( kinda like someone turned my tv down a little) but the problem fixed it self. Great add to the switch", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "14", "not_helpful_count": "0", "reviewed_at": "4 years ago", "rating": "4", "average_rating": "4.4127", "reviews_count": "487", "comment_id": "108067933", "uniq_id": "3887fe9d-281f-5fe8-b207-f29a8ee3eee8", "scraped_at": "16/01/2022 16:19:08"}, {"index": "* this massive monitor turns heads at the office", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "* really big", "name": " you need a sturdy desk or the monitor will shake when you type / move your mouse / sneeze", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "* some apps (slack) don't let you share only part of the screen\"", "name": "yes: I recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "5", "recommended_review": "4.5319", "verifed_purchaser": "643", "helpful_count": "212939037", "not_helpful_count": "7197c89c-301f-53f3-9aa6-bd18bc641286", "reviewed_at": "16/01/2022 16:19:09", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3275", "name": "Funko POP! WWE: Stone Cold Steve Austin with Belt Metallic 3.75-in Vinyl Figure", "brand": "Funko", "sku": "221988", "reviewer_name": "Javier07", "review_title": "Stone Cold Say so in five stars", "review_description": "Oh Heck Yeah!!! My favorite wrestler in WWE in Attitude Era and now officially as funko pop.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "9 months ago", "rating": "5", "average_rating": "4.95", "reviews_count": "20", "comment_id": "178259597", "uniq_id": "b2438a1a-ff8e-5b8c-a262-46fdb5d95123", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3282", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Michelle Bornstein", "review_title": "Fall out 4", "review_description": "My husband can\u2019t stop playing this game . He has not given me a chance to play yet. When I finally get a chance to play I am sure I will enjoy it as much as he does", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "131286967", "uniq_id": "0193c322-8e94-58ee-b1f4-6cc4f96d4194", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3299", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "mskitty", "review_title": "Powerful", "review_description": "[This review was collected as part of a promotion.] We go through batteries in our home like water. I have the Energizer Max D-2 pack and boy did I need them. We keep flashlights in every bedroom plus under the sink for emergencies. During a recent storm, my flashlight died and of course no spare batteries for it. Hence, the Energizer D size are now in my flashlight. Powerful bright light and they have a 10 yr. shelf life. Energizer is the ONLY brand we use so having a durable, strong, long lasting battery is a necessity. Thank you Energizer, the name alone means quality products. Will be stocking up on more of all sizes!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230843356", "uniq_id": "ad4d17bd-ac23-5658-8f92-77fb31b6172a", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3301", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Shelby19", "review_title": "One of our favorites!", "review_description": "\"[This review was collected as part of a promotion.] These are by far our favorite batteries.  The durability and \"\"lastability\"\" is incredible.  Wonderful product.  We used these in our large flashlight and they were great.  The light appeared to be much brighter than with the other batteries we've used.\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "8 months ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "230839434", "uniq_id": "0af386d1-47a6-502c-883b-fd890155bb51", "scraped_at": "16/01/2022 16:19:09"}, {"index": "The Energizer Max batteries in D are fabulous.  I\u2019m using these in our flashlight and they\u2019re lighting up the night!  ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "Simple to install and much brighter than the ones we had in previously.  ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "The Max definitely last longer and save money.  They\u2019re brighter and you can really tell the difference.  When it comes to brand names", "name": " buying Energizer batteries is truly worth every penny.  ", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3309", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "empoleon19", "review_title": "pokemon is awesome", "review_description": "i cant wait to get it im so excited yayyyyyy POKEMON!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "8", "not_helpful_count": "5", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16250779", "uniq_id": "15262f26-11dd-51f3-83a8-ceda812f3b90", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3324", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Michelle", "review_title": "This product has great features", "review_description": "[This review was collected as part of a promotion.] For gaming and streaming", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "The colors really lly bring out your visual eye candy! Also the RGB light on the back makes a cool background light for sgowing off. I was so impressed I bought 2 haha! I love Samsung products I feel their innovative products are the future!\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "5", "recommended_review": "4.5319", "verifed_purchaser": "643", "helpful_count": "212877067", "not_helpful_count": "db951573-0bdc-5346-9eae-c881f8bd1fb5", "reviewed_at": "16/01/2022 16:19:09", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3328", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Craigc5937", "review_title": "A must have", "review_description": "Just amazing, You will not regret getting this game, even if your new to the series, a must play!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "131000452", "uniq_id": "705665da-752a-58f7-9bbb-c713fd64acda", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3330", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Shane T", "review_title": "Fallout 4", "review_description": "I got this a while after it came out but is still a great game", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "130640591", "uniq_id": "d82258af-55e3-5a1e-b6d3-eb0d2acf19cd", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3345", "name": "Dark Pictures: Man of Medan - PlayStation 4", "brand": "Bandai", "sku": "185685", "reviewer_name": "mbphotogamer96", "review_title": "Horror Game", "review_description": "I really enjoyed this game and I would recommend this to anyone who loves horror!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.1324", "reviews_count": "476", "comment_id": "134928220", "uniq_id": "044ccb13-1188-57e9-a1f9-78d098a1cbbd", "scraped_at": "16/01/2022 16:19:09"}, {"index": "3359", "name": "Spirit of the North - PlayStation 5", "brand": "Merge Games", "sku": "232541", "reviewer_name": "jose7000", "review_title": "Fun To Travel", "review_description": "This Game Is Very Fun And Very Challenging Going From Place To Place And Reaching The Destinations.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "10 months ago", "rating": "5", "average_rating": "2.8", "reviews_count": "5", "comment_id": "175329491", "uniq_id": "b5679058-98f0-5895-b1b5-82ef9410a441", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3360", "name": "Pokemon Black - Nintendo DS", "brand": "Nintendo", "sku": "920599", "reviewer_name": "Fangs", "review_title": "Pokemon Black and White", "review_description": "These Pokemon games look really sweet. If you like the Pokemon franchise then you should get it. These games are really different from the previous ones yet they are the same. These games are those games that never get old. The new pokemon look awesome, and new features that have never been seen in previous games. Also if you choose Pokemon White you don't get to see Black City, you get to see the White Forest and if you choose Pokemon Black you don't get to see White Forest, but you get to see Black City. So you got to choose which one you want to see White Forest or Black City. Also the 4 stations are present; Winter, Autumn, Summer and Fall each one appearing in different months, a new one every month throughout the year, every station lasts one month and comes back on another month. And Pokemon are available depending on the station, unaccesible areas depending on the station as well. These are some of the features the games come with. I hope this is helpful to you all.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "9", "not_helpful_count": "1", "reviewed_at": "11 years ago", "rating": "5", "average_rating": "4.4195", "reviews_count": "553", "comment_id": "16158342", "uniq_id": "7583e094-3bf3-5577-a275-054968ad0480", "scraped_at": "16/01/2022 16:19:10"}, {"index": "3376", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Lolcatz23", "review_title": "Awesome for productivity", "review_description": "[This review was collected as part of a promotion.] I use two monitors in addition to my Samsung CRG9 which is my main. I mainly use for games, and it's amazing, but not a real advantage to first person shooter games. It's more for the emmersive effect and it's great! With the high refresh rate, it makes games feel great such as call of duty, overwatch, etc. ", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3392", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Madie", "review_title": "Awesome", "review_description": "[This review was collected as part of a promotion.] These batteries are reliable. They have a long shelf life and dependable. I put them in my flashlight three months ago and they are CB still going strong and I get the brightest light. I have had no problems with leakage either.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "223899184", "uniq_id": "758b2ec3-76cc-5f08-ae91-51649bcae97f", "scraped_at": "16/01/2022 16:19:10"}, {"index": "Button layout actually helps for fighting games imo. ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3417", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Skimonitor", "review_title": "Samsung rocks the monitor world", "review_description": "[This review was collected as part of a promotion.] Streaming and internet", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "there should be additional hard buttons or quick settings to switch between display mode presets.  currently", "name": " you have to manually change the brightness/contrast/etc.  want to use your computer in low light", "brand": " enjoy navigating various menus to get to the correct adjustment setting.", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "for a gaming monitor", "name": " this has very poor functionality.", "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3421", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Saucee", "review_title": "AWESOME", "review_description": "[This review was collected as part of a promotion.] This monitor is very much so recommended, the visuals are clear and the pictures are sharp", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212848122", "uniq_id": "ee21de09-a9f5-58f0-857d-c94c7b5fcdd1", "scraped_at": "16/01/2022 16:19:11"}, {"index": "I bout two of these one for my friend's wedding gift and the other one for myself after seeing how happy my friend was with the monitor.", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3454", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Halo Tutor", "review_title": "flashback to OG", "review_description": "Even though I intentionally bought this as a collectors item, I had to use it acouple times to feel the nostalgia of original Xbox days?", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "129205644", "uniq_id": "d12b76b1-cc8d-57da-8a98-d61944ab032e", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3457", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Slimdtylz", "review_title": "TBT 360", "review_description": "Awesome.feel. cant stoo using it over my wireless.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "127411070", "uniq_id": "5e29d020-2e16-5ea9-bba8-948d1d14dbb0", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3458", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "The iffyiest", "review_title": "An awesome reproduction.", "review_description": "The only thing they could improve is add wireless version. This is a almost perfect reproduction as the original duke. They really nailed the feel and how on some games it does take a while to get used to. The addition of the right and left bumpers actually helps out a lot. I kinda wish microsoft would let them use the wireless for this.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "127163171", "uniq_id": "a8fd9d26-e690-50c3-88e5-d4860b4aa417", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3460", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "VaderNick84", "review_title": "Look and feel is great, design is flawed", "review_description": "Absolutely love the look and feel of this controller, do NOT like the cord being detachable and with it being plugged in my headset causes a buzzing feedback for any friends in my party.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "2", "reviewed_at": "2 years ago", "rating": "3", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "126532670", "uniq_id": "3664b3ff-ae7f-575e-bbe4-0439edfc9fc8", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3469", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Rocko", "review_title": "Great", "review_description": "[This review was collected as part of a promotion.] It was great and I would recommend this product to anyone", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212828479", "uniq_id": "607abf52-33ac-5b6b-947c-57f7e1da2f19", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3487", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "kris2239", "review_title": "Best Batteries!", "review_description": "[This review was collected as part of a promotion.] These are the best batteries I have ever used in my life.  They are so strong and durable.  They last for a long period of time and do not fail.  Compared to other batteries the Energizer Max Alkaline batteries are the best on the market.  If you have electronic, toys, etc.that require heavy duty power, then these are the batteries for you.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222883065", "uniq_id": "274be571-ffad-56c1-9c68-43808b79e08b", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3496", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "i36christo", "review_title": "Fallout 4", "review_description": "I love Fallout 4 and have the season pass which is awesome. Great deal for after my pro points 4.59 cash.cant beat that....", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "126627257", "uniq_id": "a4b1b441-8d0c-596d-834f-c9fcf6d797ab", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3510", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "kyle565635", "review_title": "retro flavor", "review_description": "if they had a black colored that would be even better.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "122699674", "uniq_id": "4a456ecc-a7c3-5a66-9b10-98ec991a022c", "scraped_at": "16/01/2022 16:19:11"}, {"index": "3512", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Wambo", "review_title": "Great Throwback", "review_description": "It feels and plays just like an original one, and the lcd start up screen is awsome.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3531", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "EthanD", "review_title": "Amazing product", "review_description": "[This review was collected as part of a promotion.] I love how wide this monitor is, I also love how it fits your field of view more than a traditional monitor because of the curve, its aesthetic is also amazing, looks really good.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212791209", "uniq_id": "19e16e08-7c47-5c93-a914-53b2645f0cf2", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3541", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Dice Crawley", "review_title": "Get this game if you're a fan of Fallout", "review_description": "Excellent game but too many glitches to give it a 5 star rating", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "125659722", "uniq_id": "b9e6cc4e-8d50-5ae4-8a79-0ef8746c8557", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3542", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "TP21", "review_title": "Great game", "review_description": "Fun shooter with so much to do that the main missions become secondary", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "125553460", "uniq_id": "e64a701d-7636-5c18-bdaa-c41c117db96e", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3544", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Asaji", "review_title": "Crawl out throught the fallout, baby!", "review_description": "\"I love the Fallout series and the fourth one in the franchise lives up to my expectations. My only complaint is I would like a bit more variety in the music on Diamond City radio, or at least stop playing \"\"Butcher Pete\"\" so often.\"", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "125480966", "uniq_id": "b4f69991-098c-5a7b-b8a5-1479a103daae", "scraped_at": "16/01/2022 16:19:12"}, {"index": "3546", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Nadhsw1", "review_title": "Long lasting", "review_description": "[This review was collected as part of a promotion.] I am trying the energizer max alkaline D batteries in my flashlight the package says long lasting, I guess time will tell, can't say too much right now because I have only been using them for a short period so hopefully they will last longer than the regular batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222819466", "uniq_id": "3e2286ba-35d7-55ad-a1aa-c8211ebfe413", "scraped_at": "16/01/2022 16:19:13"}, {"index": "Our experience has shown they retain power and don't leak after extended storage periods. Competitively priced too if you shop right.\"", "name": "yes: I recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 year ago", "review_description": "4", "recommended_review": "4.9175", "verifed_purchaser": "424", "helpful_count": "222755992", "not_helpful_count": "742f0443-c7fb-5c7c-8bb4-bd0e67f5211b", "reviewed_at": "16/01/2022 16:19:13", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3575", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "hmoe", "review_title": "tgreat controller", "review_description": "great the only thing I would have changed was made it wireless. Other then that I love it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "118331166", "uniq_id": "021a318b-0ac8-5ab4-b6d6-631fe0b6efbd", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3576", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "Kittenrage", "review_title": "Just like my childhood", "review_description": "Got big hands? Or just in love with nostalgia, this controller is the one for you!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "118316077", "uniq_id": "25391879-ace9-56b0-9bdf-750e6afd6b52", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3588", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Tony517", "review_title": "Dependable Battery", "review_description": "[This review was collected as part of a promotion.] Energizer is my brand of choice when it comes to batteries. The Energizer MAX D cell batteries always work. They provide a long lasting amount of electricity so that I get multiple uses out of them, even when our star gazing every night.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222741156", "uniq_id": "088071c5-9827-59e9-935d-e200ffb94a9e", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3592", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Nete R", "review_title": "Works great", "review_description": "[This review was collected as part of a promotion.] I use these in a fountain in my home. They have been long lasting and keep my fountain chugging along. There has not been any leakage from the batteries which I\u2019m incredibly thankful for because I have had so many items ruined by faulty batteries. Thanks Energizer!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222704370", "uniq_id": "340c101f-143e-5824-99be-f2762c2dcda0", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3614", "name": "Hyperkin Duke Wired Controller for Xbox One Green GameStop Exclusive", "brand": "Hyperkin", "sku": "175318", "reviewer_name": "TestudoENumen", "review_title": "Blast from the Past", "review_description": "I looooove this controller. Granted, I might be biased, as this is my favorite controller of all time. This recreation is so great. I especially love that the black and white buttons are still here, and they are extra buttons for functions.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.2828", "reviews_count": "99", "comment_id": "117848281", "uniq_id": "35cd04d5-d837-57ac-878e-c3fc38ea2963", "scraped_at": "16/01/2022 16:19:13"}, {"index": "3617", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Lokie1911", "review_title": "Fallout4 fun game", "review_description": "This is a great game except for all the loading screens and bad fps at times (ps4). I would recommend the game to anybody", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "124246093", "uniq_id": "9bcebc11-44fe-553f-995d-f28f5df3e88c", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3628", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Peachy20", "review_title": "Energizer max d cell", "review_description": "[This review was collected as part of a promotion.] I'm so glad I picked this up we had a storm come through and my flashlight battery was dead so I put these in and 4 hours after leaving on the light it still was as strong as I opened up put in and my kids had gotten ahold and played with my light for awhile and still held the strength I have found my go to battery thank you for developing the battery", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222681035", "uniq_id": "c47e71da-5323-5e94-aba1-3f62a23cb286", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3629", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Lthrpanda", "review_title": "Great batteries", "review_description": "[This review was collected as part of a promotion.] Energizer batteries are our family\u2019s choice battery and they seem to last longer than most other batteries out there.  The silver color is easy to find in the junk drawer and their performance is unmatched.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222679303", "uniq_id": "4a4eb4a0-3e0f-5a6f-9b5f-a416f00af993", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3637", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Trev", "review_title": "This product has great picture for gaming.", "review_description": "[This review was collected as part of a promotion.] I use it for gaming it'sime I'm in the game. I also use it for movies.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212705373", "uniq_id": "d7a08ddb-687c-5d4c-8399-af7ffaad4e85", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3641", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "RRPR", "review_title": "Awesome quality", "review_description": "[This review was collected as part of a promotion.] Thrilled using the monitor a d outstanding quality", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212689092", "uniq_id": "4afc964f-e371-51c2-beeb-0f6d9f80b7f9", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3643", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "DuckyXD165", "review_title": "This has good graphics and good refresh rates", "review_description": "[This review was collected as part of a promotion.] It works good for gaming because you fell like your in the game I don't really see a use for it at work because a flat would be the same for work but for gaming I would definitely use it.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212688214", "uniq_id": "6229b4cd-fcfb-5377-86cb-1e7e1b684a2b", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3649", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Stankledank", "review_title": "Very fun game", "review_description": "Bought this last month with all the dlcs and it's really fun, the mod community on ps4 helped my game experience too, very fun", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "123680103", "uniq_id": "b9201042-22ea-58a3-8d4b-999a499e02be", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3657", "name": "Borderlands 2", "brand": "2K Games", "sku": "522380", "reviewer_name": "RavensRoost", "review_title": "GARBAGE!", "review_description": "Gearbox removed LAN feature without even a logical reason. This game used to be amazing, but now it's garbage.  Will not change review until they add LAN back. No logical reason for removing it.  And before anyone comments about playing online, bad internet where I live, and me and my friends used to play LAN, now it just sits uninstalled in my steam library.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "4", "reviewed_at": "2 years ago", "rating": "1", "average_rating": "4.1875", "reviews_count": "16", "comment_id": "128020290", "uniq_id": "a665bcc9-6b18-549b-b8fb-785be7218812", "scraped_at": "16/01/2022 16:19:14"}, {"index": "3667", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "TLopez", "review_title": "Everlasting", "review_description": "[This review was collected as part of a promotion.] I received the ENERGIZER MAX ALKALINE D BATTERIES 2 PACK in exchange for my review I received them just on time to put them in my granddaughters new bubble machine the batteries that we were using in it only worked a short time.I installed the Energizer batteries into the bubble machine and it worked for a very long time nonstop.Today we turned the machine on and the power is as strong as the day we first started using the Energizer batteries.I love the fact that I will not have to replace the batteries cause they seem to last a lot longer time. Goes to show the Energizer bunny commercial is true they keep going and going . Thank you for the opportunity to give my feedback on this product I will be purchasing it in the near future in place of my regular brand.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222666390", "uniq_id": "d5e74857-23db-5f6d-865c-76c6cf0472f3", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3679", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Joker", "review_title": "Best gaming monitor ever", "review_description": "[This review was collected as part of a promotion.] This is the best monitor I have ever used running 240hz 1sec response  the max settings run flawlessly with my fully loaded alienware  r11 and rtx3080 video card", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212673592", "uniq_id": "d6e56546-c222-536b-a844-d08a49c22899", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3683", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Relliknam", "review_title": "Love it cant live without it", "review_description": "[This review was collected as part of a promotion.] With my gaming system it one of those necessary things to have. Color and the curve draws you into games. So in conclusion keep putting out products like this and ill keep buying", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212671817", "uniq_id": "f1da1bae-9bae-5fd7-ade4-74860e964312", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3685", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "DVS1777", "review_title": "Nice", "review_description": "[This review was collected as part of a promotion.] Gaming watching the news and I want too are if the galaxy can compete", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212666301", "uniq_id": "79c172a1-13a7-5036-8754-ed280dbfc052", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3712", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Sonni", "review_title": "Great product", "review_description": "[This review was collected as part of a promotion.] I was worried in the beginning but it turns out to be a great monitor.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212663925", "uniq_id": "343895d8-69ed-588c-9c50-e7a5c0d373fb", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3714", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "JombaLuv", "review_title": "Best monitor of all", "review_description": "[This review was collected as part of a promotion.] I use the monitor stream movies, display for my virtual workstations. The picture quality is crystal clear.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212661977", "uniq_id": "67cc302c-b540-5fa7-a2e8-b3b4427705b9", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3722", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Tmoney6787", "review_title": "Mehhh", "review_description": "I hated it... My teen soon lives it!! Oh... I do appreciate antiquity look such as 90 degree pieces of pipe and old time clocks and gadgets. He has never seen these types of things because they've been replaced on everything that serve ever been on nowadays. other than that I didn't like the first one and I never went back for more but he's been through everyone and he swears by them different strokes I guess..", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "3", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "122741605", "uniq_id": "d0cef700-0c12-5f33-824d-4501b93a9187", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3724", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "GameFiend76", "review_title": "Skyrim with guns!", "review_description": "Great purchase. Reminds me of Skyrim, fun to create weapons and build a settlement. Good story, being able to play in over the shoulder 3rd person is fun too, though the movement is a little slow.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "122694939", "uniq_id": "cbeec093-efa3-54da-8dce-e1c85851fbde", "scraped_at": "16/01/2022 16:19:15"}, {"index": "3732", "name": "Leisure Suit Larry: Reloaded", "brand": "Replay Games", "sku": "525589", "reviewer_name": "tomgene76", "review_title": "Reloaded and Then Some!", "review_description": "Not just a remake but with new twists and characters. That game you still remember with updated graphics and sound. Definitely glad I bought this!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "4", "not_helpful_count": "0", "reviewed_at": "2 years ago", "rating": "5", "average_rating": "5", "reviews_count": "4", "comment_id": "132424218", "uniq_id": "867ca0f5-5bf1-51af-bc57-9a79335fc358", "scraped_at": "16/01/2022 16:19:16"}, {"index": "3740", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Joseph67", "review_title": "Powerful resource", "review_description": "[This review was collected as part of a promotion.] After reciving my Energizer MAX Alkaline D  Batteries they have preformed like a champ in my flashlight giving the the extra power I need when volunteering for my comunity as a emergency responder", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3743", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Krsna", "review_title": "I enjoy playing call of duty on this monitor", "review_description": "[This review was collected as part of a promotion.] For playing and streaming video games. Watching movies", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212648161", "uniq_id": "acd53376-c1c6-5868-b35a-28766b67aec0", "scraped_at": "16/01/2022 16:19:16"}, {"index": "3744", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Drad", "review_title": ".great monitor", "review_description": "[This review was collected as part of a promotion.] Monitor works perfectly, very large with excellent picture. The colors are great and gaming is easy on this monitor.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212640095", "uniq_id": "6b7a0323-b9a9-54cc-b6c0-64cb3915f471", "scraped_at": "16/01/2022 16:19:16"}, {"index": "3745", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "PD1977", "review_title": "Good", "review_description": "[This review was collected as part of a promotion.] Good monitor for gaming. Good monitor for gaming. Good monitor for gaming.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212639584", "uniq_id": "2f6d8aac-7994-57e5-8b06-d40a0dab20a7", "scraped_at": "16/01/2022 16:19:16"}, {"index": "3765", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Kiki23", "review_title": "Great", "review_description": "[This review was collected as part of a promotion.] I am a huge fan of energizer batteries. These batteries are great quality and long lasting. We typically use quite a bit of batteries for the kids toys. Luckily we haven't had to change them even with a ton of use.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "222635500", "uniq_id": "f7a9c59c-f4e9-5d71-91e5-9f4127cdd225", "scraped_at": "16/01/2022 16:19:16"}, {"index": "It is also a great monitor for having multiple pages open. I can have 4 pages of notes open simultaneously with no problem. I did have to adjust the font size for this type of operation", "name": " but once adjusted", "brand": " everything is great.", "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3815", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "johncho", "review_title": "best monitor", "review_description": "[This review was collected as part of a promotion.] As a casual gamer I don't see the benefits of higher refresh rate monitors or ultra high contrast or all that jazz, I just look for a decent experience at a reasonable price and this delivers", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212584166", "uniq_id": "b84d3e63-b603-54a1-b350-8fa1e52ca4f2", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3820", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Al3x", "review_title": "Gaming monitor review", "review_description": "[This review was collected as part of a promotion.] Perfect for gaming ultra wide display. I personally use it for racing simulators.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212570158", "uniq_id": "2dc8dea5-796f-5421-a664-5456a4fd7821", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3828", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Willzane", "review_title": "Great game", "review_description": "I've played Fallout 4 when it first came out and beat the game several times and several ways. After some time I bought it again and once again play it nonstop.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "118594719", "uniq_id": "5ed36795-5597-5a99-aa05-d6352a43d65a", "scraped_at": "16/01/2022 16:19:17"}, {"index": "3832", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "mattbaum", "review_title": "Works great", "review_description": "[This review was collected as part of a promotion.] I received this product about a week ago and I have not had any issues with it. I cannot say how long the batteries will last but I know they will have a long lifespan based on the brand. I did notice a difference in the fan that I put them in because it blew air faster. The motor was able to work better compared to other d batteries. I can tell they are high quality batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "221985853", "uniq_id": "8b401597-00f1-5c14-8031-9c4a8b8a0ac0", "scraped_at": "16/01/2022 16:19:17"}, {"index": "Very nice shape and the curving way.\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "5", "recommended_review": "4.5319", "verifed_purchaser": "643", "helpful_count": "212567716", "not_helpful_count": "6fcfe253-60dc-570b-b78c-9d2cc72c50ba", "reviewed_at": "16/01/2022 16:19:17", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3843", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "KEBB1999", "review_title": "Amazing features & great entire family.", "review_description": "[This review was collected as part of a promotion.] This product has amazing features and is very easy to maneuver around, especially when your a newby such as myself on the smart things these days.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "I love that I can get daily use from this product  such as Work", "name": " Home usage for bills and can't leave out the kids gaming too...Definitely a product worth purchasing.\"", "brand": "No: I don\u2019t recommend this product", "sku": null, "reviewer_name": "0", "review_title": "0", "review_description": "1 month ago", "recommended_review": "5", "verifed_purchaser": "4.5319", "helpful_count": "643", "not_helpful_count": "212560310", "reviewed_at": "9511121d-364e-5913-9c60-2c6240551203", "rating": "16/01/2022 16:19:17", "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3845", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Toya22980", "review_title": "Dope and fire n awesome.", "review_description": "[This review was collected as part of a promotion.] Home and do my own fun gamer hook up any game hook.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212556431", "uniq_id": "04c04e94-ba6c-55eb-a9bf-09c89657e950", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3848", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "diazserg74", "review_title": "Crg9 dualqhd curved monitor", "review_description": "[This review was collected as part of a promotion.] I use my mo itor for streaming photos gaming and movies sound quality is superb just the perfect amount of bass and treble one of  the best buys I've made when it comes to monitors I blue tooth my ring security system with monitor and avoid all the messy wires virtually wireless and color is amazing", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212546408", "uniq_id": "1fceab85-71ff-5145-9b46-3896762131ff", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3865", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Bricks", "review_title": "Dependable and Long Lasting Life", "review_description": "[This review was collected as part of a promotion.] I always use the Energizer Max Alkaline D batteries in my various trail cameras surrounding our property. The really do last a long time considering how often the cameras are set off by the deer, fox and other wild life that enjoy visiting us. Energizer makes batteries with extended life time. This last batch has a life time of ten years. Because of the extended life, I don't need to keep changing the batteries.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "221803421", "uniq_id": "3e7148e3-0536-586c-ae17-ee5e839907c0", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3878", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "John", "review_title": "Decent Monitor, issues at risk", "review_description": "[This review was collected as part of a promotion.] Noticed when I was trying to go through thinking about this monitor, I tried it at a friends place first, which has had several issues with the 95 model. The 97 model seems to be a better unit, but definitely seems to retain some of the issues over time.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "3", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212529497", "uniq_id": "090b4ca6-ce87-5230-8676-3dbcff54e984", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3880", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "slimshardy69", "review_title": "this product is clean annd really nice", "review_description": "[This review was collected as part of a promotion.] i use mine for my computor and it is by far the cleanest most crisp clear screen ive ever seen.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212523444", "uniq_id": "9c7835ae-0b3b-5de1-b106-6c5b95ed0e2b", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3882", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Hottie22", "review_title": "Great product", "review_description": "[This review was collected as part of a promotion.] Fast efficient, clearview", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "My son enjoyed playing on thus console\"", "name": "No: I don\u2019t recommend this product", "brand": null, "sku": "0", "reviewer_name": "0", "review_title": "1 month ago", "review_description": "4", "recommended_review": "4.5319", "verifed_purchaser": "643", "helpful_count": "212521713", "not_helpful_count": "c3d6cfde-c525-5ba6-a7f9-a2935e364985", "reviewed_at": "16/01/2022 16:19:18", "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "3891", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Mol1119", "review_title": "Great overall", "review_description": "The Fallout series is one that takes you into a world of a post-nuclear apocolypse where you fught to stay alive in an unfprgiving world. Every choice you make determines do many factors in the game. You can be good or evil. You can have companions that you can romance; each with their own well written tragic backstory(my personal favorite being hancock and Nick Valentine).In fallout 4 you are pre war and you fight to find your missing son, stole from you while you were unable to do anything.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117842732", "uniq_id": "9b184fe5-bbec-5a36-a696-db57957f9fe3", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3893", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Falloutfan76", "review_title": "AMAZINGGGG", "review_description": "i got this game like 3 weeks ago and it is the best game ever", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "1", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117228395", "uniq_id": "77ab9bd1-01d6-5d4f-b634-bd183bddf49a", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3902", "name": "PlayStation X Like It's 94 T-Shirt", "brand": "Geeknet", "sku": "211057", "reviewer_name": "Jay72482", "review_title": "Party like the first PS console drop...", "review_description": "I don't know who makes these shirts but there all super comfy...", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "7 months ago", "rating": "5", "average_rating": "4.614", "reviews_count": "57", "comment_id": "181513157", "uniq_id": "d1288e71-8767-512c-9914-e071dad5833a", "scraped_at": "16/01/2022 16:19:18"}, {"index": "3917", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "GameLover", "review_title": "Amazing display!", "review_description": "[This review was collected as part of a promotion.] I use this monitor for gaming and surfing the web. Works freak with Xbox game pass. The video is amazing and the size is impressive.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212515892", "uniq_id": "44f4b194-5894-55d6-87a5-d9a401a0bbd7", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3928", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Tjmuzmuz", "review_title": "Didn\u2019t like it at first but now love it", "review_description": "Tried this a while back and didn\u2019t like it but came back to it and then loved it", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "117196855", "uniq_id": "501fdc7a-2cb8-54b4-8d8f-18a5a5ec6cac", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3943", "name": "Funko POP! Games: Halo Infinite Master Chief", "brand": "Funko", "sku": "216351", "reviewer_name": "Elstrix", "review_title": "Looks really good", "review_description": "I pre-order it and it arrived with no problems", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "3", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.4096", "reviews_count": "83", "comment_id": "165430314", "uniq_id": "93299cbf-3116-52b4-bb3d-a75579421981", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3946", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Gritter", "review_title": "Good computer", "review_description": "[This review was collected as part of a promotion.] One of the best computers on the market. Great for gaming", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212506357", "uniq_id": "6ccc9cde-827b-5103-8254-055136381dc9", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3948", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "BabiLuv", "review_title": "This product is the best I have used!!", "review_description": "[This review was collected as part of a promotion.] I use my monitor for everything from work all the way to a movie when ready to relax this monitor has me satisfied to the max!!", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212497228", "uniq_id": "c6ded1b8-c27e-59c8-9dc9-9f5365912ab4", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3957", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Ashley0387", "review_title": null, "review_description": "I haven\u2019t played video games in years. I bought this game after friends recommended it. I love it! Can\u2019t wait to get fallout 76!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "116715917", "uniq_id": "a2674e58-a6f8-5636-8494-ccb3702cbddd", "scraped_at": "16/01/2022 16:19:19"}, {"index": "3971", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "CassMN", "review_title": "Great batteries", "review_description": "[This review was collected as part of a promotion.] Energized MAX D size batteries are impressive with the 10 year shelf life. Used them in a flash light and they worked perfect. Great illumination, making the light shine real strong. I've already told others about these!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217874182", "uniq_id": "88d4e858-5fea-585c-9ea8-f53051ed3566", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3975", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "dropete89", "review_title": "Big open world and plenty to do. Never gets boring", "review_description": "I have purchased this game multiple times and love it.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "115657223", "uniq_id": "f80550da-bf87-508b-b465-8b13cc93fd4f", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3984", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "OliviaM19", "review_title": "Long Lasting", "review_description": "[This review was collected as part of a promotion.] Long lasting batteries for my child\u2019s swing. He uses this swing most days when I bring him to work with me. My other batteries used to run out within four or five uses. These are still going strong! Would recommend.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217869701", "uniq_id": "f3ba9ce0-0d8a-57da-806b-a76ab6626865", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3987", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "CARLOS33", "review_title": "AMAZING", "review_description": "[This review was collected as part of a promotion.] These batteries did a amazing job.  I love how well these worked and how well they work in my flash lights and in my remote controlled.  I like how these batteries provided me with bright lights and consistent output when they are in my flashlight.  I love how they are still working in my remote control and in my flashlight.  These batteries our amazing.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217857738", "uniq_id": "7db394d8-a207-5366-8144-708cf527d005", "scraped_at": "16/01/2022 16:19:20"}, {"index": "3993", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "dpjp2020", "review_title": "Long Lasting", "review_description": "[This review was collected as part of a promotion.] I am someone who really gets annoyed when I constantly have to replace the batteries in my stuff such as my led candles, clocks and tv remotes. So I decided to try these batteries and I am so glad that I did because they truly do last a long time. I wanted to compare them with my other ones so I put a different battery in each of my candles at the same time. I am honestly shocked that I have now had to replace my candle twice with the other battery but this one is still going strong. I would definitely recommend these batteries to anyone who is looking for a trusted brand and a long lasting battery.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217831843", "uniq_id": "5533ae0c-dffd-5445-974a-ce7a0084ab0a", "scraped_at": "16/01/2022 16:19:20"}, {"index": "4009", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Joeym1400", "review_title": null, "review_description": "I bought this game a long time ago but a couple of months ago it was stolen and I was very excited to have a nother copy", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "115346117", "uniq_id": "ed9194ef-464b-541b-b379-e7e0076d3278", "scraped_at": "16/01/2022 16:19:20"}, {"index": "4026", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Ajay", "review_title": "Great", "review_description": "[This review was collected as part of a promotion.] I use it for gaming", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "I love all the features it has ", "name": null, "brand": null, "sku": null, "reviewer_name": null, "review_title": null, "review_description": null, "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "4039", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "HomelessUnderABridge", "review_title": "Best game ever", "review_description": "I will probably get a divorce before I\u2019m even married because of this game, I\u2019ve lost friends and family and live under a bridge due to the time spent playing this game and you know what? Totally worth it!!! Overall great game and as for my life choices let\u2019s say it minus 5 stars but who cares right Fallout!!!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "1", "reviewed_at": "3 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "114872206", "uniq_id": "482f8447-015c-550c-959f-3c6e1818a549", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4053", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Lumber Man Bill", "review_title": "Best batteries around", "review_description": "[This review was collected as part of a promotion.] We have many kids toys at the house between our two children. And what do you need with all those toys? Reliable batteries. The Energizer max alkaline battery is our go to. It keeps toys running strong longer than any of the other batteries on the market. It is the only type of batteries we use in our household.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217742304", "uniq_id": "2c4e3f7a-e484-557c-97b3-cd4cb44735bf", "scraped_at": "16/01/2022 16:19:21"}, {"index": "4099", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "DrMurphy", "review_title": "Excellent open world", "review_description": "Given that it's an older game, it still has a few visual glitches than tend to happen. However, it's not enough to keep from enjoying the game. Probably in my top 10 favorite games. Highly recommended", "recommended_review": "yes: I recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "3 years ago", "rating": "4", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "114217234", "uniq_id": "e30904e2-90ea-5954-9c1a-b1d5b1a643d1", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4106", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "Jahk1313", "review_title": "Great for kids", "review_description": "I bought this for myself but didn't enjoy this game. It's great for kids but not what I was looking for.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": "Verified Purchaser", "helpful_count": "2", "not_helpful_count": "3", "reviewed_at": "3 years ago", "rating": "1", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "113927867", "uniq_id": "809621ff-822b-5689-9bf8-656117ae2f62", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4113", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Dawsonsmommy", "review_title": "Love the brand", "review_description": "[This review was collected as part of a promotion.] I have always used this brand of batteries. They have a long shelf life and keep my things going for awhile. I\u2019ve never had an issue with these batteries. I have told many of my friends and family about them.", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217713636", "uniq_id": "f0065927-1437-5b33-b08c-3d5983b402f8", "scraped_at": "16/01/2022 16:19:22"}, {"index": "4127", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "James", "review_title": "Amazing experience! Love this!!", "review_description": "[This review was collected as part of a promotion.] I use my monitor for work. Takes up less space then two monitors (I had 3) and it's just a great monitor for multitasking.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212416057", "uniq_id": "9c6b1fd9-a082-5ac9-b53c-b67839229433", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4135", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "pebbles321456", "review_title": "Best Game Ever!", "review_description": "Best game purchase ever! I have spent hundreds of hours playing this game since it came out!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "18", "not_helpful_count": "2", "reviewed_at": "4 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "104930844", "uniq_id": "4a37a58f-5ec8-5fdc-983a-e125fd3127e8", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4150", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Bigalpha1969", "review_title": "Very Powerful Batteries!", "review_description": "[This review was collected as part of a promotion.] Honestly you can't go wrong with Energizer! Works in my heavy duty flashlight perfectly! Very reasonably priced also! Very powerful & long lasting! Quality is always top notch! Packaged very well too! Highly recommended!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "4", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217681476", "uniq_id": "53e52715-cb00-5878-94bb-9d977cc32701", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4151", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Krista87", "review_title": "Long lasting", "review_description": "[This review was collected as part of a promotion.] We have a huge need for batteries in our house between a toddler and baby and these don\u2019t disappoint. We are using them in our baby\u2019s swing and use the swing for hours a day and they\u2019ve been working great!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217678113", "uniq_id": "46b2971d-f809-5009-992f-62de21cfac87", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4173", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "yaibelishere", "review_title": "Get. This. NOW!!!!!", "review_description": "this game is beyond what I expected! The gameplay was solid, the music was perfect, and the story was well crafted. A true successer to fallout 3!!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "8", "not_helpful_count": "4", "reviewed_at": "5 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "75853101", "uniq_id": "f1aefc1a-50d6-5053-8798-30aaad523482", "scraped_at": "16/01/2022 16:19:23"}, {"index": "4181", "name": "Energizer MAX Alkaline Batteries 8 Pack - D", "brand": "Energizer", "sku": "313363", "reviewer_name": "Monniemommy", "review_title": "Seem to work great so far!", "review_description": "\"[This review was collected as part of a promotion.] We have three kids, 10, 9 and 5 so we go through our fair share of batteries.  I can not tell you how many times our inlaws purchase value brand batteries to \"\"save\"\" money.  Nothing works like Energizer!\"", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 year ago", "rating": "5", "average_rating": "4.9175", "reviews_count": "424", "comment_id": "217592470", "uniq_id": "1748ba24-f1e6-5c14-8869-07f036291938", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4185", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "76Hu77", "review_title": "I love this product", "review_description": "[This review was collected as part of a promotion.] I like to play game with my monitor and watch some movies", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "4", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212411183", "uniq_id": "f5c58d7c-ac36-5bb9-9782-0ff2b3f02584", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4190", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "MeerabGamemonitor", "review_title": "Grate screen resolution!", "review_description": "[This review was collected as part of a promotion.] My son is in school,  he injoy using this monitor working school homework and playing roblox.", "recommended_review": "No: I don\u2019t recommend this product", "verifed_purchaser": null, "helpful_count": "0", "not_helpful_count": "0", "reviewed_at": "1 month ago", "rating": "5", "average_rating": "4.5319", "reviews_count": "643", "comment_id": "212404819", "uniq_id": "3eac6b5e-5fef-57fd-a394-df55d20b7347", "scraped_at": "16/01/2022 16:19:24"}, {"index": "4191", "name": "Samsung 49-in Super Ultra-Wide Dual QHD (5120x1440) 120Hz Curved Gaming Monitor C49RG9", "brand": "Samsung", "sku": "277492", "reviewer_name": "Bill S", "review_title": "The NEO G9 is Outstanding, One of a Kind", "review_description": "the neo g9 is simply outstanding. hdr is excellent with an oled-like quality. it does take some time to set up this monitor correctly. many of the negative reviews here are from folks who don't have a clue how to do that or for older generations of the odyssey g9. this review is for the neo g9 released in 2021.", "recommended_review": null, "verifed_purchaser": null, "helpful_count": null, "not_helpful_count": null, "reviewed_at": null, "rating": null, "average_rating": null, "reviews_count": null, "comment_id": null, "uniq_id": null, "scraped_at": null}, {"index": "4195", "name": "Fallout 4 - PlayStation 4", "brand": "Bethesda Softworks", "sku": "119073", "reviewer_name": "StevenDTimm", "review_title": "Fantastic Game!!", "review_description": "I bought Fallout 4 when it first came out and I cannot tell you the awesmness of this game! I have been following the Fallout series since the 1990's and since Bethesda took over the franchisee, it has been nothing but spectacular! The gameplay, graphics and audio score are wonderful. This is a game where you can truly immerse yourself in. If you liked Skyrim, you will love Fallout. It has much of the same game play mechanics and you will be able to explore a large and vast world. I would definitely recommend Fallout 4 to any serious gamer!", "recommended_review": "yes: I recommend this product", "verifed_purchaser": null, "helpful_count": "4", "not_helpful_count": "2", "reviewed_at": "5 years ago", "rating": "5", "average_rating": "4.4535", "reviews_count": "1182", "comment_id": "73940585", "uniq_id": "816a2b3f-4ee7-5267-a801-685f5f02c166", "scraped_at": "16/01/2022 16:19:24"}], "stage_runningstate": "executed", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": "{}"}}, {"_id": "678d37425351fccd0b114dbd", "mode": "staged", "originalfile": "/FileStore/platform/uploadedSourceFiles/gamestop_reviews.csv", "in": ["678d37425351fccd0b114dbc"], "out": [], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "Helpful_AutoML", "comment": "", "pipeline_id": "678d37425351fccd0b114db8", "sub_type": "Automl", "stage_type": "ml", "mlCategory": "Regression", "stage_attributes": {"model_type": "regression", "label": "helpful_count_stringindexer", "features": ["index_stringindexer", "name_stringindexer", "brand_stringindexer", "sku_stringindexer", "reviewer_name_stringindexer", "review_title_stringindexer", "review_description_stringindexer", "recommended_review_stringindexer", "verifed_purchaser_stringindexer", "not_helpful_count_stringindexer", "reviewed_at_stringindexer", "rating_stringindexer", "average_rating_stringindexer", "reviews_count_stringindexer", "comment_id_stringindexer", "uniq_id_stringindexer", "scraped_at_stringindexer"], "percentage": "60", "executionTime": "10", "sampling": "1", "sampling_value": "", "optimizeBy": "r2", "run_id": "ba3013e828bf4b7aa89f5e6722dcce67", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}, "status": "new", "position": {"x": 187, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/ml-engine/regression.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 14, "fill": "#333333", "type": "aml", "text": "Regression-AutoML", "slug": "auto-ml", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"model_type": "regression", "label": "helpful_count_stringindexer", "features": ["index_stringindexer", "name_stringindexer", "brand_stringindexer", "sku_stringindexer", "reviewer_name_stringindexer", "review_title_stringindexer", "review_description_stringindexer", "recommended_review_stringindexer", "verifed_purchaser_stringindexer", "not_helpful_count_stringindexer", "reviewed_at_stringindexer", "rating_stringindexer", "average_rating_stringindexer", "reviews_count_stringindexer", "comment_id_stringindexer", "uniq_id_stringindexer", "scraped_at_stringindexer"], "percentage": "60", "executionTime": "10", "sampling": "1", "sampling_value": "", "optimizeBy": "r2", "run_id": "ba3013e828bf4b7aa89f5e6722dcce67", "server_url": "/nexusMax/NexusMaxPlatform/uploads/platform/"}, "_id": "678d37425351fccd0b114dbd"}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "7b254440-ce6b-4cbe-9a6b-9ca33491250a", "original_schema": [{"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e27", "field": "index_stringindexer", "alias": "index_stringindexer", "type": "real", "position": "0"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e28", "field": "name_stringindexer", "alias": "name_stringindexer", "type": "real", "position": "1"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e29", "field": "brand_stringindexer", "alias": "brand_stringindexer", "type": "real", "position": "2"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e2a", "field": "sku_stringindexer", "alias": "sku_stringindexer", "type": "real", "position": "3"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e2b", "field": "reviewer_name_stringindexer", "alias": "reviewer_name_stringindexer", "type": "real", "position": "4"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e2c", "field": "review_title_stringindexer", "alias": "review_title_stringindexer", "type": "real", "position": "5"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e2d", "field": "review_description_stringindexer", "alias": "review_description_stringindexer", "type": "real", "position": "6"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e2e", "field": "recommended_review_stringindexer", "alias": "recommended_review_stringindexer", "type": "real", "position": "7"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e2f", "field": "verifed_purchaser_stringindexer", "alias": "verifed_purchaser_stringindexer", "type": "real", "position": "8"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e30", "field": "helpful_count_stringindexer", "alias": "helpful_count_stringindexer", "type": "real", "position": "9"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e31", "field": "not_helpful_count_stringindexer", "alias": "not_helpful_count_stringindexer", "type": "real", "position": "10"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e32", "field": "reviewed_at_stringindexer", "alias": "reviewed_at_stringindexer", "type": "real", "position": "11"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e33", "field": "rating_stringindexer", "alias": "rating_stringindexer", "type": "real", "position": "12"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e34", "field": "average_rating_stringindexer", "alias": "average_rating_stringindexer", "type": "real", "position": "13"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e35", "field": "reviews_count_stringindexer", "alias": "reviews_count_stringindexer", "type": "real", "position": "14"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e36", "field": "comment_id_stringindexer", "alias": "comment_id_stringindexer", "type": "real", "position": "15"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e37", "field": "uniq_id_stringindexer", "alias": "uniq_id_stringindexer", "type": "real", "position": "16"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e38", "field": "scraped_at_stringindexer", "alias": "scraped_at_stringindexer", "type": "real", "position": "17"}], "actual_schema": [{"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e15", "field": "index", "alias": "index", "type": "String", "position": "0"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e16", "field": "name", "alias": "name", "type": "String", "position": "1"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e17", "field": "brand", "alias": "brand", "type": "String", "position": "2"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e18", "field": "sku", "alias": "sku", "type": "String", "position": "3"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e19", "field": "reviewer_name", "alias": "reviewer_name", "type": "String", "position": "4"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e1a", "field": "review_title", "alias": "review_title", "type": "String", "position": "5"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e1b", "field": "review_description", "alias": "review_description", "type": "String", "position": "6"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e1c", "field": "recommended_review", "alias": "recommended_review", "type": "String", "position": "7"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e1d", "field": "verifed_purchaser", "alias": "verifed_purchaser", "type": "String", "position": "8"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e1e", "field": "helpful_count", "alias": "helpful_count", "type": "String", "position": "9"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e1f", "field": "not_helpful_count", "alias": "not_helpful_count", "type": "String", "position": "10"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e20", "field": "reviewed_at", "alias": "reviewed_at", "type": "String", "position": "11"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e21", "field": "rating", "alias": "rating", "type": "String", "position": "12"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e22", "field": "average_rating", "alias": "average_rating", "type": "String", "position": "13"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e23", "field": "reviews_count", "alias": "reviews_count", "type": "String", "position": "14"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e24", "field": "comment_id", "alias": "comment_id", "type": "String", "position": "15"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e25", "field": "uniq_id", "alias": "uniq_id", "type": "String", "position": "16"}, {"checked": true, "inherited": true, "is_categorical": false, "bad_values": "", "nullable": "true", "_id": "678d3aa95351fccd0b114e26", "field": "scraped_at", "alias": "scraped_at", "type": "String", "position": "17"}], "selected_schema": [], "created_at": "2025-01-19 17:32:50.388000", "originalcount": 5321, "samplecount": 544, "samplefile": "/FileStore/platform/sampleData/678d37425351fccd0b114dbb/part-00000-6bb59f94-0e63-4601-a3a6-3d55a8a0700f-c000.csv", "joinSchema": [], "updated_at": "2025-01-19 20:19:49.245000", "__v": 0, "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": {}}}]